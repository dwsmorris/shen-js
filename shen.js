/* Copyright (c) 2015, Mark Tarver

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.
3. The name of Mark Tarver may not be used to endorse or promote products
   derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
EVENT SHALL Mark Tarver BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE. */

Shen = {};

Shen.globals = {};

Shen.globals["*language*"] = "Javascript";
Shen.globals["*implementation*"] = "cli";
Shen.globals["*port*"] = Shen.version = "13.0.2";
Shen.globals["*porters*"] = Shen.author = "Ramil Farkhshatov";

Shen.Tag = function(name) {
  this.toString = function() {
    return "#<Shen.Tag " + name + ">";
  }
}

Shen.fail_obj = new Shen.Tag('fail_obj');
Shen.fns = {};

Shen.type_func = new Shen.Tag('func');
Shen.type_symbol = new Shen.Tag('sym');
Shen.type_cons = new Shen.Tag('cons');
Shen.type_stream_in = new Shen.Tag('stream_in');
Shen.type_stream_out = new Shen.Tag('stream_out');
Shen.type_stream_inout = new Shen.Tag('stream_inout');
Shen.type_error = new Shen.Tag('error');

Shen.mkfunction = function(name, nargs, fn) {
  var x = [Shen.type_func, fn, nargs, [], name]
  Shen.fns[name] = x
  return x
}

Shen.defun = function(name, arity, func) {
  function f(args) {
    if (args.length < arity) return [Shen.type_func, f, arity, args]
    return func(args)
  }
  return Shen.mkfunction(name, arity, f)
}

Shen.call_tail = function(x, args) {
  var j = 0, nargs = args.length;
  for (;;) {
    if (typeof(x) == "function") {
      x = x([args[j++]]);
    } else if (x[0] == Shen.type_func) {
      var c = x[3], n = c.length, arity = x[2], a;
      if (!j && !n && nargs <= arity) {
        a = args;
        j += nargs;
      } else {
        if (arity > n + nargs) {
          arity = n + nargs;
          e = nargs;
        } else {
          e = arity - n;
        }
        a = c.concat(args.slice(j, e));
        j = e;
      }
      x = (x[1])(a);
    } else if (x[0] == Shen.type_symbol) {
      x = Shen.get_fn(x);
    } else
      return Shen.error("Shen.call: Wrong function: '" + x + "'");
    if (j >= nargs)
      return x;
    while (typeof(x) == "function")
      x = x();
  }
  return x;
}

Shen.call = function(x, args) {
  var x = Shen.call_tail(x, args)
  while (typeof(x) == "function")
    x = x()
  return x
}

Shen.call_by_name = function(x, args) {
  return Shen.call(Shen.fns[x], args)
}

Shen.call_toplevel = function(fn) {
  return Shen.call(fn, [])
}

Shen.unwind_tail = function(x) {
  while(typeof(x) == "function")
    x = x()
  return x
}

Shen.get_fn = function(x) {
  if (typeof(x) == "function")
    Shen.error("passed function into get_fn")
  switch (x[0]) {
  case Shen.type_func: return x
  case Shen.type_symbol:
    var v = Shen.fns[x[1]]
    if (v != undefined)
      return v
    Shen.error("Cannot find '" + x[1] + "'")
    return Shen.fail_obj
  }
  throw new Error("function " + x[1] + " not found")
}

Shen.thaw = function(f) {
  return f.fn(f.vars)
}

Shen.thaw = function(f) {return this.call(f, []);}

Shen.error = function(s) {
  if (Shen.is_true(Shen.globals['shenjs.*show-error-js*']))
    Shen.io.puts("# err: " + s + "\n")
  throw new Error(s);
  return Shen.fail_obj
}

Shen.error_to_string = function(s) {
  var stack = s.stack;
  var show = (stack !== undefined);
  show &= Shen.is_true(Shen.globals["shenjs.*show-error-stack*"]);
  return (show) ? ("" + s + " " + stack) : ("" + s);
}

Shen.get_time = function(x) {
  return (new Date()).getTime() / 1000.0;
}

Shen.simple_error = Shen.error;
Shen.log_eq = false;

Shen.trap_error = function(fn, handler) {
  try {
    return Shen.call(fn, []);
  } catch (e) {
    return Shen.call(handler, [e]);
  }
}

Shen.notrap_error = function(fn, handler) {
  return fn();
}

Shen.equal_boolean = function(b, x) {
  return ((x instanceof Array)
          && x[0] == Shen.type_symbol
          && ((x[1] == "true" && b === true)
              || (x[1] == "false" && b === false)));
}

Shen.equal_function = function(f, x) {
  return (x[0] == Shen.type_symbol && f[0] == Shen.type_func && x[1] == f[4])
}

Shen.is_equal = function(x, y) {
  if (x === y)
    return true
  var tx = typeof(x), ty = typeof(y)
  if (tx != ty)
    return ((tx == "boolean" && Shen.equal_boolean(x, y))
            || (ty == "boolean" && Shen.equal_boolean(y, x)))
  switch (tx) {
  case "number":
  case "boolean":
  case "function":
  case "string":
    return x == y;

  case "object":
    if (x == y)
      return true

    if ((x instanceof Array) ^ (y instanceof Array))
      return false

    if (Shen.equal_function(x, y) || Shen.equal_function(y, x))
      return true
    if (x.length != y.length)
      return false
    if (x.length == 0)
      return true
    if (x == Shen.fail_obj && y == Shen.fail_obj)
      return true
    if (x[0] != y[0])
      return false
    switch (x[0]) {
    case Shen.type_func:
     if (x[1] != y[1] || x[2] != y[2])
        return false
      var n = x[3].length
      if (n != y[3].length)
        return false
      for (var i = 0; i < n; ++i)
        if (x[3][i] != y[3][i])
          return false
      return true
    case Shen.type_symbol: return x[1] == y[1];
    case Shen.type_cons:
      var r = Shen.$eq$(x[1], y[1])
      while (typeof(r) == "function")
        r = r()
      if (!r)
        return false
      return (function() {
        var r = Shen.$eq$(x[2], y[2])
        while (typeof(r) == "function")
          r = r()
        return r
      });
    case Shen.type_stream_out:
    case Shen.type_stream_in: return x[1] == y[1] && x[2] == y[2];
    default:
      for (var i = 1; i < x.length; ++i) {
        var r = Shen.$eq$(x[i], y[i])
        while (typeof(r) == "function")
          r = r()
        if (!r)
          return false;
      }
      return true;
    }
    break;
  default: return false;
  }
}

Shen.$eq$ = Shen.is_equal;

Shen.empty$question$ = function(x) {
  return ((x instanceof Array) && !x.length)
}

Shen.is_type = function(x, type) {
  if (type == Shen.type_symbol && (x === true || x === false))
    return true
  return ((x instanceof Array) && x[0] == type)
}

Shen.boolean$question$ = function(x) {
  return (typeof(x) == "boolean") || (Shen.is_type(x, Shen.type_symbol)
                                      && (x[1] == "true" || x[1] == "false"))
}

Shen.vector$question$ = function(x) {
  return ((x instanceof Array) && x[0] > 0)
}

Shen.absvector$question$ = function(x) {
  return ((x instanceof Array) && x.length > 0
          && (!(x[0] instanceof Shen.Tag)))
}

Shen.absvector = function(n) {
  var ret = new Array(n)
  for (var i = 0; i < n; ++i)
    ret[i] = Shen.fail_obj
  return ret
}

Shen.dbg_princ = function(s, x) {
  dbg_print(" " + s + x)
  return x
}

Shen.dbg_print = function(s) {
  if (Shen.is_true(Shen.globals['shenjs.*show-error-js*']))
    Shen.io.puts(s + "\n")
}

Shen.is_true = function(x) {
  return x != false || ((x instanceof Array)
                        && (x[0] == Shen.type_symbol)
                        && (x[1] != "false"))
}

Shen.absvector_ref = function(x, i) {
  if (x.length <= i || i < 0)
    Shen.error("out of range")
  return x[i]
}

Shen.absvector_set = function(x, i, v) {
  if (x.length <= i || i < 0)
    Shen.error("out of range")
  x[i] = v
  return x
}

Shen.value = function(x) {
  var y = Shen.globals[s[1]]
  if (y === undefined)
    Shen.error("The variable " + x + " is unbound.")
  else
    return y
}

Shen.vector = function(n) {
  var r = new Array(n + 1)
  r[0] = n
  for (var i = 1; i <= n; ++i)
    r[i] = Shen.fail_obj
  return r
}

Shen.esc = function(x) {
  var ret = ""
  for (var i = 0; i < x.length; ++i)
    switch (x[i]) {
      case '"': ret += '\\"'; break;
      default: ret += x[i]; break
    }
  return ret
}

Shen.str = function(x) {
  var err = " is not an atom in Shen; str cannot print it to a string."
  switch (typeof(x)) {
    case "string": return "\"" + Shen.esc(x) + "\""
    case "number":
    case "boolean": return "" + x
    case "function":
      return "#<function>"
    case "object":
      if (x == Shen.fail_obj)
        return "fail!"
      if (x instanceof Array) {
        if (x.length <= 0) {
          Shen.error("[]" + err)
          return Shen.fail_obj
        }
        switch (x[0]) {
          case Shen.type_symbol: return x[1]
          case Shen.type_func:
            if (!x[3].length && x[4] != undefined)
              return x[4]
            if (Shen.is_true(Shen.globals['shenjs.*show-func-js*']))
              Shen.io.puts("\n func: " + x + "\n\n")
            return (x[3].length == 0) ? "#<function>" : "#<closure>"
        }
      }
  }
  Shen.error([x + err])
  return Shen.fail_obj
}

Shen.intern = function(x) {
  switch (x) {
  case "true": return true
  case "false": return false
  default: return [Shen.type_symbol, x]
  }
}

Shen.tlstr = function(x) {
  if (x == "")
    return [Shen.type_symbol, "shen_eos"]
  return x.substring(1, x.length)
}

Shen.n_$gt$string = function(x) {
  return String.fromCharCode(x)
}

Shen.string_$gt$n = function(x) {
  return x.charCodeAt(0)
}

Shen.eval_kl = function(x) {
  var log = false
  if (Shen.is_true(Shen.globals['shenjs.*show-eval-js*']))
    log = true
  if (log)
    Shen.io.puts("# eval-kl[KL]: " + "\n" + Shen.shenstr(x) + "\n\n")
  var js = Shen.call_by_name("js-from-kl", [x])
  if (log)
    Shen.io.puts("eval-kl[JS]:\n" + js + "\n\n")
  var ret = eval(js)
  if (log)
    Shen.io.puts("eval-kl => '" + ret + "'\n\n")
  if (ret === undefined)
    Shen.error("evaluated '" + js + "' to undefined")
  return ret
}

Shen.eval_string = function(str) {
  var x = Shen.call_by_name("read-from-string", [str])
  if (Shen.empty$question$(x))
    return []
  if (!Shen.is_type(x, Shen.type_cons)) {
    Shen.error("Broken read-from-string return value")
    return Shen.fail_obj
  }
  var js = Shen.call_by_name("js-from-shen", [x[1]])
  return eval(js)
}

Shen.mkfunction("shenjs.load", 1, function self(x) {
  if (x.length < 1) return [Shen.type_func, self, 1, x]
  return (function() {
    load(x)
    return []
  })
})

Shen.Utf8_reader = function (str) {
  this.str = (str == null) ? "" : str
  this.strpos = 0
  this.bytes = Array(6)
  this.bytepos = 0
  this.nbytes = 0
  this.read_byte = function () {
    if (this.bytepos < this.nbytes)
      return this.bytes[this.bytepos++]
    if (this.strpos >= this.str.length)
      return -1
    var c = this.str.charCodeAt(this.strpos++)
    this.bytepos = 0
    this.nbytes = 0
    if (c <= 0x7f)
      return c
    if (c <= 0x7ff) {
      var n = 1
      var c0 = (c >> 6) | 192
    } else if (c <= 0xffff) {
      var n = 2
      var c0 = (c >> 12) | 224
    } else if (c <= 0x1fffff) {
      var n = 3
      var c0 = (c >> 18) | 240
    } else if (c <= 0x3ffffff) {
      var n = 4
      var c0 = (c >> 24) | 248
    } else if (c <= 0x7fffffff) {
      var n = 5
      var c0 = (c >> 30) | 252
    } else {
      return Shen.error('Character ' + c + ' cannot be coded to UTF-8')
    }
    this.nbytes = n
    var shift = (n - 1) * 6
    for (i = 0; i < n; ++i, shift -= 6)
      this.bytes[i] = ((c >> shift) & 63) | 128
    return c0
  }
}

Shen.Utf8_writer = function(char_fn) {
  this.nbytes = 0
  this.char = 0
  this.bytespos = 0
  this.write_byte = function(byte) {
    if (!(byte & 0x80)) {
      char_fn(byte)
      this.bytespos = 0
    } else if ((byte & 224) == 192) {
      this.char = byte & 31
      this.nbytes = 2
      this.bytespos = 1
    } else if ((byte & 240) == 224) {
      this.char = byte & 15
      this.nbytes = 3
      this.bytespos = 1
    } else if ((byte & 248) == 240) {
      this.char = byte & 7
      this.nbytes = 4
      this.bytespos = 1
    } else if ((byte & 252) == 248) {
      this.char = byte & 3
      this.nbytes = 5
      this.bytespos = 1
    } else if ((byte & 254) == 252) {
      this.char = byte & 1
      this.nbytes = 6
      this.bytespos = 1
    } else {
      this.char = (this.char << 6) | (byte & 0x7f)
      this.bytespos++
      if (this.bytespos >= this.nbytes) {
        char_fn(this.char)
        this.bytespos = 0
        this.nbytes = 0
      }
    }
  }
}

Shen.str_from_utf8 = function(s) {
  var ret = ""
  function emit(x) {ret += String.fromCharCode(x)}
  var w = new Shen.Utf8_writer(emit)
  var n = s.length
  for (var i = 0; i < n; ++i)
    w.write_byte(s[i])
  return ret
}

Shen.file_instream_get_buf = function(stream, buf, pos) {
  if (buf.byteLength <= pos) {
    stream[1] = (function() {return -1})
    return -1
  }
  stream[1] = (function() {
    return Shen.file_instream_get_buf(stream, buf, pos + 1)
  })
  return buf[pos]
}

Shen.read_byte = function(stream) {
 switch (stream[0]) {
    case Shen.type_stream_in: return stream[1]()
    case Shen.type_stream_inout: return Shen.read_byte(stream[1])
    default:
      Shen.error("read-byte: Wrong stream type.")
      return -1;
  }
}

Shen.write_byte = function(byte, stream) {
 switch (stream[0]) {
    case Shen.type_stream_out: stream[1](byte); break;
    case Shen.type_stream_inout: Shen.write_byte(byte, stream[2]); break;
    default: Shen.error("write-byte: Wrong stream type.")
  }
  return []
}

Shen.close = function(stream) {
  switch (stream[0]) {
    case Shen.type_stream_in:
      stream[2]()
      stream[1] = (function() {return -1});
      break;
    case Shen.type_stream_out:
      stream[2]()
      stream[1] = (function(_) {return []});
      break;
    case Shen.type_stream_inout:
      Shen.close(stream[1])
      Shen.close(stream[2])
      break;
  }
  return []
}

Shen.open = function() {
  return this.io.open.apply(this.io, arguments)
}

Shen.repl_read_byte = function (stream, strbuf) {
  var x = strbuf.read_byte()
  if (x >= 0)
    return x
  var str = Shen.io.gets()
  if (str == null) {
    quit()
    return -1
  }
  strbuf = new Shen.Utf8_reader(str + '\n')
  stream[1] = (function() {
    return Shen.repl_read_byte(stream, strbuf)
  })
  return stream[1]()
}

Shen.pr = function(s, stream) {
  for (i = 0; i < s.length; ++i)
    Shen.write_byte(s.charCodeAt(i), stream)
  return s
}

Shen.shenstr = function(x) {
  return Shen.call_by_name("shen.app", [x, "", [Shen.type_symbol, "shen.s"]])
}

Shen.mkfunction("shenjs.exit", 1, function self(x) {quit()})
Shen.globals["js.skip-internals"] = true

Shen.globals["shenjs.*show-error-js*"] = false
Shen.globals["shenjs.*show-error-stack*"] = false
Shen.globals["shenjs.*show-eval-js*"] = false
Shen.globals["shenjs.*show-func-js*"] = false
Shen.globals["shenjs.*dbg-js*"] = false
Shen.globals["*home-directory*"] = ""

/* dummy functions to bypass defstruct's declarations */
Shen.mkfunction("shen.process-datatype", 2, function(_) {return []})
Shen.mkfunction("compile", 3, function(_) {return []})
Shen.mkfunction("declare", 2, function(_) {return []})

Shen.console_io = {
  open: function(name, dir) {
    var filename = Shen.globals["*home-directory*"] + name
    if (dir[1] == "in") {
      try {
        var buf = readbuffer(filename)
      } catch(e) {
        try {
          var buf = read(filename, 'binary')
        } catch (e) {
          Shen.error(e)
          return Shen.fail_obj
        }
      }
      var stream = [Shen.type_stream_in, null, function(){}]
      if (buf.byteLength !== undefined) {
        stream[1] = (function() {
          return Shen.file_instream_get_buf(stream, buf, 0)
        })
      } else {
        var strbuf = new Shen.Utf8_reader(buf)
        stream[1] = (function() {return strbuf.read_byte()})
      }
      return stream
    } else if (dir[1] == "out") {
      Shen.error("Writing files is not supported in cli interpreter")
      return Shen.fail_obj
    }
    Shen.error("Unsupported open flags")
    return Shen.fail_obj
  },

  init: function() {
    try {
      this.puts = putstr;
    } catch (e) {
      this.puts = write;
    }
    this.gets = readline;
    var writer = new Shen.Utf8_writer(function(char) {
       Shen.io.puts(String.fromCharCode(char))
    })
    var fout = [Shen.type_stream_out,
                function(byte) {return writer.write_byte(byte)},
                function() {}]
    Shen.globals["*stoutput*"] = fout
    
    var fin = [Shen.type_stream_in, null, quit]
    var strbuf = new Shen.Utf8_reader(null)
    fin[1] = (function() {
      return Shen.repl_read_byte(fin, strbuf)
    })
    
    var finout = [Shen.type_stream_inout, fin, fout]
    Shen.globals["*stinput*"] = finout
  }
}

Shen.init = function(conf) {
  Shen.io = conf.io
  Shen.io.init()
  function assert_io(func) {
    if (Shen.io[func] === undefined)
      throw new Error("Shen: IO has no method " + func)
  }
  assert_io('gets')
  assert_io('puts')
  assert_io('open')
  if (conf.start_repl)
    Shen.call_by_name("shen.shen", [])
}

Shen.console_repl = function () {
  Shen.init({io: Shen.console_io, start_repl: true});
}

Shen.xstr_list = function(x) {
  var lst = [];
  while (!this.empty$question$(x)) {
    lst.push(this.xstr(x[1]));
    x = x[2];
  }
  return "[" + lst.join(" ") + "]";
}

Shen.xstr = function(x) {
  switch (typeof(x)) {
    case 'string': return x;
    case 'number': return '' + x;
    case 'boolean': return '' + x;
  }
  if (this.is_type(x, this.type_symbol))
    return x[1];
  if (this.is_type(x, this.type_cons))
    return this.xstr_list(x);
  if (this.empty$question$(x))
    return "[]";
  function str(x) {
    return Shen.xstr(x);
  }
  if (this.vector$question$(x))
    return "<" + x.map(str).join(" ") + ">";
  if (x instanceof Array)
    return "<<" + x.map(str).join(" ") + ">>";
  return '' + x;
}

Shen.list = function(x) {
  var ret = [];
  for (var i = x.length - 1; i >= 0; --i)
    ret = [Shen.type_cons, x[i], ret];
  return ret;
}

try {
  module.exports = Shen
} catch (e) {}


Shen.fns["hd"] = [Shen.type_func, function shen_user_lambda3871(Arg3869) {
  if (Arg3869.length < 1) return [Shen.type_func, shen_user_lambda3871, 1, Arg3869];
  var Arg3869_0 = Arg3869[0];
  return Arg3869_0[1]}, 1, [], "hd"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3872(Arg3869) {
  if (Arg3869.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3872, 0, Arg3869];
  return []});





Shen.fns["tl"] = [Shen.type_func, function shen_user_lambda3875(Arg3873) {
  if (Arg3873.length < 1) return [Shen.type_func, shen_user_lambda3875, 1, Arg3873];
  var Arg3873_0 = Arg3873[0];
  return Arg3873_0[2]}, 1, [], "tl"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3876(Arg3873) {
  if (Arg3873.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3876, 0, Arg3873];
  return []});





Shen.fns["not"] = [Shen.type_func, function shen_user_lambda3879(Arg3877) {
  if (Arg3877.length < 1) return [Shen.type_func, shen_user_lambda3879, 1, Arg3877];
  var Arg3877_0 = Arg3877[0];
  return (!Arg3877_0)}, 1, [], "not"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3880(Arg3877) {
  if (Arg3877.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3880, 0, Arg3877];
  return []});





Shen.fns["thaw"] = [Shen.type_func, function shen_user_lambda3883(Arg3881) {
  if (Arg3881.length < 1) return [Shen.type_func, shen_user_lambda3883, 1, Arg3881];
  var Arg3881_0 = Arg3881[0];
  return Shen.thaw(Arg3881_0)}, 1, [], "thaw"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3884(Arg3881) {
  if (Arg3881.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3884, 0, Arg3881];
  return []});





Shen.fns["string?"] = [Shen.type_func, function shen_user_lambda3887(Arg3885) {
  if (Arg3885.length < 1) return [Shen.type_func, shen_user_lambda3887, 1, Arg3885];
  var Arg3885_0 = Arg3885[0];
  return (typeof(Arg3885_0) == 'string')}, 1, [], "string?"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3888(Arg3885) {
  if (Arg3885.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3888, 0, Arg3885];
  return []});





Shen.fns["number?"] = [Shen.type_func, function shen_user_lambda3891(Arg3889) {
  if (Arg3889.length < 1) return [Shen.type_func, shen_user_lambda3891, 1, Arg3889];
  var Arg3889_0 = Arg3889[0];
  return (typeof(Arg3889_0) == 'number')}, 1, [], "number?"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3892(Arg3889) {
  if (Arg3889.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3892, 0, Arg3889];
  return []});





Shen.fns["symbol?"] = [Shen.type_func, function shen_user_lambda3895(Arg3893) {
  if (Arg3893.length < 1) return [Shen.type_func, shen_user_lambda3895, 1, Arg3893];
  var Arg3893_0 = Arg3893[0];
  return Shen.is_type(Arg3893_0, Shen.type_symbol)}, 1, [], "symbol?"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3896(Arg3893) {
  if (Arg3893.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3896, 0, Arg3893];
  return []});





Shen.fns["cons?"] = [Shen.type_func, function shen_user_lambda3899(Arg3897) {
  if (Arg3897.length < 1) return [Shen.type_func, shen_user_lambda3899, 1, Arg3897];
  var Arg3897_0 = Arg3897[0];
  return Shen.is_type(Arg3897_0, Shen.type_cons)}, 1, [], "cons?"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3900(Arg3897) {
  if (Arg3897.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3900, 0, Arg3897];
  return []});





Shen.fns["vector?"] = [Shen.type_func, function shen_user_lambda3903(Arg3901) {
  if (Arg3901.length < 1) return [Shen.type_func, shen_user_lambda3903, 1, Arg3901];
  var Arg3901_0 = Arg3901[0];
  return (function() {
  return Shen.vector$question$(Arg3901_0);})}, 1, [], "vector?"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3904(Arg3901) {
  if (Arg3901.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3904, 0, Arg3901];
  return []});





Shen.fns["absvector?"] = [Shen.type_func, function shen_user_lambda3907(Arg3905) {
  if (Arg3905.length < 1) return [Shen.type_func, shen_user_lambda3907, 1, Arg3905];
  var Arg3905_0 = Arg3905[0];
  return (function() {
  return Shen.absvector$question$(Arg3905_0);})}, 1, [], "absvector?"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3908(Arg3905) {
  if (Arg3905.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3908, 0, Arg3905];
  return []});





Shen.fns["value"] = [Shen.type_func, function shen_user_lambda3911(Arg3909) {
  if (Arg3909.length < 1) return [Shen.type_func, shen_user_lambda3911, 1, Arg3909];
  var Arg3909_0 = Arg3909[0];
  return (Shen.globals[Arg3909_0[1]])}, 1, [], "value"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3912(Arg3909) {
  if (Arg3909.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3912, 0, Arg3909];
  return []});





Shen.fns["intern"] = [Shen.type_func, function shen_user_lambda3915(Arg3913) {
  if (Arg3913.length < 1) return [Shen.type_func, shen_user_lambda3915, 1, Arg3913];
  var Arg3913_0 = Arg3913[0];
  return (function() {
  return Shen.intern(Arg3913_0);})}, 1, [], "intern"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3916(Arg3913) {
  if (Arg3913.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3916, 0, Arg3913];
  return []});





Shen.fns["vector"] = [Shen.type_func, function shen_user_lambda3919(Arg3917) {
  if (Arg3917.length < 1) return [Shen.type_func, shen_user_lambda3919, 1, Arg3917];
  var Arg3917_0 = Arg3917[0];
  return (function() {
  return Shen.vector(Arg3917_0);})}, 1, [], "vector"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3920(Arg3917) {
  if (Arg3917.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3920, 0, Arg3917];
  return []});





Shen.fns["read-byte"] = [Shen.type_func, function shen_user_lambda3923(Arg3921) {
  if (Arg3921.length < 1) return [Shen.type_func, shen_user_lambda3923, 1, Arg3921];
  var Arg3921_0 = Arg3921[0];
  return (function() {
  return Shen.read_byte(Arg3921_0);})}, 1, [], "read-byte"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3924(Arg3921) {
  if (Arg3921.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3924, 0, Arg3921];
  return []});





Shen.fns["close"] = [Shen.type_func, function shen_user_lambda3927(Arg3925) {
  if (Arg3925.length < 1) return [Shen.type_func, shen_user_lambda3927, 1, Arg3925];
  var Arg3925_0 = Arg3925[0];
  return (function() {
  return Shen.close(Arg3925_0);})}, 1, [], "close"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3928(Arg3925) {
  if (Arg3925.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3928, 0, Arg3925];
  return []});





Shen.fns["absvector"] = [Shen.type_func, function shen_user_lambda3931(Arg3929) {
  if (Arg3929.length < 1) return [Shen.type_func, shen_user_lambda3931, 1, Arg3929];
  var Arg3929_0 = Arg3929[0];
  return (function() {
  return Shen.absvector(Arg3929_0);})}, 1, [], "absvector"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3932(Arg3929) {
  if (Arg3929.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3932, 0, Arg3929];
  return []});





Shen.fns["str"] = [Shen.type_func, function shen_user_lambda3935(Arg3933) {
  if (Arg3933.length < 1) return [Shen.type_func, shen_user_lambda3935, 1, Arg3933];
  var Arg3933_0 = Arg3933[0];
  return (function() {
  return Shen.str(Arg3933_0);})}, 1, [], "str"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3936(Arg3933) {
  if (Arg3933.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3936, 0, Arg3933];
  return []});





Shen.fns["tlstr"] = [Shen.type_func, function shen_user_lambda3939(Arg3937) {
  if (Arg3937.length < 1) return [Shen.type_func, shen_user_lambda3939, 1, Arg3937];
  var Arg3937_0 = Arg3937[0];
  return (function() {
  return Shen.tlstr(Arg3937_0);})}, 1, [], "tlstr"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3940(Arg3937) {
  if (Arg3937.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3940, 0, Arg3937];
  return []});





Shen.fns["n->string"] = [Shen.type_func, function shen_user_lambda3943(Arg3941) {
  if (Arg3941.length < 1) return [Shen.type_func, shen_user_lambda3943, 1, Arg3941];
  var Arg3941_0 = Arg3941[0];
  return (function() {
  return Shen.n_$gt$string(Arg3941_0);})}, 1, [], "n->string"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3944(Arg3941) {
  if (Arg3941.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3944, 0, Arg3941];
  return []});





Shen.fns["string->n"] = [Shen.type_func, function shen_user_lambda3947(Arg3945) {
  if (Arg3945.length < 1) return [Shen.type_func, shen_user_lambda3947, 1, Arg3945];
  var Arg3945_0 = Arg3945[0];
  return (function() {
  return Shen.string_$gt$n(Arg3945_0);})}, 1, [], "string->n"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3948(Arg3945) {
  if (Arg3945.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3948, 0, Arg3945];
  return []});





Shen.fns["empty?"] = [Shen.type_func, function shen_user_lambda3951(Arg3949) {
  if (Arg3949.length < 1) return [Shen.type_func, shen_user_lambda3951, 1, Arg3949];
  var Arg3949_0 = Arg3949[0];
  return (function() {
  return Shen.empty$question$(Arg3949_0);})}, 1, [], "empty?"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3952(Arg3949) {
  if (Arg3949.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3952, 0, Arg3949];
  return []});





Shen.fns["get-time"] = [Shen.type_func, function shen_user_lambda3955(Arg3953) {
  if (Arg3953.length < 1) return [Shen.type_func, shen_user_lambda3955, 1, Arg3953];
  var Arg3953_0 = Arg3953[0];
  return (function() {
  return Shen.get_time(Arg3953_0);})}, 1, [], "get-time"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3956(Arg3953) {
  if (Arg3953.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3956, 0, Arg3953];
  return []});





Shen.fns["error"] = [Shen.type_func, function shen_user_lambda3959(Arg3957) {
  if (Arg3957.length < 1) return [Shen.type_func, shen_user_lambda3959, 1, Arg3957];
  var Arg3957_0 = Arg3957[0];
  return (function() {
  return Shen.error(Arg3957_0);})}, 1, [], "error"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3960(Arg3957) {
  if (Arg3957.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3960, 0, Arg3957];
  return []});





Shen.fns["simple-error"] = [Shen.type_func, function shen_user_lambda3963(Arg3961) {
  if (Arg3961.length < 1) return [Shen.type_func, shen_user_lambda3963, 1, Arg3961];
  var Arg3961_0 = Arg3961[0];
  return (function() {
  return Shen.simple_error(Arg3961_0);})}, 1, [], "simple-error"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3964(Arg3961) {
  if (Arg3961.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3964, 0, Arg3961];
  return []});





Shen.fns["eval-kl"] = [Shen.type_func, function shen_user_lambda3967(Arg3965) {
  if (Arg3965.length < 1) return [Shen.type_func, shen_user_lambda3967, 1, Arg3965];
  var Arg3965_0 = Arg3965[0];
  return (function() {
  return Shen.eval_kl(Arg3965_0);})}, 1, [], "eval-kl"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3968(Arg3965) {
  if (Arg3965.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3968, 0, Arg3965];
  return []});





Shen.fns["error-to-string"] = [Shen.type_func, function shen_user_lambda3971(Arg3969) {
  if (Arg3969.length < 1) return [Shen.type_func, shen_user_lambda3971, 1, Arg3969];
  var Arg3969_0 = Arg3969[0];
  return (function() {
  return Shen.error_to_string(Arg3969_0);})}, 1, [], "error-to-string"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3972(Arg3969) {
  if (Arg3969.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3972, 0, Arg3969];
  return []});





Shen.fns["js.call-js"] = [Shen.type_func, function shen_user_lambda3975(Arg3973) {
  if (Arg3973.length < 1) return [Shen.type_func, shen_user_lambda3975, 1, Arg3973];
  var Arg3973_0 = Arg3973[0];
  return (function() {
  return Shen.js$dot$call_js(Arg3973_0);})}, 1, [], "js.call-js"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3976(Arg3973) {
  if (Arg3973.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3976, 0, Arg3973];
  return []});





Shen.fns["+"] = [Shen.type_func, function shen_user_lambda3979(Arg3977) {
  if (Arg3977.length < 2) return [Shen.type_func, shen_user_lambda3979, 2, Arg3977];
  var Arg3977_0 = Arg3977[0], Arg3977_1 = Arg3977[1];
  return (Arg3977_0 + Arg3977_1)}, 2, [], "+"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3980(Arg3977) {
  if (Arg3977.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3980, 0, Arg3977];
  return []});





Shen.fns["-"] = [Shen.type_func, function shen_user_lambda3983(Arg3981) {
  if (Arg3981.length < 2) return [Shen.type_func, shen_user_lambda3983, 2, Arg3981];
  var Arg3981_0 = Arg3981[0], Arg3981_1 = Arg3981[1];
  return (Arg3981_0 - Arg3981_1)}, 2, [], "-"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3984(Arg3981) {
  if (Arg3981.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3984, 0, Arg3981];
  return []});





Shen.fns["*"] = [Shen.type_func, function shen_user_lambda3987(Arg3985) {
  if (Arg3985.length < 2) return [Shen.type_func, shen_user_lambda3987, 2, Arg3985];
  var Arg3985_0 = Arg3985[0], Arg3985_1 = Arg3985[1];
  return (Arg3985_0 * Arg3985_1)}, 2, [], "*"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3988(Arg3985) {
  if (Arg3985.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3988, 0, Arg3985];
  return []});





Shen.fns["/"] = [Shen.type_func, function shen_user_lambda3991(Arg3989) {
  if (Arg3989.length < 2) return [Shen.type_func, shen_user_lambda3991, 2, Arg3989];
  var Arg3989_0 = Arg3989[0], Arg3989_1 = Arg3989[1];
  return (Arg3989_0 / Arg3989_1)}, 2, [], "/"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3992(Arg3989) {
  if (Arg3989.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3992, 0, Arg3989];
  return []});





Shen.fns["and"] = [Shen.type_func, function shen_user_lambda3995(Arg3993) {
  if (Arg3993.length < 2) return [Shen.type_func, shen_user_lambda3995, 2, Arg3993];
  var Arg3993_0 = Arg3993[0], Arg3993_1 = Arg3993[1];
  return (Arg3993_0 && Arg3993_1)}, 2, [], "and"];

Shen.call_toplevel(function js$dot$shen_js_toplevel3996(Arg3993) {
  if (Arg3993.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel3996, 0, Arg3993];
  return []});





Shen.fns["or"] = [Shen.type_func, function shen_user_lambda3999(Arg3997) {
  if (Arg3997.length < 2) return [Shen.type_func, shen_user_lambda3999, 2, Arg3997];
  var Arg3997_0 = Arg3997[0], Arg3997_1 = Arg3997[1];
  return (Arg3997_0 || Arg3997_1)}, 2, [], "or"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4000(Arg3997) {
  if (Arg3997.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4000, 0, Arg3997];
  return []});





Shen.fns["="] = [Shen.type_func, function shen_user_lambda4003(Arg4001) {
  if (Arg4001.length < 2) return [Shen.type_func, shen_user_lambda4003, 2, Arg4001];
  var Arg4001_0 = Arg4001[0], Arg4001_1 = Arg4001[1];
  return Shen.$eq$(Arg4001_0, Arg4001_1)}, 2, [], "="];

Shen.call_toplevel(function js$dot$shen_js_toplevel4004(Arg4001) {
  if (Arg4001.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4004, 0, Arg4001];
  return []});





Shen.fns[">"] = [Shen.type_func, function shen_user_lambda4007(Arg4005) {
  if (Arg4005.length < 2) return [Shen.type_func, shen_user_lambda4007, 2, Arg4005];
  var Arg4005_0 = Arg4005[0], Arg4005_1 = Arg4005[1];
  return (Arg4005_0 > Arg4005_1)}, 2, [], ">"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4008(Arg4005) {
  if (Arg4005.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4008, 0, Arg4005];
  return []});





Shen.fns[">="] = [Shen.type_func, function shen_user_lambda4011(Arg4009) {
  if (Arg4009.length < 2) return [Shen.type_func, shen_user_lambda4011, 2, Arg4009];
  var Arg4009_0 = Arg4009[0], Arg4009_1 = Arg4009[1];
  return (Arg4009_0 >= Arg4009_1)}, 2, [], ">="];

Shen.call_toplevel(function js$dot$shen_js_toplevel4012(Arg4009) {
  if (Arg4009.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4012, 0, Arg4009];
  return []});





Shen.fns["<"] = [Shen.type_func, function shen_user_lambda4015(Arg4013) {
  if (Arg4013.length < 2) return [Shen.type_func, shen_user_lambda4015, 2, Arg4013];
  var Arg4013_0 = Arg4013[0], Arg4013_1 = Arg4013[1];
  return (Arg4013_0 < Arg4013_1)}, 2, [], "<"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4016(Arg4013) {
  if (Arg4013.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4016, 0, Arg4013];
  return []});





Shen.fns["<="] = [Shen.type_func, function shen_user_lambda4019(Arg4017) {
  if (Arg4017.length < 2) return [Shen.type_func, shen_user_lambda4019, 2, Arg4017];
  var Arg4017_0 = Arg4017[0], Arg4017_1 = Arg4017[1];
  return (Arg4017_0 <= Arg4017_1)}, 2, [], "<="];

Shen.call_toplevel(function js$dot$shen_js_toplevel4020(Arg4017) {
  if (Arg4017.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4020, 0, Arg4017];
  return []});





Shen.fns["cons"] = [Shen.type_func, function shen_user_lambda4023(Arg4021) {
  if (Arg4021.length < 2) return [Shen.type_func, shen_user_lambda4023, 2, Arg4021];
  var Arg4021_0 = Arg4021[0], Arg4021_1 = Arg4021[1];
  return [Shen.type_cons, Arg4021_0, Arg4021_1]}, 2, [], "cons"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4024(Arg4021) {
  if (Arg4021.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4024, 0, Arg4021];
  return []});





Shen.fns["set"] = [Shen.type_func, function shen_user_lambda4027(Arg4025) {
  if (Arg4025.length < 2) return [Shen.type_func, shen_user_lambda4027, 2, Arg4025];
  var Arg4025_0 = Arg4025[0], Arg4025_1 = Arg4025[1];
  return (Shen.globals[Arg4025_0[1]] = Arg4025_1)}, 2, [], "set"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4028(Arg4025) {
  if (Arg4025.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4028, 0, Arg4025];
  return []});





Shen.fns["<-address"] = [Shen.type_func, function shen_user_lambda4031(Arg4029) {
  if (Arg4029.length < 2) return [Shen.type_func, shen_user_lambda4031, 2, Arg4029];
  var Arg4029_0 = Arg4029[0], Arg4029_1 = Arg4029[1];
  return Shen.absvector_ref(Arg4029_0, Arg4029_1)}, 2, [], "<-address"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4032(Arg4029) {
  if (Arg4029.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4032, 0, Arg4029];
  return []});





Shen.fns["cn"] = [Shen.type_func, function shen_user_lambda4035(Arg4033) {
  if (Arg4033.length < 2) return [Shen.type_func, shen_user_lambda4035, 2, Arg4033];
  var Arg4033_0 = Arg4033[0], Arg4033_1 = Arg4033[1];
  return (Arg4033_0 + Arg4033_1)}, 2, [], "cn"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4036(Arg4033) {
  if (Arg4033.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4036, 0, Arg4033];
  return []});





Shen.fns["pos"] = [Shen.type_func, function shen_user_lambda4039(Arg4037) {
  if (Arg4037.length < 2) return [Shen.type_func, shen_user_lambda4039, 2, Arg4037];
  var Arg4037_0 = Arg4037[0], Arg4037_1 = Arg4037[1];
  return Arg4037_0[Arg4037_1]}, 2, [], "pos"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4040(Arg4037) {
  if (Arg4037.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4040, 0, Arg4037];
  return []});





Shen.fns["@p"] = [Shen.type_func, function shen_user_lambda4043(Arg4041) {
  if (Arg4041.length < 2) return [Shen.type_func, shen_user_lambda4043, 2, Arg4041];
  var Arg4041_0 = Arg4041[0], Arg4041_1 = Arg4041[1];
  return [Shen.fns['shen.tuple'], Arg4041_0, Arg4041_1]}, 2, [], "@p"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4044(Arg4041) {
  if (Arg4041.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4044, 0, Arg4041];
  return []});





Shen.fns["open"] = [Shen.type_func, function shen_user_lambda4047(Arg4045) {
  if (Arg4045.length < 2) return [Shen.type_func, shen_user_lambda4047, 2, Arg4045];
  var Arg4045_0 = Arg4045[0], Arg4045_1 = Arg4045[1];
  return (function() {
  return Shen.open(Arg4045_0, Arg4045_1);})}, 2, [], "open"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4048(Arg4045) {
  if (Arg4045.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4048, 0, Arg4045];
  return []});





Shen.fns["write-byte"] = [Shen.type_func, function shen_user_lambda4051(Arg4049) {
  if (Arg4049.length < 2) return [Shen.type_func, shen_user_lambda4051, 2, Arg4049];
  var Arg4049_0 = Arg4049[0], Arg4049_1 = Arg4049[1];
  return (function() {
  return Shen.write_byte(Arg4049_0, Arg4049_1);})}, 2, [], "write-byte"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4052(Arg4049) {
  if (Arg4049.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4052, 0, Arg4049];
  return []});





Shen.fns["address->"] = [Shen.type_func, function shen_user_lambda4055(Arg4053) {
  if (Arg4053.length < 3) return [Shen.type_func, shen_user_lambda4055, 3, Arg4053];
  var Arg4053_0 = Arg4053[0], Arg4053_1 = Arg4053[1], Arg4053_2 = Arg4053[2];
  return Shen.absvector_set(Arg4053_0, Arg4053_1, Arg4053_2)}, 3, [], "address->"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4056(Arg4053) {
  if (Arg4053.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4056, 0, Arg4053];
  return []});




Shen.fns["defstruct.char-upcase"] = [Shen.type_func, function shen_user_lambda4105(Arg4104) {
  if (Arg4104.length < 1) return [Shen.type_func, shen_user_lambda4105, 1, Arg4104];
  var Arg4104_0 = Arg4104[0];
  return ((Shen.unwind_tail(Shen.$eq$("a", Arg4104_0)))
  ? "A"
  : ((Shen.unwind_tail(Shen.$eq$("b", Arg4104_0)))
  ? "B"
  : ((Shen.unwind_tail(Shen.$eq$("c", Arg4104_0)))
  ? "C"
  : ((Shen.unwind_tail(Shen.$eq$("d", Arg4104_0)))
  ? "D"
  : ((Shen.unwind_tail(Shen.$eq$("e", Arg4104_0)))
  ? "E"
  : ((Shen.unwind_tail(Shen.$eq$("f", Arg4104_0)))
  ? "F"
  : ((Shen.unwind_tail(Shen.$eq$("g", Arg4104_0)))
  ? "G"
  : ((Shen.unwind_tail(Shen.$eq$("h", Arg4104_0)))
  ? "H"
  : ((Shen.unwind_tail(Shen.$eq$("i", Arg4104_0)))
  ? "I"
  : ((Shen.unwind_tail(Shen.$eq$("j", Arg4104_0)))
  ? "J"
  : ((Shen.unwind_tail(Shen.$eq$("k", Arg4104_0)))
  ? "K"
  : ((Shen.unwind_tail(Shen.$eq$("l", Arg4104_0)))
  ? "L"
  : ((Shen.unwind_tail(Shen.$eq$("m", Arg4104_0)))
  ? "M"
  : ((Shen.unwind_tail(Shen.$eq$("n", Arg4104_0)))
  ? "N"
  : ((Shen.unwind_tail(Shen.$eq$("o", Arg4104_0)))
  ? "O"
  : ((Shen.unwind_tail(Shen.$eq$("p", Arg4104_0)))
  ? "P"
  : ((Shen.unwind_tail(Shen.$eq$("q", Arg4104_0)))
  ? "Q"
  : ((Shen.unwind_tail(Shen.$eq$("r", Arg4104_0)))
  ? "R"
  : ((Shen.unwind_tail(Shen.$eq$("s", Arg4104_0)))
  ? "S"
  : ((Shen.unwind_tail(Shen.$eq$("t", Arg4104_0)))
  ? "T"
  : ((Shen.unwind_tail(Shen.$eq$("u", Arg4104_0)))
  ? "U"
  : ((Shen.unwind_tail(Shen.$eq$("v", Arg4104_0)))
  ? "V"
  : ((Shen.unwind_tail(Shen.$eq$("w", Arg4104_0)))
  ? "W"
  : ((Shen.unwind_tail(Shen.$eq$("x", Arg4104_0)))
  ? "X"
  : ((Shen.unwind_tail(Shen.$eq$("y", Arg4104_0)))
  ? "Y"
  : ((Shen.unwind_tail(Shen.$eq$("z", Arg4104_0)))
  ? "Z"
  : Arg4104_0))))))))))))))))))))))))))}, 1, [], "defstruct.char-upcase"];

Shen.fns["defstruct.string-capitalize"] = [Shen.type_func, function shen_user_lambda4106(Arg4104) {
  if (Arg4104.length < 1) return [Shen.type_func, shen_user_lambda4106, 1, Arg4104];
  var Arg4104_0 = Arg4104[0];
  return ((Shen.call(Shen.fns["shen.+string?"], [Arg4104_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["defstruct.char-upcase"], [Arg4104_0[0]]), Shen.tlstr(Arg4104_0)]);})
  : Arg4104_0)}, 1, [], "defstruct.string-capitalize"];

Shen.fns["defstruct.sym-capitalize"] = [Shen.type_func, function shen_user_lambda4107(Arg4104) {
  if (Arg4104.length < 1) return [Shen.type_func, shen_user_lambda4107, 1, Arg4104];
  var Arg4104_0 = Arg4104[0];
  return (function() {
  return Shen.intern(Shen.call(Shen.fns["defstruct.string-capitalize"], [Shen.str(Arg4104_0)]));})}, 1, [], "defstruct.sym-capitalize"];

Shen.fns["defstruct.slot-type"] = [Shen.type_func, function shen_user_lambda4108(Arg4104) {
  if (Arg4104.length < 4) return [Shen.type_func, shen_user_lambda4108, 4, Arg4104];
  var Arg4104_0 = Arg4104[0], Arg4104_1 = Arg4104[1], Arg4104_2 = Arg4104[2], Arg4104_3 = Arg4104[3];
  var R0, R1;
  return ((R0 = [Shen.type_symbol, "A"]),
  (R1 = [Shen.type_symbol, "B"]),
  [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg4104_0, [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, R0, [Shen.type_cons, Arg4104_1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg4104_2, [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg4104_0, [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg4104_2, [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, R0, [Shen.type_cons, Arg4104_1, [Shen.type_cons, R1, []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg4104_0, [Shen.type_cons, [Shen.type_symbol, ";"], Arg4104_3]]]]]]]]]]]]]]]]]]]]]])}, 4, [], "defstruct.slot-type"];

Shen.fns["defstruct.slots-types"] = [Shen.type_func, function shen_user_lambda4109(Arg4104) {
  if (Arg4104.length < 4) return [Shen.type_func, shen_user_lambda4109, 4, Arg4104];
  var Arg4104_0 = Arg4104[0], Arg4104_1 = Arg4104[1], Arg4104_2 = Arg4104[2], Arg4104_3 = Arg4104[3];
  var R0, R1;
  return ((Shen.empty$question$(Arg4104_1))
  ? Arg4104_3
  : (((Shen.is_type(Arg4104_1, Shen.type_cons) && (Shen.is_type(Arg4104_1[1], Shen.type_cons) && (Shen.is_type(Arg4104_1[1][2], Shen.type_cons) && Shen.empty$question$(Arg4104_1[1][2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["defstruct.slots-types"], [Arg4104_0, Arg4104_1[2], (Arg4104_2 + 1), Shen.call(Shen.fns["defstruct.slot-type"], [Arg4104_0, Arg4104_2, Arg4104_1[1][2][1], Arg4104_3])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "defstruct.slots-types"]]);})))}, 4, [], "defstruct.slots-types"];

Shen.fns["defstruct.slots-defs"] = [Shen.type_func, function shen_user_lambda4110(Arg4104) {
  if (Arg4104.length < 2) return [Shen.type_func, shen_user_lambda4110, 2, Arg4104];
  var Arg4104_0 = Arg4104[0], Arg4104_1 = Arg4104[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg4104_0))
  ? Arg4104_1
  : (((Shen.is_type(Arg4104_0, Shen.type_cons) && (Shen.is_type(Arg4104_0[1], Shen.type_cons) && (Shen.is_type(Arg4104_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg4104_0[1][2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["defstruct.slots-defs"], [Arg4104_0[2], [Shen.type_cons, Shen.call(Shen.fns["defstruct.sym-capitalize"], [Arg4104_0[1][1]]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg4104_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, ";"], Arg4104_1]]]]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "defstruct.slots-defs"]]);})))}, 2, [], "defstruct.slots-defs"];

Shen.fns["defstruct.datatypes"] = [Shen.type_func, function shen_user_lambda4111(Arg4104) {
  if (Arg4104.length < 2) return [Shen.type_func, shen_user_lambda4111, 2, Arg4104];
  var Arg4104_0 = Arg4104[0], Arg4104_1 = Arg4104[1];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda4113(Arg4112) {
  if (Arg4112.length < 1) return [Shen.type_func, shen_user_lambda4113, 1, Arg4112];
  var Arg4112_0 = Arg4112[0];
  return (function() {
  return Shen.call_tail(Shen.fns["defstruct.sym-capitalize"], [Shen.call(Shen.fns["head"], [Arg4112_0])]);})}, 1, [], undefined], Arg4104_1])),
  (R1 = Shen.call(Shen.fns["defstruct.slots-defs"], [Arg4104_1, []])),
  (R2 = Shen.call(Shen.fns["defstruct.slots-types"], [Arg4104_0, Arg4104_1, 1, []])),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "datatype"], [Shen.type_cons, Arg4104_0, []]], Shen.call(Shen.fns["append"], [R1, [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "@v"], R0], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg4104_0, [Shen.type_cons, [Shen.type_symbol, ";"], R2]]]]]])]);}))}, 2, [], "defstruct.datatypes"];

Shen.fns["defstruct.accessors"] = [Shen.type_func, function shen_user_lambda4114(Arg4104) {
  if (Arg4104.length < 4) return [Shen.type_func, shen_user_lambda4114, 4, Arg4104];
  var Arg4104_0 = Arg4104[0], Arg4104_1 = Arg4104[1], Arg4104_2 = Arg4104[2], Arg4104_3 = Arg4104[3];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4104_1))
  ? Arg4104_3
  : (((Shen.is_type(Arg4104_1, Shen.type_cons) && (Shen.is_type(Arg4104_1[1], Shen.type_cons) && (Shen.is_type(Arg4104_1[1][2], Shen.type_cons) && Shen.empty$question$(Arg4104_1[1][2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["defstruct.accessors"], [Arg4104_0, Arg4104_1[2], (Arg4104_2 + 1), ((R0 = [Shen.type_symbol, "X"]),
  (R1 = Shen.intern((Shen.str(Arg4104_0) + ("-" + Shen.str(Arg4104_1[1][1]))))),
  [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, Arg4104_0, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg4104_1[1][2][1], [Shen.type_cons, [Shen.type_symbol, "}"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, R0, [Shen.type_cons, Arg4104_2, []]]], []]]]]]]]]]], Arg4104_3])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "defstruct.accessors"]]);})))}, 4, [], "defstruct.accessors"];

Shen.fns["defstruct.setters"] = [Shen.type_func, function shen_user_lambda4115(Arg4104) {
  if (Arg4104.length < 4) return [Shen.type_func, shen_user_lambda4115, 4, Arg4104];
  var Arg4104_0 = Arg4104[0], Arg4104_1 = Arg4104[1], Arg4104_2 = Arg4104[2], Arg4104_3 = Arg4104[3];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4104_1))
  ? Arg4104_3
  : (((Shen.is_type(Arg4104_1, Shen.type_cons) && (Shen.is_type(Arg4104_1[1], Shen.type_cons) && (Shen.is_type(Arg4104_1[1][2], Shen.type_cons) && Shen.empty$question$(Arg4104_1[1][2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["defstruct.setters"], [Arg4104_0, Arg4104_1[2], (Arg4104_2 + 1), ((R0 = [Shen.type_symbol, "X"]),
  (R1 = [Shen.type_symbol, "Y"]),
  [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Shen.intern((Shen.str(Arg4104_0) + ("-" + (Shen.str(Arg4104_1[1][1]) + "->")))), [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, Arg4104_0, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg4104_1[1][2][1], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg4104_0, [Shen.type_cons, [Shen.type_symbol, "}"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, R0, [Shen.type_cons, Arg4104_2, [Shen.type_cons, R1, []]]]], []]]]]]]]]]]]]], Arg4104_3])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "defstruct.setters"]]);})))}, 4, [], "defstruct.setters"];

Shen.fns["defstruct.constructor-type"] = [Shen.type_func, function shen_user_lambda4116(Arg4104) {
  if (Arg4104.length < 3) return [Shen.type_func, shen_user_lambda4116, 3, Arg4104];
  var Arg4104_0 = Arg4104[0], Arg4104_1 = Arg4104[1], Arg4104_2 = Arg4104[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4104_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, [Shen.type_symbol, "}"], [Shen.type_cons, Arg4104_0, [Shen.type_cons, [Shen.type_symbol, "-->"], Arg4104_2]]]]);})
  : (((Shen.is_type(Arg4104_1, Shen.type_cons) && (Shen.is_type(Arg4104_1[1], Shen.type_cons) && (Shen.is_type(Arg4104_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg4104_1[1][2][2]) && Shen.empty$question$(Arg4104_2))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["defstruct.constructor-type"], [Arg4104_0, Arg4104_1[2], [Shen.type_cons, Arg4104_1[1][2][1], [Shen.type_cons, [Shen.type_symbol, "{"], []]]]);})
  : (((Shen.is_type(Arg4104_1, Shen.type_cons) && (Shen.is_type(Arg4104_1[1], Shen.type_cons) && (Shen.is_type(Arg4104_1[1][2], Shen.type_cons) && Shen.empty$question$(Arg4104_1[1][2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["defstruct.constructor-type"], [Arg4104_0, Arg4104_1[2], [Shen.type_cons, Arg4104_1[1][2][1], [Shen.type_cons, [Shen.type_symbol, "-->"], Arg4104_2]]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "defstruct.constructor-type"]]);}))))}, 3, [], "defstruct.constructor-type"];

Shen.fns["defstruct.constr-init"] = [Shen.type_func, function shen_user_lambda4117(Arg4104) {
  if (Arg4104.length < 1) return [Shen.type_func, shen_user_lambda4117, 1, Arg4104];
  var Arg4104_0 = Arg4104[0];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4104_0))
  ? [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]
  : ((Shen.is_type(Arg4104_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, Arg4104_0[1], [Shen.type_cons, Shen.call(Shen.fns["defstruct.constr-init"], [Arg4104_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "defstruct.constr-init"]]);})))}, 1, [], "defstruct.constr-init"];

Shen.fns["defstruct.constructor"] = [Shen.type_func, function shen_user_lambda4118(Arg4104) {
  if (Arg4104.length < 2) return [Shen.type_func, shen_user_lambda4118, 2, Arg4104];
  var Arg4104_0 = Arg4104[0], Arg4104_1 = Arg4104[1];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["defstruct.constructor-type"], [Arg4104_0, Arg4104_1, []])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda4120(Arg4119) {
  if (Arg4119.length < 1) return [Shen.type_func, shen_user_lambda4120, 1, Arg4119];
  var Arg4119_0 = Arg4119[0];
  return (function() {
  return Shen.call_tail(Shen.fns["defstruct.sym-capitalize"], [Shen.call(Shen.fns["head"], [Arg4119_0])]);})}, 1, [], undefined], Arg4104_1])),
  (R2 = Shen.call(Shen.fns["defstruct.constr-init"], [R1])),
  (R3 = Shen.intern(("mk-" + Shen.str(Arg4104_0)))),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, R3, []]], Shen.call(Shen.fns["append"], [R0, Shen.call(Shen.fns["append"], [R1, [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R2, []]]])])]);}))}, 2, [], "defstruct.constructor"];

Shen.fns["defstruct.struct-aux"] = [Shen.type_func, function shen_user_lambda4121(Arg4104) {
  if (Arg4104.length < 2) return [Shen.type_func, shen_user_lambda4121, 2, Arg4104];
  var Arg4104_0 = Arg4104[0], Arg4104_1 = Arg4104[1];
  var R0, R1, R2, R3;
  return (((!Shen.is_type(Arg4104_0, Shen.type_symbol)))
  ? (function() {
  return Shen.simple_error("Structure name must be a symbol.");})
  : ((Shen.empty$question$(Arg4104_1))
  ? (function() {
  return Shen.simple_error("At least one slot must be defined in a structure.");})
  : (function() {
  return Shen.call_tail(Shen.fns["append"], [[Shen.type_cons, Shen.call(Shen.fns["defstruct.datatypes"], [Arg4104_0, Arg4104_1]), [Shen.type_cons, Shen.call(Shen.fns["defstruct.constructor"], [Arg4104_0, Arg4104_1]), []]], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["defstruct.setters"], [Arg4104_0, Arg4104_1, 1, []]), Shen.call(Shen.fns["defstruct.accessors"], [Arg4104_0, Arg4104_1, 1, []])])]);})))}, 2, [], "defstruct.struct-aux"];

Shen.fns["defstruct.defstruct-macro"] = [Shen.type_func, function shen_user_lambda4122(Arg4104) {
  if (Arg4104.length < 1) return [Shen.type_func, shen_user_lambda4122, 1, Arg4104];
  var Arg4104_0 = Arg4104[0];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg4104_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defstruct"], Arg4104_0[1])) && Shen.is_type(Arg4104_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, [Shen.type_symbol, "null"], [Shen.type_cons, [], Shen.call(Shen.fns["defstruct.struct-aux"], [Arg4104_0[2][1], Arg4104_0[2][2]])]]]
  : Arg4104_0)}, 1, [], "defstruct.defstruct-macro"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4123(Arg4104) {
  if (Arg4104.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4123, 0, Arg4104];
  var R0, R1, R2, R3;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "defstruct.type#struct-type"], Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda4125(Arg4124) {
  if (Arg4124.length < 1) return [Shen.type_func, shen_user_lambda4125, 1, Arg4124];
  var Arg4124_0 = Arg4124[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<datatype-rules>"], [Arg4124_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "======================="], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "defstruct.slot"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "defstruct.slot"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "__________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "X"], []]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]], [Shen.type_func, function shen_user_lambda4127(Arg4126) {
  if (Arg4126.length < 1) return [Shen.type_func, shen_user_lambda4127, 1, Arg4126];
  var Arg4126_0 = Arg4126[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.datatype-error"], [Arg4126_0]);})}, 1, [], undefined]])]);})});


Shen.fns["regkl.mk-context"] = [Shen.type_func, function shen_user_lambda4434(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4434, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg4433_0, Shen.call(Shen.fns["@v"], [Arg4433_1, Shen.vector(0)])]);})}, 2, [], "regkl.mk-context"];

Shen.fns["regkl.context-nregs->"] = [Shen.type_func, function shen_user_lambda4435(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4435, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4433_0, 2, Arg4433_1]);})}, 2, [], "regkl.context-nregs->"];

Shen.fns["regkl.context-toplevel->"] = [Shen.type_func, function shen_user_lambda4436(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4436, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4433_0, 1, Arg4433_1]);})}, 2, [], "regkl.context-toplevel->"];

Shen.fns["regkl.context-nregs"] = [Shen.type_func, function shen_user_lambda4437(Arg4433) {
  if (Arg4433.length < 1) return [Shen.type_func, shen_user_lambda4437, 1, Arg4433];
  var Arg4433_0 = Arg4433[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4433_0, 2]);})}, 1, [], "regkl.context-nregs"];

Shen.fns["regkl.context-toplevel"] = [Shen.type_func, function shen_user_lambda4438(Arg4433) {
  if (Arg4433.length < 1) return [Shen.type_func, shen_user_lambda4438, 1, Arg4433];
  var Arg4433_0 = Arg4433[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4433_0, 1]);})}, 1, [], "regkl.context-toplevel"];

Shen.fns["regkl.var-idx-aux"] = [Shen.type_func, function shen_user_lambda4439(Arg4433) {
  if (Arg4433.length < 3) return [Shen.type_func, shen_user_lambda4439, 3, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2];
  return ((Shen.empty$question$(Arg4433_2))
  ? (function() {
  return Shen.simple_error(("Unknown var: " + Shen.call(Shen.fns["shen.app"], [Arg4433_0, "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (((Shen.is_type(Arg4433_2, Shen.type_cons) && (Shen.is_type(Arg4433_2[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4433_2[1][1], Arg4433_0)))))
  ? Arg4433_2[1][2]
  : ((Shen.is_type(Arg4433_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.var-idx-aux"], [Arg4433_0, (Arg4433_1 + 1), Arg4433_2[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.var-idx-aux"]]);}))))}, 3, [], "regkl.var-idx-aux"];

Shen.fns["regkl.var-idx"] = [Shen.type_func, function shen_user_lambda4440(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4440, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  return (function() {
  return Shen.call_tail(Shen.fns["regkl.var-idx-aux"], [Arg4433_0, 0, Arg4433_1]);})}, 2, [], "regkl.var-idx"];

Shen.fns["regkl.new-var-idx-aux"] = [Shen.type_func, function shen_user_lambda4441(Arg4433) {
  if (Arg4433.length < 3) return [Shen.type_func, shen_user_lambda4441, 3, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2];
  return ((Shen.empty$question$(Arg4433_2))
  ? Arg4433_1
  : (((Shen.is_type(Arg4433_2, Shen.type_cons) && (Shen.is_type(Arg4433_2[1], Shen.type_cons) && (Arg4433_2[1][2] < 0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.new-var-idx-aux"], [Arg4433_0, Arg4433_1, Arg4433_2[2]]);})
  : (((Shen.is_type(Arg4433_2, Shen.type_cons) && (Shen.is_type(Arg4433_2[1], Shen.type_cons) && (Arg4433_2[1][2] >= Arg4433_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.new-var-idx-aux"], [Arg4433_0, (Arg4433_2[1][2] + 1), Arg4433_2[2]]);})
  : ((Shen.is_type(Arg4433_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.new-var-idx-aux"], [Arg4433_0, Arg4433_1, Arg4433_2[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.new-var-idx-aux"]]);})))))}, 3, [], "regkl.new-var-idx-aux"];

Shen.fns["regkl.new-var-idx"] = [Shen.type_func, function shen_user_lambda4442(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4442, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  return (function() {
  return Shen.call_tail(Shen.fns["regkl.new-var-idx-aux"], [Arg4433_0, 0, Arg4433_1]);})}, 2, [], "regkl.new-var-idx"];

Shen.fns["regkl.var-defined?"] = [Shen.type_func, function shen_user_lambda4443(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4443, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  return ((Shen.empty$question$(Arg4433_1))
  ? false
  : (((Shen.is_type(Arg4433_1, Shen.type_cons) && (Shen.is_type(Arg4433_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4433_1[1][1], Arg4433_0)))))
  ? true
  : (((Shen.is_type(Arg4433_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4433_1[1], Arg4433_0))))
  ? true
  : ((Shen.is_type(Arg4433_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.var-defined?"], [Arg4433_0, Arg4433_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.var-defined?"]]);})))))}, 2, [], "regkl.var-defined?"];

Shen.fns["regkl.used-vars-aux"] = [Shen.type_func, function shen_user_lambda4444(Arg4433) {
  if (Arg4433.length < 4) return [Shen.type_func, shen_user_lambda4444, 4, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3];
  var R0;
  return (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg4433_0[1])) && (Shen.is_type(Arg4433_0[2], Shen.type_cons) && (Shen.is_type(Arg4433_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4433_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4433_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4433_0[2][2][2][1], Arg4433_1, [Shen.type_cons, Arg4433_0[2][1], Arg4433_2], Arg4433_3])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.used-vars-aux"], [Arg4433_0[2][2][1], Arg4433_1, Arg4433_2, R0]);}))
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4433_0[1])) && (Shen.is_type(Arg4433_0[2], Shen.type_cons) && (Shen.is_type(Arg4433_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4433_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.used-vars-aux"], [Arg4433_0[2][2][1], Arg4433_1, [Shen.type_cons, Arg4433_0[2][1], Arg4433_2], Arg4433_3]);})
  : ((Shen.is_type(Arg4433_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.used-vars-aux"], [Arg4433_0[1], Arg4433_1, Arg4433_2, Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4433_0[2], Arg4433_1, Arg4433_2, Arg4433_3])]);})
  : (((Shen.is_type(Arg4433_0, Shen.type_symbol) && ((!Shen.call(Shen.fns["regkl.var-defined?"], [Arg4433_0, Arg4433_2])) && Shen.call(Shen.fns["regkl.var-defined?"], [Arg4433_0, Arg4433_1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["adjoin"], [Arg4433_0, Arg4433_3]);})
  : Arg4433_3))))}, 4, [], "regkl.used-vars-aux"];

Shen.fns["regkl.used-vars"] = [Shen.type_func, function shen_user_lambda4445(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4445, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  var R0;
  return (function() {
  return Shen.call_tail(Shen.fns["regkl.used-vars-aux"], [Arg4433_0, Arg4433_1, [], []]);})}, 2, [], "regkl.used-vars"];

Shen.fns["regkl.remove-do"] = [Shen.type_func, function shen_user_lambda4446(Arg4433) {
  if (Arg4433.length < 1) return [Shen.type_func, shen_user_lambda4446, 1, Arg4433];
  var Arg4433_0 = Arg4433[0];
  var R0;
  return (((Shen.is_type(Arg4433_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4433_0[1]))))
  ? Arg4433_0[2]
  : [Shen.type_cons, Arg4433_0, []])}, 1, [], "regkl.remove-do"];

Shen.fns["regkl.remove-duplicates-aux"] = [Shen.type_func, function shen_user_lambda4447(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4447, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  var R0;
  return ((Shen.empty$question$(Arg4433_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4433_1]);})
  : ((Shen.is_type(Arg4433_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.remove-duplicates-aux"], [Arg4433_0[2], Shen.call(Shen.fns["adjoin"], [Arg4433_0[1], Arg4433_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.remove-duplicates-aux"]]);})))}, 2, [], "regkl.remove-duplicates-aux"];

Shen.fns["regkl.remove-duplicates"] = [Shen.type_func, function shen_user_lambda4448(Arg4433) {
  if (Arg4433.length < 1) return [Shen.type_func, shen_user_lambda4448, 1, Arg4433];
  var Arg4433_0 = Arg4433[0];
  var R0;
  return (function() {
  return Shen.call_tail(Shen.fns["regkl.remove-duplicates-aux"], [Arg4433_0, []]);})}, 1, [], "regkl.remove-duplicates"];

Shen.fns["regkl.used-vars-cascade-aux"] = [Shen.type_func, function shen_user_lambda4449(Arg4433) {
  if (Arg4433.length < 4) return [Shen.type_func, shen_user_lambda4449, 4, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3];
  var R0;
  return ((Shen.empty$question$(Arg4433_0))
  ? Arg4433_3
  : ((Shen.is_type(Arg4433_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4433_0[1], Arg4433_1, [], Arg4433_2])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.used-vars-cascade-aux"], [Arg4433_0[2], Arg4433_1, R0, [Shen.type_cons, R0, Arg4433_3]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.used-vars-cascade-aux"]]);})))}, 4, [], "regkl.used-vars-cascade-aux"];

Shen.fns["regkl.used-vars-cascade"] = [Shen.type_func, function shen_user_lambda4450(Arg4433) {
  if (Arg4433.length < 3) return [Shen.type_func, shen_user_lambda4450, 3, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2];
  var R0;
  return (function() {
  return Shen.call_tail(Shen.fns["regkl.used-vars-cascade-aux"], [Shen.call(Shen.fns["reverse"], [Arg4433_0]), Arg4433_1, Arg4433_2, []]);})}, 3, [], "regkl.used-vars-cascade"];

Shen.fns["regkl.mk-set-reg"] = [Shen.type_func, function shen_user_lambda4451(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4451, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  var R0;
  return (((Arg4433_0 < 0))
  ? (function() {
  return Shen.simple_error("Cannot set function argument\x0a");})
  : [Shen.type_cons, [Shen.type_symbol, "regkl.reg->"], [Shen.type_cons, Arg4433_0, [Shen.type_cons, Arg4433_1, []]]])}, 2, [], "regkl.mk-set-reg"];

Shen.fns["regkl.mk-get-reg"] = [Shen.type_func, function shen_user_lambda4452(Arg4433) {
  if (Arg4433.length < 1) return [Shen.type_func, shen_user_lambda4452, 1, Arg4433];
  var Arg4433_0 = Arg4433[0];
  var R0;
  return (((Arg4433_0 < 0))
  ? [Shen.type_cons, [Shen.type_symbol, "regkl.arg"], [Shen.type_cons, ((0 - Arg4433_0) - 1), []]]
  : [Shen.type_cons, [Shen.type_symbol, "regkl.reg"], [Shen.type_cons, Arg4433_0, []]])}, 1, [], "regkl.mk-get-reg"];

Shen.fns["regkl.reuse-idx"] = [Shen.type_func, function shen_user_lambda4453(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4453, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  var R0;
  return ((Shen.empty$question$(Arg4433_1))
  ? Shen.fail_obj
  : (((Shen.is_type(Arg4433_1, Shen.type_cons) && (Shen.is_type(Arg4433_1[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(Arg4433_1[1][1], Arg4433_0)) && (Arg4433_1[1][2] >= 0)))))
  ? Arg4433_1[1][2]
  : ((Shen.is_type(Arg4433_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.reuse-idx"], [Arg4433_0, Arg4433_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.reuse-idx"]]);}))))}, 2, [], "regkl.reuse-idx"];

Shen.fns["regkl.new-var-idx-or-reuse"] = [Shen.type_func, function shen_user_lambda4454(Arg4433) {
  if (Arg4433.length < 3) return [Shen.type_func, shen_user_lambda4454, 3, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg4433_2))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.new-var-idx"], [Arg4433_0, Arg4433_1]);})
  : ((R0 = [Shen.type_func, function shen_user_lambda4456(Arg4455) {
  if (Arg4455.length < 3) return [Shen.type_func, shen_user_lambda4456, 3, Arg4455];
  var Arg4455_0 = Arg4455[0], Arg4455_1 = Arg4455[1], Arg4455_2 = Arg4455[2];
  return ((Shen.is_type(Arg4455_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.new-var-idx-or-reuse"], [Arg4455_0, Arg4455_2, Arg4455_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.new-var-idx-or-reuse"]]);}))}, 3, [Arg4433_0, Arg4433_2, Arg4433_1], undefined]),
  ((Shen.is_type(Arg4433_2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["regkl.reuse-idx"], [Arg4433_2[1], Arg4433_1])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0))))}, 3, [], "regkl.new-var-idx-or-reuse"];

Shen.fns["regkl.add-var-aux"] = [Shen.type_func, function shen_user_lambda4457(Arg4433) {
  if (Arg4433.length < 4) return [Shen.type_func, shen_user_lambda4457, 4, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3];
  var R0, R1;
  return ((Shen.empty$question$(Arg4433_2))
  ? [Shen.type_cons, [Shen.type_cons, Arg4433_0, Arg4433_1], Shen.call(Shen.fns["reverse"], [Arg4433_3])]
  : (((Shen.is_type(Arg4433_2, Shen.type_cons) && (Shen.is_type(Arg4433_2[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4433_2[1][2], Arg4433_1)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["reverse"], [[Shen.type_cons, [Shen.type_cons, Arg4433_0, Arg4433_2[1][2]], Arg4433_3]]), Arg4433_2[2]]);})
  : ((Shen.is_type(Arg4433_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.add-var-aux"], [Arg4433_0, Arg4433_1, Arg4433_2[2], [Shen.type_cons, Arg4433_2[1], Arg4433_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.add-var-aux"]]);}))))}, 4, [], "regkl.add-var-aux"];

Shen.fns["regkl.add-var"] = [Shen.type_func, function shen_user_lambda4458(Arg4433) {
  if (Arg4433.length < 3) return [Shen.type_func, shen_user_lambda4458, 3, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["regkl.add-var-aux"], [Arg4433_0, Arg4433_1, Arg4433_2, []]);})}, 3, [], "regkl.add-var"];

Shen.fns["regkl.max"] = [Shen.type_func, function shen_user_lambda4459(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4459, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  var R0, R1;
  return (((Arg4433_0 > Arg4433_1))
  ? Arg4433_0
  : Arg4433_1)}, 2, [], "regkl.max"];

Shen.fns["regkl.setreg-unexpr"] = [Shen.type_func, function shen_user_lambda4460(Arg4433) {
  if (Arg4433.length < 3) return [Shen.type_func, shen_user_lambda4460, 3, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2];
  var R0, R1;
  return (((Shen.is_type(Arg4433_1, Shen.type_cons) && Shen.empty$question$(Arg4433_1[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, Shen.call(Shen.fns["regkl.mk-set-reg"], [Arg4433_0, Arg4433_1[1]]), Arg4433_2]]);})
  : ((Shen.is_type(Arg4433_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.setreg-unexpr"], [Arg4433_0, Arg4433_1[2], [Shen.type_cons, Arg4433_1[1], Arg4433_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["regkl.mk-set-reg"], [Arg4433_0, Arg4433_1]);})))}, 3, [], "regkl.setreg-unexpr"];

Shen.fns["regkl.setreg-do-expr"] = [Shen.type_func, function shen_user_lambda4461(Arg4433) {
  if (Arg4433.length < 3) return [Shen.type_func, shen_user_lambda4461, 3, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg4433_1))
  ? (function() {
  return Shen.simple_error("Broken `do` expression.");})
  : (((Shen.is_type(Arg4433_1, Shen.type_cons) && Shen.empty$question$(Arg4433_1[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [[Shen.type_cons, Shen.call(Shen.fns["regkl.mk-set-reg-unexpr"], [Arg4433_0, Arg4433_1[1]]), Arg4433_2]]);})
  : ((Shen.is_type(Arg4433_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.setreg-do-expr"], [Arg4433_0, Arg4433_1[2], [Shen.type_cons, Arg4433_1[1], Arg4433_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.setreg-do-expr"]]);}))))}, 3, [], "regkl.setreg-do-expr"];

Shen.fns["regkl.mk-set-reg-unexpr"] = [Shen.type_func, function shen_user_lambda4462(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4462, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  var R0, R1;
  return (((Shen.is_type(Arg4433_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4433_1[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], Shen.call(Shen.fns["regkl.setreg-do-expr"], [Arg4433_0, Arg4433_1[2], []])]
  : (((Shen.is_type(Arg4433_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4433_1[1])) && (Shen.is_type(Arg4433_1[2], Shen.type_cons) && (Shen.is_type(Arg4433_1[2][2], Shen.type_cons) && (Shen.is_type(Arg4433_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4433_1[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["regkl.mk-set-reg-unexpr"], [Arg4433_0, Arg4433_1[2][2][1]])),
  (R1 = Shen.call(Shen.fns["regkl.mk-set-reg-unexpr"], [Arg4433_0, Arg4433_1[2][2][2][1]])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg4433_1[2][1], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["regkl.mk-set-reg"], [Arg4433_0, Arg4433_1]);})))}, 2, [], "regkl.mk-set-reg-unexpr"];

Shen.fns["regkl.walk-let-expr"] = [Shen.type_func, function shen_user_lambda4463(Arg4433) {
  if (Arg4433.length < 8) return [Shen.type_func, shen_user_lambda4463, 8, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4], Arg4433_5 = Arg4433[5], Arg4433_6 = Arg4433[6], Arg4433_7 = Arg4433[7];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg4433_7)))
  ? ((R0 = Shen.call(Shen.fns["remove"], [Arg4433_0, Arg4433_3])),
  (R0 = Shen.call(Shen.fns["append"], [R0, Arg4433_5])),
  (R1 = Shen.call(Shen.fns["difference"], [Shen.call(Shen.fns["map"], [[Shen.type_symbol, "head"], Arg4433_2]), R0])),
  (R1 = Shen.call(Shen.fns["regkl.new-var-idx-or-reuse"], [Arg4433_0, Arg4433_2, R1])),
  Shen.call(Shen.fns["regkl.context-nregs->"], [Arg4433_6, Shen.call(Shen.fns["regkl.max"], [(R1 + 1), Shen.call(Shen.fns["regkl.context-nregs"], [Arg4433_6])])]),
  (R2 = Shen.call(Shen.fns["regkl.add-var"], [Arg4433_0, R1, Arg4433_2])),
  (R0 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4433_1, Arg4433_2, Arg4433_4, R0, Arg4433_6])),
  [Shen.fns['shen.tuple'], Shen.call(Shen.fns["regkl.mk-set-reg-unexpr"], [R1, R0]), R2])
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4433_7)))
  ? [Shen.fns['shen.tuple'], Shen.call(Shen.fns["regkl.walk-expr"], [Arg4433_1, Arg4433_2, Arg4433_4, Arg4433_5, Arg4433_6]), Arg4433_2]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.walk-let-expr"]]);})))}, 8, [], "regkl.walk-let-expr"];

Shen.fns["regkl.walk-let"] = [Shen.type_func, function shen_user_lambda4464(Arg4433) {
  if (Arg4433.length < 7) return [Shen.type_func, shen_user_lambda4464, 7, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4], Arg4433_5 = Arg4433[5], Arg4433_6 = Arg4433[6];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["regkl.used-vars"], [Arg4433_2, [Shen.type_cons, Arg4433_0, Arg4433_3]])),
  (R1 = Shen.call(Shen.fns["element?"], [Arg4433_0, R0])),
  (R1 = Shen.call(Shen.fns["regkl.walk-let-expr"], [Arg4433_0, Arg4433_1, Arg4433_3, R0, Arg4433_4, Arg4433_5, Arg4433_6, R1])),
  (R2 = Shen.call(Shen.fns["fst"], [R1])),
  (R1 = Shen.call(Shen.fns["snd"], [R1])),
  (R1 = Shen.call(Shen.fns["regkl.remove-do"], [Shen.call(Shen.fns["regkl.walk-expr"], [Arg4433_2, R1, Shen.call(Shen.fns["append"], [R0, Arg4433_5]), Arg4433_5, Arg4433_6])])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? (R2 = [Shen.type_cons, R2, R1])
  : (R2 = R1)),
  [Shen.type_cons, [Shen.type_symbol, "do"], R2])}, 7, [], "regkl.walk-let"];

Shen.fns["regkl.walk-do-aux"] = [Shen.type_func, function shen_user_lambda4465(Arg4433) {
  if (Arg4433.length < 6) return [Shen.type_func, shen_user_lambda4465, 6, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4], Arg4433_5 = Arg4433[5];
  var R0, R1, R2;
  return (((Shen.empty$question$(Arg4433_0) && Shen.empty$question$(Arg4433_2)))
  ? Arg4433_5
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.empty$question$(Arg4433_0[2]) && (Shen.is_type(Arg4433_2, Shen.type_cons) && Shen.empty$question$(Arg4433_2[2])))))
  ? ((R0 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4433_0[1], Arg4433_1, Arg4433_2[1], Arg4433_3, Arg4433_4])),
  (R0 = Shen.call(Shen.fns["append"], [Arg4433_5, Shen.call(Shen.fns["regkl.remove-do"], [R0])])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-do-aux"], [[], Arg4433_1, [], Arg4433_3, Arg4433_4, R0]);}))
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.is_type(Arg4433_2, Shen.type_cons) && Shen.is_type(Arg4433_2[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4433_0[1], Arg4433_1, Arg4433_2[1], Arg4433_2[2][1], Arg4433_4])),
  (R0 = Shen.call(Shen.fns["append"], [Arg4433_5, Shen.call(Shen.fns["regkl.remove-do"], [R0])])),
  (R1 = Arg4433_2[2]),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-do-aux"], [Arg4433_0[2], Arg4433_1, R1, Arg4433_3, Arg4433_4, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.walk-do-aux"]]);}))))}, 6, [], "regkl.walk-do-aux"];

Shen.fns["regkl.walk-do"] = [Shen.type_func, function shen_user_lambda4466(Arg4433) {
  if (Arg4433.length < 5) return [Shen.type_func, shen_user_lambda4466, 5, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["regkl.used-vars-cascade"], [Arg4433_0, Arg4433_1, Arg4433_2])),
  (R0 = Shen.call(Shen.fns["regkl.walk-do-aux"], [Arg4433_0, Arg4433_1, R0, Arg4433_3, Arg4433_4, []])),
  [Shen.type_cons, [Shen.type_symbol, "do"], R0])}, 5, [], "regkl.walk-do"];

Shen.fns["regkl.walk-apply-aux"] = [Shen.type_func, function shen_user_lambda4467(Arg4433) {
  if (Arg4433.length < 6) return [Shen.type_func, shen_user_lambda4467, 6, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4], Arg4433_5 = Arg4433[5];
  var R0, R1, R2;
  return (((Shen.empty$question$(Arg4433_0) && Shen.empty$question$(Arg4433_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4433_5]);})
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.empty$question$(Arg4433_0[2]) && (Shen.is_type(Arg4433_2, Shen.type_cons) && Shen.empty$question$(Arg4433_2[2])))))
  ? ((R0 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4433_0[1], Arg4433_1, Arg4433_2[1], Arg4433_3, Arg4433_4])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-apply-aux"], [[], Arg4433_1, [], Arg4433_3, Arg4433_4, [Shen.type_cons, R0, Arg4433_5]]);}))
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.is_type(Arg4433_2, Shen.type_cons) && Shen.is_type(Arg4433_2[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4433_0[1], Arg4433_1, Arg4433_2[1], Arg4433_2[2][1], Arg4433_4])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-apply-aux"], [Arg4433_0[2], Arg4433_1, Arg4433_2[2], Arg4433_3, Arg4433_4, [Shen.type_cons, R0, Arg4433_5]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.walk-apply-aux"]]);}))))}, 6, [], "regkl.walk-apply-aux"];

Shen.fns["regkl.walk-apply"] = [Shen.type_func, function shen_user_lambda4468(Arg4433) {
  if (Arg4433.length < 5) return [Shen.type_func, shen_user_lambda4468, 5, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["regkl.used-vars-cascade"], [Arg4433_0, Arg4433_1, Arg4433_2])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-apply-aux"], [Arg4433_0, Arg4433_1, R0, Arg4433_3, Arg4433_4, []]);}))}, 5, [], "regkl.walk-apply"];

Shen.fns["regkl.walk-if"] = [Shen.type_func, function shen_user_lambda4469(Arg4433) {
  if (Arg4433.length < 7) return [Shen.type_func, shen_user_lambda4469, 7, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4], Arg4433_5 = Arg4433[5], Arg4433_6 = Arg4433[6];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4433_1, Arg4433_3, [], Arg4433_5])),
  (R1 = Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4433_2, Arg4433_3, [], Arg4433_5])),
  (R2 = Shen.call(Shen.fns["append"], [R0, R1])),
  (R2 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4433_0, Arg4433_3, Arg4433_4, R2, Arg4433_6])),
  (R0 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4433_1, Arg4433_3, R0, Arg4433_5, Arg4433_6])),
  (R1 = Shen.call(Shen.fns["regkl.walk-expr"], [Arg4433_2, Arg4433_3, R1, Arg4433_5, Arg4433_6])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R2, [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])}, 7, [], "regkl.walk-if"];

Shen.fns["regkl.walk-cond"] = [Shen.type_func, function shen_user_lambda4470(Arg4433) {
  if (Arg4433.length < 5) return [Shen.type_func, shen_user_lambda4470, 5, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4433_0))
  ? [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "error: cond failure", []]]
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.is_type(Arg4433_0[1], Shen.type_cons) && (Shen.is_type(Arg4433_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg4433_0[1][2][2])))))
  ? ((R0 = Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4433_0[1][2][1], Arg4433_1, [], Arg4433_3])),
  (R1 = Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4433_0[2], Arg4433_1, [], Arg4433_3])),
  (R0 = Shen.call(Shen.fns["regkl.used-vars-aux"], [Arg4433_0[1][1], Arg4433_1, [], Shen.call(Shen.fns["append"], [R0, R1])])),
  (R2 = Shen.call(Shen.fns["regkl.walk-cond"], [Arg4433_0[2], Arg4433_1, Arg4433_2, Arg4433_3, Arg4433_4])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-if"], [Arg4433_0[1][1], Arg4433_0[1][2][1], R2, Arg4433_1, R0, R1, Arg4433_4]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.walk-cond"]]);})))}, 5, [], "regkl.walk-cond"];

Shen.fns["regkl.mk-closure-args-init"] = [Shen.type_func, function shen_user_lambda4471(Arg4433) {
  if (Arg4433.length < 3) return [Shen.type_func, shen_user_lambda4471, 3, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4433_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4433_2]);})
  : ((Shen.is_type(Arg4433_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["regkl.mk-get-reg"], [Shen.call(Shen.fns["regkl.var-idx"], [Arg4433_0[1], Arg4433_1])])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.mk-closure-args-init"], [Arg4433_0[2], Arg4433_1, [Shen.type_cons, R0, Arg4433_2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.mk-closure-args-init"]]);})))}, 3, [], "regkl.mk-closure-args-init"];

Shen.fns["regkl.mk-closure-env"] = [Shen.type_func, function shen_user_lambda4472(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4472, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4433_0))
  ? Arg4433_1
  : ((Shen.is_type(Arg4433_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.mk-closure-env"], [Arg4433_0[2], [Shen.type_cons, [Shen.type_cons, Arg4433_0[1], Shen.call(Shen.fns["regkl.new-var-idx"], [Arg4433_0[1], Arg4433_1])], Arg4433_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.mk-closure-env"]]);})))}, 2, [], "regkl.mk-closure-env"];

Shen.fns["regkl.mk-closure-list"] = [Shen.type_func, function shen_user_lambda4473(Arg4433) {
  if (Arg4433.length < 5) return [Shen.type_func, shen_user_lambda4473, 5, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["regkl.mk-closure-env"], [Arg4433_3, []])),
  (R1 = Shen.call(Shen.fns["regkl.mk-closure-args-init"], [Arg4433_3, Arg4433_2, []])),
  (R0 = Shen.call(Shen.fns["regkl.mk-function-kl"], [Arg4433_0, Arg4433_1, R0, Arg4433_4])),
  [Shen.type_cons, R1, [Shen.type_cons, R0, []]])}, 5, [], "regkl.mk-closure-list"];

Shen.fns["regkl.walk-lambda-aux"] = [Shen.type_func, function shen_user_lambda4474(Arg4433) {
  if (Arg4433.length < 6) return [Shen.type_func, shen_user_lambda4474, 6, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4], Arg4433_5 = Arg4433[5];
  var R0, R1, R2;
  return (((Shen.is_type(Arg4433_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4433_1[1])) && (Shen.is_type(Arg4433_1[2], Shen.type_cons) && (Shen.is_type(Arg4433_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg4433_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-lambda-aux"], [Arg4433_1[2][1], Arg4433_1[2][2][1], [Shen.type_cons, Arg4433_0, Arg4433_2], Arg4433_3, Arg4433_4, Arg4433_5]);})
  : ((R0 = Shen.call(Shen.fns["reverse"], [[Shen.type_cons, Arg4433_0, Arg4433_2]])),
  (R1 = Shen.call(Shen.fns["append"], [Arg4433_4, R0])),
  (R1 = Shen.call(Shen.fns["regkl.mk-closure-list"], [R1, Arg4433_1, Arg4433_3, Arg4433_4, Arg4433_5])),
  [Shen.type_cons, [Shen.type_symbol, "regkl.closure"], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["regkl.context-nregs"], [Arg4433_5]), R1]]]))}, 6, [], "regkl.walk-lambda-aux"];

Shen.fns["regkl.walk-lambda"] = [Shen.type_func, function shen_user_lambda4475(Arg4433) {
  if (Arg4433.length < 5) return [Shen.type_func, shen_user_lambda4475, 5, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["regkl.used-vars"], [[Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg4433_0, [Shen.type_cons, Arg4433_1, []]]], Arg4433_3])),
  (R1 = Shen.call(Shen.fns["regkl.mk-context"], [Shen.call(Shen.fns["regkl.context-toplevel"], [Arg4433_4]), 0])),
  (R0 = Shen.call(Shen.fns["regkl.walk-lambda-aux"], [Arg4433_0, Arg4433_1, Arg4433_2, Arg4433_3, R0, R1])),
  Shen.call(Shen.fns["regkl.context-toplevel->"], [Arg4433_4, Shen.call(Shen.fns["regkl.context-toplevel"], [R1])]),
  R0)}, 5, [], "regkl.walk-lambda"];

Shen.fns["regkl.walk-freeze"] = [Shen.type_func, function shen_user_lambda4476(Arg4433) {
  if (Arg4433.length < 4) return [Shen.type_func, shen_user_lambda4476, 4, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["regkl.mk-context"], [Shen.call(Shen.fns["regkl.context-toplevel"], [Arg4433_3]), 0])),
  (R1 = Shen.call(Shen.fns["regkl.mk-closure-list"], [Arg4433_2, Arg4433_0, Arg4433_1, Arg4433_2, R0])),
  Shen.call(Shen.fns["regkl.context-toplevel->"], [Arg4433_3, Shen.call(Shen.fns["regkl.context-toplevel"], [R0])]),
  [Shen.type_cons, [Shen.type_symbol, "regkl.freeze"], [Shen.type_cons, Shen.call(Shen.fns["regkl.context-nregs"], [R0]), R1]])}, 4, [], "regkl.walk-freeze"];

Shen.fns["regkl.lift-defun"] = [Shen.type_func, function shen_user_lambda4477(Arg4433) {
  if (Arg4433.length < 4) return [Shen.type_func, shen_user_lambda4477, 4, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["regkl.mk-context"], [Shen.call(Shen.fns["regkl.context-toplevel"], [Arg4433_3]), 0])),
  (R1 = Shen.call(Shen.fns["regkl.mk-defun-kl"], [Arg4433_0, Arg4433_1, Arg4433_2, [], R0])),
  Shen.call(Shen.fns["regkl.context-toplevel->"], [Arg4433_3, [Shen.type_cons, R1, Shen.call(Shen.fns["regkl.context-toplevel"], [R0])]]),
  [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, Arg4433_0, []]])}, 4, [], "regkl.lift-defun"];

Shen.fns["regkl.walk-trap"] = [Shen.type_func, function shen_user_lambda4478(Arg4433) {
  if (Arg4433.length < 6) return [Shen.type_func, shen_user_lambda4478, 6, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4], Arg4433_5 = Arg4433[5];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Shenkl."]])),
  (R1 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Shenkl."]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Arg4433_0, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R1, [Shen.type_cons, Arg4433_1, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "regkl.trap-error"], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]], []]]]], []]]]]),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-expr"], [R1, Arg4433_2, Arg4433_3, Arg4433_4, Arg4433_5]);}))}, 6, [], "regkl.walk-trap"];

Shen.fns["regkl.walk-expr"] = [Shen.type_func, function shen_user_lambda4479(Arg4433) {
  if (Arg4433.length < 5) return [Shen.type_func, shen_user_lambda4479, 5, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4];
  var R0, R1, R2;
  return (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg4433_0[1])) && (Shen.is_type(Arg4433_0[2], Shen.type_cons) && (Shen.is_type(Arg4433_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4433_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4433_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-let"], [Arg4433_0[2][1], Arg4433_0[2][2][1], Arg4433_0[2][2][2][1], Arg4433_1, Arg4433_2, Arg4433_3, Arg4433_4]);})
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4433_0[1])) && (Shen.is_type(Arg4433_0[2], Shen.type_cons) && (Shen.is_type(Arg4433_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4433_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4433_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-if"], [Arg4433_0[2][1], Arg4433_0[2][2][1], Arg4433_0[2][2][2][1], Arg4433_1, Arg4433_2, Arg4433_3, Arg4433_4]);})
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg4433_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-cond"], [Arg4433_0[2], Arg4433_1, Arg4433_2, Arg4433_3, Arg4433_4]);})
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4433_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-do"], [Arg4433_0[2], Arg4433_1, Arg4433_2, Arg4433_3, Arg4433_4]);})
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4433_0[1])) && (Shen.is_type(Arg4433_0[2], Shen.type_cons) && (Shen.is_type(Arg4433_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4433_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-lambda"], [Arg4433_0[2][1], Arg4433_0[2][2][1], [], Arg4433_1, Arg4433_4]);})
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg4433_0[1])) && (Shen.is_type(Arg4433_0[2], Shen.type_cons) && Shen.empty$question$(Arg4433_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-freeze"], [Arg4433_0[2][1], Arg4433_1, Arg4433_2, Arg4433_4]);})
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4433_0[1])) && (Shen.is_type(Arg4433_0[2], Shen.type_cons) && (Shen.is_type(Arg4433_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4433_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4433_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.lift-defun"], [Arg4433_0[2][1], Arg4433_0[2][2][1], Arg4433_0[2][2][2][1], Arg4433_4]);})
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "trap-error"], Arg4433_0[1])) && (Shen.is_type(Arg4433_0[2], Shen.type_cons) && (Shen.is_type(Arg4433_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4433_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-trap"], [Arg4433_0[2][1], Arg4433_0[2][2][1], Arg4433_1, Arg4433_2, Arg4433_3, Arg4433_4]);})
  : ((Shen.is_type(Arg4433_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-apply"], [Arg4433_0, Arg4433_1, Arg4433_2, Arg4433_3, Arg4433_4]);})
  : (((Shen.call(Shen.fns["regkl.var-defined?"], [Arg4433_0, Arg4433_1]) && Shen.is_type(Arg4433_0, Shen.type_symbol)))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.mk-get-reg"], [Shen.call(Shen.fns["regkl.var-idx"], [Arg4433_0, Arg4433_1])]);})
  : Arg4433_0))))))))))}, 5, [], "regkl.walk-expr"];

Shen.fns["regkl.mk-defun-env"] = [Shen.type_func, function shen_user_lambda4480(Arg4433) {
  if (Arg4433.length < 3) return [Shen.type_func, shen_user_lambda4480, 3, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4433_0))
  ? Arg4433_2
  : ((Shen.is_type(Arg4433_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.mk-defun-env"], [Arg4433_0[2], (Arg4433_1 - 1), [Shen.type_cons, [Shen.type_cons, Arg4433_0[1], Arg4433_1], Arg4433_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.mk-defun-env"]]);})))}, 3, [], "regkl.mk-defun-env"];

Shen.fns["regkl.mk-function-kl"] = [Shen.type_func, function shen_user_lambda4481(Arg4433) {
  if (Arg4433.length < 4) return [Shen.type_func, shen_user_lambda4481, 4, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["regkl.remove-duplicates"], [Arg4433_0])),
  (R1 = Shen.call(Shen.fns["regkl.mk-defun-env"], [R0, -1, Arg4433_2])),
  (R0 = Shen.call(Shen.fns["regkl.used-vars"], [Arg4433_1, R0])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-expr"], [Arg4433_1, R1, R0, [], Arg4433_3]);}))}, 4, [], "regkl.mk-function-kl"];

Shen.fns["regkl.defun-hdr"] = [Shen.type_func, function shen_user_lambda4482(Arg4433) {
  if (Arg4433.length < 1) return [Shen.type_func, shen_user_lambda4482, 1, Arg4433];
  var Arg4433_0 = Arg4433[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg4433_0)))
  ? [Shen.type_symbol, "regkl.toplevel"]
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4433_0)))
  ? [Shen.type_symbol, "regkl.func"]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.defun-hdr"]]);})))}, 1, [], "regkl.defun-hdr"];

Shen.fns["regkl.mk-defun-kl"] = [Shen.type_func, function shen_user_lambda4483(Arg4433) {
  if (Arg4433.length < 6) return [Shen.type_func, shen_user_lambda4483, 6, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4], Arg4433_5 = Arg4433[5];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["regkl.mk-context"], [Shen.call(Shen.fns["regkl.context-toplevel"], [Arg4433_5]), 0])),
  (R1 = Shen.call(Shen.fns["regkl.mk-function-kl"], [Arg4433_1, Arg4433_2, Arg4433_3, R0])),
  Shen.call(Shen.fns["regkl.context-toplevel->"], [Arg4433_5, Shen.call(Shen.fns["regkl.context-toplevel"], [R0])]),
  [Shen.type_cons, Shen.call(Shen.fns["regkl.defun-hdr"], [Arg4433_4]), [Shen.type_cons, Arg4433_0, [Shen.type_cons, Arg4433_1, [Shen.type_cons, Shen.call(Shen.fns["regkl.context-nregs"], [R0]), [Shen.type_cons, R1, []]]]]])}, 6, [], "regkl.mk-defun-kl"];

Shen.fns["regkl.walk-defun"] = [Shen.type_func, function shen_user_lambda4484(Arg4433) {
  if (Arg4433.length < 5) return [Shen.type_func, shen_user_lambda4484, 5, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3], Arg4433_4 = Arg4433[4];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["regkl.mk-context"], [Arg4433_4, 0])),
  (R1 = Shen.call(Shen.fns["regkl.mk-defun-kl"], [Arg4433_0, Arg4433_1, Arg4433_2, [], Arg4433_3, R0])),
  [Shen.type_cons, R1, Shen.call(Shen.fns["regkl.context-toplevel"], [R0])])}, 5, [], "regkl.walk-defun"];

Shen.fns["regkl.toplevel-do"] = [Shen.type_func, function shen_user_lambda4485(Arg4433) {
  if (Arg4433.length < 1) return [Shen.type_func, shen_user_lambda4485, 1, Arg4433];
  var Arg4433_0 = Arg4433[0];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4433_0))
  ? []
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && Shen.empty$question$(Arg4433_0[2])))
  ? Arg4433_0[1]
  : ((Shen.is_type(Arg4433_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], Shen.call(Shen.fns["reverse"], [Arg4433_0])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.toplevel-do"]]);}))))}, 1, [], "regkl.toplevel-do"];

Shen.fns["regkl.walk-toplevel"] = [Shen.type_func, function shen_user_lambda4486(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4486, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "regkl.shen-toplevel-"]])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-defun"], [R0, [], Shen.call(Shen.fns["regkl.toplevel-do"], [Arg4433_0]), true, Arg4433_1]);}))}, 2, [], "regkl.walk-toplevel"];

Shen.fns["regkl.walk-aux"] = [Shen.type_func, function shen_user_lambda4487(Arg4433) {
  if (Arg4433.length < 4) return [Shen.type_func, shen_user_lambda4487, 4, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1], Arg4433_2 = Arg4433[2], Arg4433_3 = Arg4433[3];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg4433_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Shen.call(Shen.fns["regkl.walk-toplevel"], [Arg4433_3, Arg4433_2])]);})
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.is_type(Arg4433_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4433_0[1][1])) && (Shen.is_type(Arg4433_0[1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg4433_0[1][2][1])) && (Shen.is_type(Arg4433_0[1][2][2], Shen.type_cons) && Shen.empty$question$(Arg4433_0[1][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-aux"], [Arg4433_0[2], Arg4433_1, Arg4433_2, Arg4433_3]);})
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && (Shen.is_type(Arg4433_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4433_0[1][1])) && (Shen.is_type(Arg4433_0[1][2], Shen.type_cons) && (Shen.is_type(Arg4433_0[1][2][2], Shen.type_cons) && (Shen.is_type(Arg4433_0[1][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4433_0[1][2][2][2][2]))))))))
  ? ((R0 = Shen.call(Shen.fns["regkl.walk-defun"], [Arg4433_0[1][2][1], Arg4433_0[1][2][2][1], Arg4433_0[1][2][2][2][1], false, Arg4433_2])),
  (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-aux"], [Arg4433_0[2], Arg4433_1, R0, Arg4433_3]);}))
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && Shen.is_type(Arg4433_0[1], Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-aux"], [Arg4433_0[2], Arg4433_1, Arg4433_2, [Shen.type_cons, Arg4433_0[1], Arg4433_3]]);})
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(true, Arg4433_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-aux"], [Arg4433_0[2], true, Arg4433_2, Arg4433_3]);})
  : (((Shen.is_type(Arg4433_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(false, Arg4433_1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-aux"], [Arg4433_0[2], false, [Shen.type_cons, Arg4433_0[1], Arg4433_2], Arg4433_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "regkl.walk-aux"]]);})))))))}, 4, [], "regkl.walk-aux"];

Shen.fns["regkl.walk"] = [Shen.type_func, function shen_user_lambda4488(Arg4433) {
  if (Arg4433.length < 2) return [Shen.type_func, shen_user_lambda4488, 2, Arg4433];
  var Arg4433_0 = Arg4433[0], Arg4433_1 = Arg4433[1];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["regkl.walk-aux"], [Arg4433_0, Arg4433_1, [], []]);})}, 2, [], "regkl.walk"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4489(Arg4433) {
  if (Arg4433.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4489, 0, Arg4433];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "regkl.type#context"], Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda4491(Arg4490) {
  if (Arg4490.length < 1) return [Shen.type_func, shen_user_lambda4491, 1, Arg4490];
  var Arg4490_0 = Arg4490[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<datatype-rules>"], [Arg4490_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "regkl.context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_func, function shen_user_lambda4493(Arg4492) {
  if (Arg4492.length < 1) return [Shen.type_func, shen_user_lambda4493, 1, Arg4492];
  var Arg4492_0 = Arg4492[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.datatype-error"], [Arg4492_0]);})}, 1, [], undefined]])]);})});


Shen.fns["denest.varname"] = [Shen.type_func, function shen_user_lambda4560(Arg4559) {
  if (Arg4559.length < 2) return [Shen.type_func, shen_user_lambda4560, 2, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1];
  return ((Shen.empty$question$(Arg4559_1))
  ? Arg4559_0
  : (((Shen.is_type(Arg4559_1, Shen.type_cons) && (Shen.is_type(Arg4559_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4559_1[1][1], Arg4559_0)))))
  ? Arg4559_1[1][2]
  : ((Shen.is_type(Arg4559_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["denest.varname"], [Arg4559_0, Arg4559_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "denest.varname"]]);}))))}, 2, [], "denest.varname"];

Shen.fns["denest.walk-let"] = [Shen.type_func, function shen_user_lambda4561(Arg4559) {
  if (Arg4559.length < 5) return [Shen.type_func, shen_user_lambda4561, 5, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1], Arg4559_2 = Arg4559[2], Arg4559_3 = Arg4559[3], Arg4559_4 = Arg4559[4];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Shenkl"]])),
  (R1 = Shen.call(Shen.fns["denest.walk-expr"], [Arg4559_1, Arg4559_3, Arg4559_4])),
  (R2 = [Shen.type_cons, [Shen.type_cons, Arg4559_0, R0], Arg4559_4]),
  (R1 = [Shen.type_cons, [Shen.type_cons, R0, Shen.call(Shen.fns["fst"], [R1])], Shen.call(Shen.fns["snd"], [R1])]),
  (function() {
  return Shen.call_tail(Shen.fns["denest.walk-expr"], [Arg4559_2, R1, R2]);}))}, 5, [], "denest.walk-let"];

Shen.fns["denest.walk-if"] = [Shen.type_func, function shen_user_lambda4562(Arg4559) {
  if (Arg4559.length < 5) return [Shen.type_func, shen_user_lambda4562, 5, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1], Arg4559_2 = Arg4559[2], Arg4559_3 = Arg4559[3], Arg4559_4 = Arg4559[4];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Shenkl"]])),
  (R1 = Shen.call(Shen.fns["denest.walk-expr"], [Arg4559_0, Arg4559_3, Arg4559_4])),
  (R1 = [Shen.type_cons, [Shen.type_cons, R0, Shen.call(Shen.fns["fst"], [R1])], Shen.call(Shen.fns["snd"], [R1])]),
  (R2 = Shen.call(Shen.fns["denest.walk-aux"], [Arg4559_1, Arg4559_4])),
  (R3 = Shen.call(Shen.fns["denest.walk-aux"], [Arg4559_2, Arg4559_4])),
  [Shen.fns['shen.tuple'], [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R2, [Shen.type_cons, R3, []]]]], R1])}, 5, [], "denest.walk-if"];

Shen.fns["denest.walk-cond-aux"] = [Shen.type_func, function shen_user_lambda4563(Arg4559) {
  if (Arg4559.length < 1) return [Shen.type_func, shen_user_lambda4563, 1, Arg4559];
  var Arg4559_0 = Arg4559[0];
  var R0, R1, R2, R3;
  return ((Shen.empty$question$(Arg4559_0))
  ? [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "error: cond failure", []]]
  : (((Shen.is_type(Arg4559_0, Shen.type_cons) && (Shen.is_type(Arg4559_0[1], Shen.type_cons) && (Shen.is_type(Arg4559_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg4559_0[1][2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg4559_0[1][1], [Shen.type_cons, Arg4559_0[1][2][1], [Shen.type_cons, Shen.call(Shen.fns["denest.walk-cond-aux"], [Arg4559_0[2]]), []]]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "denest.walk-cond-aux"]]);})))}, 1, [], "denest.walk-cond-aux"];

Shen.fns["denest.walk-cond"] = [Shen.type_func, function shen_user_lambda4564(Arg4559) {
  if (Arg4559.length < 3) return [Shen.type_func, shen_user_lambda4564, 3, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1], Arg4559_2 = Arg4559[2];
  var R0, R1, R2, R3;
  return (function() {
  return Shen.call_tail(Shen.fns["denest.walk-expr"], [Shen.call(Shen.fns["denest.walk-cond-aux"], [Arg4559_0]), Arg4559_1, Arg4559_2]);})}, 3, [], "denest.walk-cond"];

Shen.fns["denest.walk-lambda"] = [Shen.type_func, function shen_user_lambda4565(Arg4559) {
  if (Arg4559.length < 4) return [Shen.type_func, shen_user_lambda4565, 4, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1], Arg4559_2 = Arg4559[2], Arg4559_3 = Arg4559[3];
  var R0, R1, R2, R3;
  return ((R0 = [Shen.type_cons, [Shen.type_cons, Arg4559_0, Arg4559_0], Arg4559_3]),
  [Shen.fns['shen.tuple'], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg4559_0, [Shen.type_cons, Shen.call(Shen.fns["denest.walk-aux"], [Arg4559_1, R0]), []]]], Arg4559_2])}, 4, [], "denest.walk-lambda"];

Shen.fns["denest.walk-freeze"] = [Shen.type_func, function shen_user_lambda4566(Arg4559) {
  if (Arg4559.length < 3) return [Shen.type_func, shen_user_lambda4566, 3, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1], Arg4559_2 = Arg4559[2];
  var R0, R1, R2, R3;
  return [Shen.fns['shen.tuple'], [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Shen.call(Shen.fns["denest.walk-aux"], [Arg4559_0, Arg4559_2]), []]], Arg4559_1]}, 3, [], "denest.walk-freeze"];

Shen.fns["denest.walk-shortcut"] = [Shen.type_func, function shen_user_lambda4567(Arg4559) {
  if (Arg4559.length < 6) return [Shen.type_func, shen_user_lambda4567, 6, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1], Arg4559_2 = Arg4559[2], Arg4559_3 = Arg4559[3], Arg4559_4 = Arg4559[4], Arg4559_5 = Arg4559[5];
  var R0, R1, R2, R3;
  return (function() {
  return Shen.call_tail(Shen.fns["denest.walk-expr"], [Shen.call(Arg4559_5, [Arg4559_1, Arg4559_2]), Arg4559_3, Arg4559_4]);})}, 6, [], "denest.walk-shortcut"];

Shen.fns["denest.and-fn"] = [Shen.type_func, function shen_user_lambda4568(Arg4559) {
  if (Arg4559.length < 2) return [Shen.type_func, shen_user_lambda4568, 2, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1];
  var R0, R1, R2, R3;
  return [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg4559_0, [Shen.type_cons, Arg4559_1, [Shen.type_cons, false, []]]]]}, 2, [], "denest.and-fn"];

Shen.fns["denest.or-fn"] = [Shen.type_func, function shen_user_lambda4569(Arg4559) {
  if (Arg4559.length < 2) return [Shen.type_func, shen_user_lambda4569, 2, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1];
  var R0, R1, R2, R3;
  return [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg4559_0, [Shen.type_cons, true, [Shen.type_cons, Arg4559_1, []]]]]}, 2, [], "denest.or-fn"];

Shen.fns["denest.walk-do-aux"] = [Shen.type_func, function shen_user_lambda4570(Arg4559) {
  if (Arg4559.length < 3) return [Shen.type_func, shen_user_lambda4570, 3, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1], Arg4559_2 = Arg4559[2];
  var R0, R1, R2, R3;
  return ((Shen.empty$question$(Arg4559_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4559_2]);})
  : ((Shen.is_type(Arg4559_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["denest.walk-aux"], [Arg4559_0[1], Arg4559_1])),
  (function() {
  return Shen.call_tail(Shen.fns["denest.walk-do-aux"], [Arg4559_0[2], Arg4559_1, [Shen.type_cons, R0, Arg4559_2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "denest.walk-do-aux"]]);})))}, 3, [], "denest.walk-do-aux"];

Shen.fns["denest.walk-do"] = [Shen.type_func, function shen_user_lambda4571(Arg4559) {
  if (Arg4559.length < 3) return [Shen.type_func, shen_user_lambda4571, 3, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1], Arg4559_2 = Arg4559[2];
  var R0, R1, R2, R3;
  return [Shen.fns['shen.tuple'], [Shen.type_cons, [Shen.type_symbol, "do"], Shen.call(Shen.fns["denest.walk-do-aux"], [Arg4559_0, Arg4559_2, []])], Arg4559_1]}, 3, [], "denest.walk-do"];

Shen.fns["denest.walk-trap"] = [Shen.type_func, function shen_user_lambda4572(Arg4559) {
  if (Arg4559.length < 4) return [Shen.type_func, shen_user_lambda4572, 4, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1], Arg4559_2 = Arg4559[2], Arg4559_3 = Arg4559[3];
  var R0, R1, R2, R3;
  return [Shen.fns['shen.tuple'], [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, Shen.call(Shen.fns["denest.walk-aux"], [Arg4559_0, Arg4559_3]), [Shen.type_cons, Shen.call(Shen.fns["denest.walk-aux"], [Arg4559_1, Arg4559_3]), []]]], Arg4559_2]}, 4, [], "denest.walk-trap"];

Shen.fns["denest.walk-expr"] = [Shen.type_func, function shen_user_lambda4573(Arg4559) {
  if (Arg4559.length < 3) return [Shen.type_func, shen_user_lambda4573, 3, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1], Arg4559_2 = Arg4559[2];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg4559_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg4559_0[1])) && (Shen.is_type(Arg4559_0[2], Shen.type_cons) && (Shen.is_type(Arg4559_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4559_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["denest.walk-expr"], [Shen.call(Shen.fns["denest.and-fn"], [Arg4559_0[2][1], Arg4559_0[2][2][1]]), Arg4559_1, Arg4559_2]);})
  : (((Shen.is_type(Arg4559_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg4559_0[1])) && (Shen.is_type(Arg4559_0[2], Shen.type_cons) && (Shen.is_type(Arg4559_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4559_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["denest.walk-expr"], [Shen.call(Shen.fns["denest.or-fn"], [Arg4559_0[2][1], Arg4559_0[2][2][1]]), Arg4559_1, Arg4559_2]);})
  : (((Shen.is_type(Arg4559_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4559_0[1])) && (Shen.is_type(Arg4559_0[2], Shen.type_cons) && (Shen.is_type(Arg4559_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4559_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4559_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["denest.walk-if"], [Arg4559_0[2][1], Arg4559_0[2][2][1], Arg4559_0[2][2][2][1], Arg4559_1, Arg4559_2]);})
  : (((Shen.is_type(Arg4559_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg4559_0[1])) && (Shen.is_type(Arg4559_0[2], Shen.type_cons) && (Shen.is_type(Arg4559_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4559_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4559_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["denest.walk-let"], [Arg4559_0[2][1], Arg4559_0[2][2][1], Arg4559_0[2][2][2][1], Arg4559_1, Arg4559_2]);})
  : (((Shen.is_type(Arg4559_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg4559_0[1])) && (Shen.is_type(Arg4559_0[2], Shen.type_cons) && Shen.empty$question$(Arg4559_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["denest.walk-freeze"], [Arg4559_0[2][1], Arg4559_1, Arg4559_2]);})
  : (((Shen.is_type(Arg4559_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg4559_0[1])) && (Shen.is_type(Arg4559_0[2], Shen.type_cons) && (Shen.is_type(Arg4559_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4559_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["denest.walk-lambda"], [Arg4559_0[2][1], Arg4559_0[2][2][1], Arg4559_1, Arg4559_2]);})
  : (((Shen.is_type(Arg4559_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg4559_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["denest.walk-cond"], [Arg4559_0[2], Arg4559_1, Arg4559_2]);})
  : (((Shen.is_type(Arg4559_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg4559_0[1])) && (Shen.is_type(Arg4559_0[2], Shen.type_cons) && (Shen.is_type(Arg4559_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4559_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4559_0[2][2][2][2])))))))
  ? [Shen.fns['shen.tuple'], [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg4559_0[2][1], [Shen.type_cons, Arg4559_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["denest.walk"], [Arg4559_0[2][2][2][1]]), []]]]], Arg4559_1]
  : (((Shen.is_type(Arg4559_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "trap-error"], Arg4559_0[1])) && (Shen.is_type(Arg4559_0[2], Shen.type_cons) && (Shen.is_type(Arg4559_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4559_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["denest.walk-trap"], [Arg4559_0[2][1], Arg4559_0[2][2][1], Arg4559_1, Arg4559_2]);})
  : (((Shen.is_type(Arg4559_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4559_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["denest.walk-do"], [Arg4559_0[2], Arg4559_1, Arg4559_2]);})
  : ((Shen.is_type(Arg4559_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["denest.walk-app"], [Arg4559_0, Arg4559_1, Arg4559_2, []]);})
  : [Shen.fns['shen.tuple'], Shen.call(Shen.fns["denest.varname"], [Arg4559_0, Arg4559_2]), Arg4559_1])))))))))))}, 3, [], "denest.walk-expr"];

Shen.fns["denest.walk-app"] = [Shen.type_func, function shen_user_lambda4574(Arg4559) {
  if (Arg4559.length < 4) return [Shen.type_func, shen_user_lambda4574, 4, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1], Arg4559_2 = Arg4559[2], Arg4559_3 = Arg4559[3];
  var R0, R1, R2, R3;
  return ((Shen.empty$question$(Arg4559_0))
  ? [Shen.fns['shen.tuple'], Shen.call(Shen.fns["reverse"], [Arg4559_3]), Arg4559_1]
  : (((Shen.is_type(Arg4559_0, Shen.type_cons) && (Shen.is_type(Arg4559_0[1], Shen.type_cons) && (!Shen.call(Shen.fns["element?"], [Arg4559_0[1][1], [Shen.type_cons, [Shen.type_symbol, "type"], []]])))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Shenkl"]])),
  (R1 = Shen.call(Shen.fns["denest.walk-expr"], [Arg4559_0[1], Arg4559_1, Arg4559_2])),
  (R1 = [Shen.type_cons, [Shen.type_cons, R0, Shen.call(Shen.fns["fst"], [R1])], Shen.call(Shen.fns["snd"], [R1])]),
  (function() {
  return Shen.call_tail(Shen.fns["denest.walk-app"], [Arg4559_0[2], R1, Arg4559_2, [Shen.type_cons, R0, Arg4559_3]]);}))
  : ((Shen.is_type(Arg4559_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["denest.walk-app"], [Arg4559_0[2], Arg4559_1, Arg4559_2, [Shen.type_cons, Shen.call(Shen.fns["denest.varname"], [Arg4559_0[1], Arg4559_2]), Arg4559_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "denest.walk-app"]]);}))))}, 4, [], "denest.walk-app"];

Shen.fns["denest.mk-let-cascade"] = [Shen.type_func, function shen_user_lambda4575(Arg4559) {
  if (Arg4559.length < 2) return [Shen.type_func, shen_user_lambda4575, 2, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1];
  var R0, R1, R2, R3;
  return ((Shen.empty$question$(Arg4559_0))
  ? Arg4559_1
  : (((Shen.is_type(Arg4559_0, Shen.type_cons) && Shen.is_type(Arg4559_0[1], Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg4559_0[1][1], [Shen.type_cons, Arg4559_0[1][2], [Shen.type_cons, Shen.call(Shen.fns["denest.mk-let-cascade"], [Arg4559_0[2], Arg4559_1]), []]]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "denest.mk-let-cascade"]]);})))}, 2, [], "denest.mk-let-cascade"];

Shen.fns["denest.walk-aux"] = [Shen.type_func, function shen_user_lambda4576(Arg4559) {
  if (Arg4559.length < 2) return [Shen.type_func, shen_user_lambda4576, 2, Arg4559];
  var Arg4559_0 = Arg4559[0], Arg4559_1 = Arg4559[1];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["denest.walk-expr"], [Arg4559_0, [], Arg4559_1])),
  (function() {
  return Shen.call_tail(Shen.fns["denest.mk-let-cascade"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["snd"], [R0])]), Shen.call(Shen.fns["fst"], [R0])]);}))}, 2, [], "denest.walk-aux"];

Shen.fns["denest.walk"] = [Shen.type_func, function shen_user_lambda4577(Arg4559) {
  if (Arg4559.length < 1) return [Shen.type_func, shen_user_lambda4577, 1, Arg4559];
  var Arg4559_0 = Arg4559[0];
  var R0, R1, R2, R3;
  return (function() {
  return Shen.call_tail(Shen.fns["denest.walk-aux"], [Arg4559_0, []]);})}, 1, [], "denest.walk"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4578(Arg4559) {
  if (Arg4559.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4578, 0, Arg4559];
  var R0, R1, R2, R3;
  return []});


Shen.fns["klvm.s1.mk-context"] = [Shen.type_func, function shen_user_lambda4899(Arg4898) {
  if (Arg4898.length < 7) return [Shen.type_func, shen_user_lambda4899, 7, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3], Arg4898_4 = Arg4898[4], Arg4898_5 = Arg4898[5], Arg4898_6 = Arg4898[6];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg4898_0, Shen.call(Shen.fns["@v"], [Arg4898_1, Shen.call(Shen.fns["@v"], [Arg4898_2, Shen.call(Shen.fns["@v"], [Arg4898_3, Shen.call(Shen.fns["@v"], [Arg4898_4, Shen.call(Shen.fns["@v"], [Arg4898_5, Shen.call(Shen.fns["@v"], [Arg4898_6, Shen.vector(0)])])])])])])]);})}, 7, [], "klvm.s1.mk-context"];

Shen.fns["klvm.s1.context-native->"] = [Shen.type_func, function shen_user_lambda4900(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4900, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4898_0, 7, Arg4898_1]);})}, 2, [], "klvm.s1.context-native->"];

Shen.fns["klvm.s1.context-toplevel->"] = [Shen.type_func, function shen_user_lambda4901(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4901, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4898_0, 6, Arg4898_1]);})}, 2, [], "klvm.s1.context-toplevel->"];

Shen.fns["klvm.s1.context-frame-size-extra->"] = [Shen.type_func, function shen_user_lambda4902(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4902, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4898_0, 5, Arg4898_1]);})}, 2, [], "klvm.s1.context-frame-size-extra->"];

Shen.fns["klvm.s1.context-frame-size->"] = [Shen.type_func, function shen_user_lambda4903(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4903, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4898_0, 4, Arg4898_1]);})}, 2, [], "klvm.s1.context-frame-size->"];

Shen.fns["klvm.s1.context-arity->"] = [Shen.type_func, function shen_user_lambda4904(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4904, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4898_0, 3, Arg4898_1]);})}, 2, [], "klvm.s1.context-arity->"];

Shen.fns["klvm.s1.context-nregs->"] = [Shen.type_func, function shen_user_lambda4905(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4905, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4898_0, 2, Arg4898_1]);})}, 2, [], "klvm.s1.context-nregs->"];

Shen.fns["klvm.s1.context-func->"] = [Shen.type_func, function shen_user_lambda4906(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4906, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg4898_0, 1, Arg4898_1]);})}, 2, [], "klvm.s1.context-func->"];

Shen.fns["klvm.s1.context-native"] = [Shen.type_func, function shen_user_lambda4907(Arg4898) {
  if (Arg4898.length < 1) return [Shen.type_func, shen_user_lambda4907, 1, Arg4898];
  var Arg4898_0 = Arg4898[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4898_0, 7]);})}, 1, [], "klvm.s1.context-native"];

Shen.fns["klvm.s1.context-toplevel"] = [Shen.type_func, function shen_user_lambda4908(Arg4898) {
  if (Arg4898.length < 1) return [Shen.type_func, shen_user_lambda4908, 1, Arg4898];
  var Arg4898_0 = Arg4898[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4898_0, 6]);})}, 1, [], "klvm.s1.context-toplevel"];

Shen.fns["klvm.s1.context-frame-size-extra"] = [Shen.type_func, function shen_user_lambda4909(Arg4898) {
  if (Arg4898.length < 1) return [Shen.type_func, shen_user_lambda4909, 1, Arg4898];
  var Arg4898_0 = Arg4898[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4898_0, 5]);})}, 1, [], "klvm.s1.context-frame-size-extra"];

Shen.fns["klvm.s1.context-frame-size"] = [Shen.type_func, function shen_user_lambda4910(Arg4898) {
  if (Arg4898.length < 1) return [Shen.type_func, shen_user_lambda4910, 1, Arg4898];
  var Arg4898_0 = Arg4898[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4898_0, 4]);})}, 1, [], "klvm.s1.context-frame-size"];

Shen.fns["klvm.s1.context-arity"] = [Shen.type_func, function shen_user_lambda4911(Arg4898) {
  if (Arg4898.length < 1) return [Shen.type_func, shen_user_lambda4911, 1, Arg4898];
  var Arg4898_0 = Arg4898[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4898_0, 3]);})}, 1, [], "klvm.s1.context-arity"];

Shen.fns["klvm.s1.context-nregs"] = [Shen.type_func, function shen_user_lambda4912(Arg4898) {
  if (Arg4898.length < 1) return [Shen.type_func, shen_user_lambda4912, 1, Arg4898];
  var Arg4898_0 = Arg4898[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4898_0, 2]);})}, 1, [], "klvm.s1.context-nregs"];

Shen.fns["klvm.s1.context-func"] = [Shen.type_func, function shen_user_lambda4913(Arg4898) {
  if (Arg4898.length < 1) return [Shen.type_func, shen_user_lambda4913, 1, Arg4898];
  var Arg4898_0 = Arg4898[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg4898_0, 1]);})}, 1, [], "klvm.s1.context-func"];

Shen.fns["klvm.s1.warning"] = [Shen.type_func, function shen_user_lambda4914(Arg4898) {
  if (Arg4898.length < 1) return [Shen.type_func, shen_user_lambda4914, 1, Arg4898];
  var Arg4898_0 = Arg4898[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("Warning: " + Shen.call(Shen.fns["shen.app"], [Arg4898_0, "", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], "klvm.s1.warning"];

Shen.fns["klvm.s1.warn-type"] = [Shen.type_func, function shen_user_lambda4915(Arg4898) {
  if (Arg4898.length < 0) return [Shen.type_func, shen_user_lambda4915, 0, Arg4898];
  return (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.warning"], ["`type` expression is not supported yet"]);})}, 0, [], "klvm.s1.warn-type"];

Shen.fns["klvm.s1.const?"] = [Shen.type_func, function shen_user_lambda4916(Arg4898) {
  if (Arg4898.length < 1) return [Shen.type_func, shen_user_lambda4916, 1, Arg4898];
  var Arg4898_0 = Arg4898[0];
  return ((Shen.empty$question$(Arg4898_0))
  ? true
  : ((Shen.is_type(Arg4898_0, Shen.type_symbol))
  ? true
  : (((typeof(Arg4898_0) == 'string'))
  ? true
  : (((typeof(Arg4898_0) == 'number'))
  ? true
  : ((Shen.boolean$question$(Arg4898_0))
  ? true
  : false)))))}, 1, [], "klvm.s1.const?"];

Shen.fns["klvm.s1.func-reg"] = [Shen.type_func, function shen_user_lambda4917(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4917, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  return (Shen.call(Shen.fns["klvm.s1.context-arity"], [Arg4898_1]) + Arg4898_0)}, 2, [], "klvm.s1.func-reg"];

Shen.fns["klvm.s1.func-arg"] = [Shen.type_func, function shen_user_lambda4918(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4918, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  return (Shen.call(Shen.fns["klvm.s1.context-arity"], [Arg4898_1]) - (Arg4898_0 + 1))}, 2, [], "klvm.s1.func-arg"];

Shen.fns["klvm.s1.upd-context-frame-size-extra"] = [Shen.type_func, function shen_user_lambda4919(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4919, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  return (((Arg4898_0 > Shen.call(Shen.fns["klvm.s1.context-frame-size-extra"], [Arg4898_1])))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.context-frame-size-extra->"], [Arg4898_1, Arg4898_0]);})
  : Arg4898_1)}, 2, [], "klvm.s1.upd-context-frame-size-extra"];

Shen.fns["klvm.s1.reg-from-arg"] = [Shen.type_func, function shen_user_lambda4920(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4920, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  return (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.reg"], Arg4898_0[1])) && Shen.is_type(Arg4898_0[2], Shen.type_cons))))
  ? Arg4898_0[2][1]
  : [Shen.type_cons, Arg4898_0, []])}, 2, [], "klvm.s1.reg-from-arg"];

Shen.fns["klvm.s1.regs-from-args"] = [Shen.type_func, function shen_user_lambda4921(Arg4898) {
  if (Arg4898.length < 3) return [Shen.type_func, shen_user_lambda4921, 3, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2];
  return ((Shen.empty$question$(Arg4898_0))
  ? Arg4898_2
  : ((Shen.is_type(Arg4898_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.regs-from-args"], [Arg4898_0[2], Arg4898_1, [Shen.type_cons, Shen.call(Shen.fns["klvm.s1.reg-from-arg"], [Arg4898_0[1], Arg4898_1]), Arg4898_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.regs-from-args"]]);})))}, 3, [], "klvm.s1.regs-from-args"];

Shen.fns["klvm.s1.set-call-args"] = [Shen.type_func, function shen_user_lambda4922(Arg4898) {
  if (Arg4898.length < 3) return [Shen.type_func, shen_user_lambda4922, 3, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2];
  return ((Shen.empty$question$(Arg4898_0))
  ? Arg4898_2
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.is_type(Arg4898_0[1], Shen.type_cons) && Shen.empty$question$(Arg4898_0[1][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.set-call-args"], [Arg4898_0[2], (Arg4898_1 + 1), [Shen.type_cons, [Shen.type_cons, Arg4898_1, Arg4898_0[1][1]], Arg4898_2]]);})
  : ((Shen.is_type(Arg4898_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.set-call-args"], [Arg4898_0[2], (Arg4898_1 + 1), [Shen.type_cons, [Shen.type_cons, Arg4898_1, [Shen.type_cons, [Shen.type_symbol, "klvm.reg"], [Shen.type_cons, Arg4898_0[1], []]]], Arg4898_2]]);})
  : ((Shen.is_type(Arg4898_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("Unexpected arg expr: " + Shen.call(Shen.fns["shen.app"], [Arg4898_0[1], "\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.set-call-args"]]);})))))}, 3, [], "klvm.s1.set-call-args"];

Shen.fns["klvm.s1.walk-call"] = [Shen.type_func, function shen_user_lambda4923(Arg4898) {
  if (Arg4898.length < 5) return [Shen.type_func, shen_user_lambda4923, 5, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3], Arg4898_4 = Arg4898[4];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["klvm.s1.regs-from-args"], [Arg4898_1, Arg4898_3, []])),
  (R1 = Shen.call(Shen.fns["length"], [R0])),
  Shen.call(Shen.fns["klvm.s1.upd-context-frame-size-extra"], [R1, Arg4898_3]),
  (R0 = Shen.call(Shen.fns["klvm.s1.set-call-args"], [R0, 0, []])),
  [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.call"], [Shen.type_cons, Arg4898_0, [Shen.type_cons, R1, [Shen.type_cons, Arg4898_2, [Shen.type_cons, Shen.call(Shen.fns["reverse"], [R0]), []]]]]], Arg4898_4])}, 5, [], "klvm.s1.walk-call"];

Shen.fns["klvm.s1.place-free-args"] = [Shen.type_func, function shen_user_lambda4924(Arg4898) {
  if (Arg4898.length < 5) return [Shen.type_func, shen_user_lambda4924, 5, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3], Arg4898_4 = Arg4898[4];
  var R0, R1;
  return ((Shen.empty$question$(Arg4898_0))
  ? [Shen.fns['shen.tuple'], Arg4898_4, Shen.call(Shen.fns["reverse"], [Arg4898_3])]
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && Shen.empty$question$(Arg4898_0[1])))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.place-free-args"], [Arg4898_0[2], (Arg4898_1 + 1), Arg4898_2, [Shen.type_cons, [], Arg4898_3], Arg4898_4]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg4898_1, Arg4898_2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.place-free-args"], [Arg4898_0[2], (Arg4898_1 + 1), Arg4898_2, [Shen.type_cons, Arg4898_0[1], Arg4898_3], Arg4898_4]);})
  : ((Shen.is_type(Arg4898_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_cons, Arg4898_1, Arg4898_0[1]], Arg4898_4]),
  (R1 = [Shen.type_cons, [], Arg4898_3]),
  (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.place-free-args"], [Arg4898_0[2], (Arg4898_1 + 1), Arg4898_2, R1, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.place-free-args"]]);})))))}, 5, [], "klvm.s1.place-free-args"];

Shen.fns["klvm.s1.mk-place"] = [Shen.type_func, function shen_user_lambda4925(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4925, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg4898_0))
  ? (Arg4898_1 + 1)
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.is_type(Arg4898_0[1], Shen.type_cons) && (Arg4898_1 > Arg4898_0[1][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.mk-place"], [Arg4898_0[2], Arg4898_1]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && Shen.is_type(Arg4898_0[1], Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.mk-place"], [Arg4898_0[2], Arg4898_0[1][2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.mk-place"]]);}))))}, 2, [], "klvm.s1.mk-place"];

Shen.fns["klvm.s1.place-args'"] = [Shen.type_func, function shen_user_lambda4926(Arg4898) {
  if (Arg4898.length < 4) return [Shen.type_func, shen_user_lambda4926, 4, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3];
  var R0, R1;
  return ((Shen.empty$question$(Arg4898_0))
  ? [Shen.fns['shen.tuple'], Arg4898_3, Arg4898_2]
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && Shen.empty$question$(Arg4898_0[1])))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.place-args'"], [Arg4898_0[2], (Arg4898_1 + 1), Arg4898_2, Arg4898_3]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (!Shen.call(Shen.fns["element?"], [Arg4898_1, Arg4898_0[2]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.place-args'"], [Arg4898_0[2], (Arg4898_1 + 1), Arg4898_2, [Shen.type_cons, [Shen.type_cons, Arg4898_1, Arg4898_0[1]], Arg4898_3]]);})
  : ((Shen.is_type(Arg4898_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["klvm.s1.mk-place"], [Arg4898_2, 0])),
  (R1 = [Shen.type_cons, [Shen.type_cons, R0, Arg4898_0[1]], Arg4898_3]),
  (R0 = [Shen.type_cons, [Shen.type_cons, Arg4898_1, R0], Arg4898_2]),
  (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.place-args'"], [Arg4898_0[2], (Arg4898_1 + 1), R0, R1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.place-args'"]]);})))))}, 4, [], "klvm.s1.place-args'"];

Shen.fns["klvm.s1.place-extra"] = [Shen.type_func, function shen_user_lambda4927(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4927, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg4898_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4898_1]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.is_type(Arg4898_0[1], Shen.type_cons) && (Shen.empty$question$(Arg4898_0[1][1]) && Shen.empty$question$(Arg4898_0[2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4898_1]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && Shen.is_type(Arg4898_0[1], Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.place-extra"], [Arg4898_0[2], [Shen.type_cons, Arg4898_0[1], Arg4898_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.place-extra"]]);}))))}, 2, [], "klvm.s1.place-extra"];

Shen.fns["klvm.s1.nplaces"] = [Shen.type_func, function shen_user_lambda4928(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4928, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg4898_0))
  ? Arg4898_1
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.is_type(Arg4898_0[1], Shen.type_cons) && (Arg4898_1 > Arg4898_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.nplaces"], [Arg4898_0[2], Arg4898_1]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && Shen.is_type(Arg4898_0[1], Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.nplaces"], [Arg4898_0[2], Arg4898_0[1][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.nplaces"]]);}))))}, 2, [], "klvm.s1.nplaces"];

Shen.fns["klvm.s1.place-args"] = [Shen.type_func, function shen_user_lambda4929(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4929, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["klvm.s1.place-free-args"], [Arg4898_1, 0, Arg4898_1, [], []])),
  (R0 = Shen.call(Shen.fns["klvm.s1.place-args'"], [Shen.call(Shen.fns["snd"], [R0]), 0, [Shen.type_cons, [Shen.type_cons, [], Arg4898_0], []], Shen.call(Shen.fns["fst"], [R0])])),
  (R0 = Shen.call(Shen.fns["klvm.s1.place-extra"], [Shen.call(Shen.fns["snd"], [R0]), Shen.call(Shen.fns["fst"], [R0])])),
  [Shen.fns['shen.tuple'], R0, Shen.call(Shen.fns["klvm.s1.nplaces"], [R0, 0])])}, 2, [], "klvm.s1.place-args"];

Shen.fns["klvm.s1.set-tailcall-args'"] = [Shen.type_func, function shen_user_lambda4930(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4930, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg4898_0))
  ? Arg4898_1
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.is_type(Arg4898_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg4898_0[1][2], Arg4898_0[1][1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.set-tailcall-args'"], [Arg4898_0[2], Arg4898_1]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.is_type(Arg4898_0[1], Shen.type_cons) && (Shen.is_type(Arg4898_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg4898_0[1][2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.set-tailcall-args'"], [Arg4898_0[2], [Shen.type_cons, [Shen.type_cons, Arg4898_0[1][1], Arg4898_0[1][2][1]], Arg4898_1]]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && Shen.is_type(Arg4898_0[1], Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.set-tailcall-args'"], [Arg4898_0[2], [Shen.type_cons, [Shen.type_cons, Arg4898_0[1][1], [Shen.type_cons, [Shen.type_symbol, "klvm.reg"], [Shen.type_cons, Arg4898_0[1][2], []]]], Arg4898_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.set-tailcall-args'"]]);})))))}, 2, [], "klvm.s1.set-tailcall-args'"];

Shen.fns["klvm.s1.set-tailcall-args"] = [Shen.type_func, function shen_user_lambda4931(Arg4898) {
  if (Arg4898.length < 3) return [Shen.type_func, shen_user_lambda4931, 3, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["klvm.s1.place-args"], [Arg4898_0, Arg4898_1])),
  Shen.call(Shen.fns["klvm.s1.upd-context-frame-size-extra"], [(Shen.call(Shen.fns["snd"], [R0]) + 1)]),
  (R1 = Shen.call(Shen.fns["klvm.s1.set-tailcall-args'"], [Shen.call(Shen.fns["fst"], [R0]), Arg4898_2])),
  [Shen.fns['shen.tuple'], R1, Shen.call(Shen.fns["snd"], [R0])])}, 3, [], "klvm.s1.set-tailcall-args"];

Shen.fns["klvm.s1.walk-tailcall"] = [Shen.type_func, function shen_user_lambda4932(Arg4898) {
  if (Arg4898.length < 4) return [Shen.type_func, shen_user_lambda4932, 4, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["klvm.s1.regs-from-args"], [Arg4898_1, Arg4898_2, []])),
  (R1 = Shen.call(Shen.fns["length"], [R0])),
  Shen.call(Shen.fns["klvm.s1.upd-context-frame-size-extra"], [R1, Arg4898_2]),
  (R0 = Shen.call(Shen.fns["klvm.s1.set-tailcall-args"], [Shen.call(Shen.fns["klvm.s1.context-frame-size"], [Arg4898_2]), R0, []])),
  [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.tailcall"], [Shen.type_cons, Arg4898_0, [Shen.type_cons, R1, [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["fst"], [R0])]), []]]]], Arg4898_3])}, 4, [], "klvm.s1.walk-tailcall"];

Shen.fns["klvm.s1.closure-args"] = [Shen.type_func, function shen_user_lambda4933(Arg4898) {
  if (Arg4898.length < 4) return [Shen.type_func, shen_user_lambda4933, 4, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(Arg4898_2, Arg4898_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4898_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.closure-args"], [Arg4898_0, (Arg4898_1 + 1), Arg4898_2, [Shen.type_cons, Shen.call(Shen.fns["concat"], [Arg4898_0, Arg4898_1]), Arg4898_3]]);}))}, 4, [], "klvm.s1.closure-args"];

Shen.fns["klvm.s1.mk-closure"] = [Shen.type_func, function shen_user_lambda4934(Arg4898) {
  if (Arg4898.length < 6) return [Shen.type_func, shen_user_lambda4934, 6, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3], Arg4898_4 = Arg4898[4], Arg4898_5 = Arg4898[5];
  var R0, R1;
  return (((Shen.empty$question$(Arg4898_1) && Shen.empty$question$(Arg4898_3)))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-tailcall"], [[Shen.type_symbol, "klvm.mk-closure"], [Shen.type_cons, Arg4898_0, Arg4898_2], Arg4898_4, Arg4898_5]);})
  : ((Shen.empty$question$(Arg4898_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-call"], [[Shen.type_symbol, "klvm.mk-closure"], [Shen.type_cons, Arg4898_0, Arg4898_2], Arg4898_3, Arg4898_4, Arg4898_5]);})
  : ((Shen.empty$question$(Arg4898_3))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-tailcall"], [Arg4898_0, Arg4898_2, Arg4898_4, Arg4898_5]);})
  : (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-call"], [Arg4898_0, Arg4898_2, Arg4898_3, Arg4898_4, Arg4898_5]);}))))}, 6, [], "klvm.s1.mk-closure"];

Shen.fns["klvm.s1.walk-closure"] = [Shen.type_func, function shen_user_lambda4935(Arg4898) {
  if (Arg4898.length < 7) return [Shen.type_func, shen_user_lambda4935, 7, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3], Arg4898_4 = Arg4898[4], Arg4898_5 = Arg4898[5], Arg4898_6 = Arg4898[6];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["length"], [Arg4898_3])),
  (R0 = (R0 + Shen.call(Shen.fns["length"], [Arg4898_1]))),
  (R1 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "klvm.s1.klvm-lambda"]])),
  (R2 = Shen.call(Shen.fns["klvm.s1.context-toplevel"], [Arg4898_5])),
  (R0 = Shen.call(Shen.fns["klvm.s1.closure-args"], [[Shen.type_symbol, "A"], 0, R0, []])),
  (R3 = Shen.call(Shen.fns["klvm.s1.context-native"], [Arg4898_5])),
  Shen.call(Shen.fns["klvm.s1.context-toplevel->"], [Arg4898_5, Shen.call(Shen.fns["klvm.s1.walk-func"], [[Shen.type_symbol, "regkl.closure"], R1, R0, Arg4898_2, Arg4898_4, R3, R2])]),
  (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.mk-closure"], [[Shen.type_cons, [Shen.type_symbol, "klvm.lambda"], [Shen.type_cons, R1, []]], Arg4898_1, Arg4898_3, Arg4898_0, Arg4898_5, Arg4898_6]);}))}, 7, [], "klvm.s1.walk-closure"];

Shen.fns["klvm.s1.mk-args"] = [Shen.type_func, function shen_user_lambda4936(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4936, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  var R0, R1, R2, R3;
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda4938(Arg4937) {
  if (Arg4937.length < 2) return [Shen.type_func, shen_user_lambda4938, 2, Arg4937];
  var Arg4937_0 = Arg4937[0], Arg4937_1 = Arg4937[1];
  return (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-x3"], [Arg4937_1, Arg4937_0]);})}, 2, [Arg4898_1], undefined], Arg4898_0]);})}, 2, [], "klvm.s1.mk-args"];

Shen.fns["klvm.s1.walk-native'"] = [Shen.type_func, function shen_user_lambda4939(Arg4898) {
  if (Arg4898.length < 5) return [Shen.type_func, shen_user_lambda4939, 5, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3], Arg4898_4 = Arg4898[4];
  var R0, R1, R2, R3;
  return ((Shen.unwind_tail(Shen.$eq$(Arg4898_0, Shen.fail_obj)))
  ? Arg4898_0
  : (((Shen.empty$question$(Arg4898_1) && Shen.unwind_tail(Shen.$eq$(false, Arg4898_2))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.native"], [Shen.type_cons, Arg4898_0, []]], Arg4898_4]
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4898_2)))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg->"], [Shen.type_cons, Arg4898_1, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.native"], [Shen.type_cons, Arg4898_0, []]], []]]], Arg4898_4]
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg4898_2)))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.return"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.native"], [Shen.type_cons, Arg4898_0, []]], []]], Arg4898_4]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.walk-native'"]]);})))))}, 5, [], "klvm.s1.walk-native'"];

Shen.fns["klvm.s1.walk-native"] = [Shen.type_func, function shen_user_lambda4940(Arg4898) {
  if (Arg4898.length < 6) return [Shen.type_func, shen_user_lambda4940, 6, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3], Arg4898_4 = Arg4898[4], Arg4898_5 = Arg4898[5];
  var R0, R1, R2, R3;
  return (((Shen.empty$question$(Arg4898_2) && Shen.call(Shen.fns["element?"], [Arg4898_0, [Shen.type_cons, [Shen.type_symbol, "klvm.push-error-handler"], [Shen.type_cons, [Shen.type_symbol, "klvm.pop-error-handler"], []]]])))
  ? [Shen.type_cons, [Shen.type_cons, Arg4898_0, Arg4898_1], Arg4898_5]
  : ((R0 = Shen.call(Shen.call(Shen.fns["klvm.s1.context-native"], [Arg4898_4]), [[Shen.type_cons, Arg4898_0, Arg4898_1]])),
  (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-native'"], [R0, Arg4898_2, Arg4898_3, Arg4898_4, Arg4898_5]);})))}, 6, [], "klvm.s1.walk-native"];

Shen.fns["klvm.s1.walk-x3"] = [Shen.type_func, function shen_user_lambda4941(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4941, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4898_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["klvm.s1.warn-type"], []),
  (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-x3"], [Arg4898_0[2][1], Arg4898_1]);}))
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.reg"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && Shen.empty$question$(Arg4898_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "klvm.reg"], [Shen.type_cons, Shen.call(Shen.fns["klvm.s1.func-reg"], [Arg4898_0[2][1], Arg4898_1]), []]]
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.arg"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && Shen.empty$question$(Arg4898_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "klvm.reg"], [Shen.type_cons, Shen.call(Shen.fns["klvm.s1.func-arg"], [Arg4898_0[2][1], Arg4898_1]), []]]
  : ((Shen.call(Shen.fns["klvm.s1.const?"], [Arg4898_0]))
  ? Arg4898_0
  : (function() {
  return Shen.simple_error(("Unexpected L3 Reg-KLambda " + Shen.call(Shen.fns["shen.app"], [Arg4898_0, ".", [Shen.type_symbol, "shen.s"]])));})))))}, 2, [], "klvm.s1.walk-x3"];

Shen.fns["klvm.s1.walk-apply"] = [Shen.type_func, function shen_user_lambda4942(Arg4898) {
  if (Arg4898.length < 5) return [Shen.type_func, shen_user_lambda4942, 5, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3], Arg4898_4 = Arg4898[4];
  var R0, R1, R2, R3;
  return ((R0 = [Shen.type_func, function shen_user_lambda4944(Arg4943) {
  if (Arg4943.length < 5) return [Shen.type_func, shen_user_lambda4944, 5, Arg4943];
  var Arg4943_0 = Arg4943[0], Arg4943_1 = Arg4943[1], Arg4943_2 = Arg4943[2], Arg4943_3 = Arg4943[3], Arg4943_4 = Arg4943[4];
  return (((Shen.is_type(Arg4943_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "thaw"], Arg4943_0[1])) && (Shen.is_type(Arg4943_0[2], Shen.type_cons) && Shen.empty$question$(Arg4943_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-apply"], [Arg4943_0[2], Arg4943_1, Arg4943_2, Arg4943_3, Arg4943_4]);})
  : (((Shen.is_type(Arg4943_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(false, Arg4943_2))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-call"], [Arg4943_0[1], Arg4943_0[2], Arg4943_1, Arg4943_3, Arg4943_4]);})
  : (((Shen.is_type(Arg4943_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(true, Arg4943_2))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-tailcall"], [Arg4943_0[1], Arg4943_0[2], Arg4943_3, Arg4943_4]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.walk-apply"]]);}))))}, 5, [Arg4898_0, Arg4898_1, Arg4898_2, Arg4898_3, Arg4898_4], undefined]),
  ((Shen.is_type(Arg4898_0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["klvm.s1.walk-native"], [Arg4898_0[1], Arg4898_0[2], Arg4898_1, Arg4898_2, Arg4898_3, Arg4898_4])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0)))}, 5, [], "klvm.s1.walk-apply"];

Shen.fns["klvm.s1.walk-x2"] = [Shen.type_func, function shen_user_lambda4945(Arg4898) {
  if (Arg4898.length < 4) return [Shen.type_func, shen_user_lambda4945, 4, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg4898_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["klvm.s1.warn-type"], []),
  (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-x2"], [Arg4898_0[2][1], Arg4898_1, Arg4898_2, Arg4898_3]);}))
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.closure"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4898_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-closure"], [Arg4898_1, Arg4898_0[2][1], Arg4898_0[2][2][1], Shen.call(Shen.fns["klvm.s1.mk-args"], [Arg4898_0[2][2][2][1], Arg4898_2]), Arg4898_0[2][2][2][2][1], Arg4898_2, Arg4898_3]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.freeze"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4898_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-closure"], [Arg4898_1, [], Arg4898_0[2][1], Shen.call(Shen.fns["klvm.s1.mk-args"], [Arg4898_0[2][2][1], Arg4898_2]), Arg4898_0[2][2][2][1], Arg4898_2, Arg4898_3]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.reg"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && Shen.empty$question$(Arg4898_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg->"], [Shen.type_cons, Arg4898_1, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg"], [Shen.type_cons, Shen.call(Shen.fns["klvm.s1.func-reg"], [Arg4898_0[2][1], Arg4898_2]), []]], []]]], Arg4898_3]
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.arg"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && Shen.empty$question$(Arg4898_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg->"], [Shen.type_cons, Arg4898_1, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg"], [Shen.type_cons, Shen.call(Shen.fns["klvm.s1.func-arg"], [Arg4898_0[2][1], Arg4898_2]), []]], []]]], Arg4898_3]
  : ((Shen.is_type(Arg4898_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-apply"], [Shen.call(Shen.fns["klvm.s1.mk-args"], [Arg4898_0, Arg4898_2]), Arg4898_1, false, Arg4898_2, Arg4898_3]);})
  : ((Shen.call(Shen.fns["klvm.s1.const?"], [Arg4898_0]))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg->"], [Shen.type_cons, Arg4898_1, [Shen.type_cons, Arg4898_0, []]]], Arg4898_3]
  : (function() {
  return Shen.simple_error(("Unexpected L2 Reg-KLambda expression " + Shen.call(Shen.fns["shen.app"], [Arg4898_0, "", [Shen.type_symbol, "shen.s"]])));}))))))))}, 4, [], "klvm.s1.walk-x2"];

Shen.fns["klvm.s1.head*"] = [Shen.type_func, function shen_user_lambda4946(Arg4898) {
  if (Arg4898.length < 1) return [Shen.type_func, shen_user_lambda4946, 1, Arg4898];
  var Arg4898_0 = Arg4898[0];
  var R0, R1, R2, R3;
  return ((Shen.empty$question$(Arg4898_0))
  ? []
  : ((Shen.is_type(Arg4898_0, Shen.type_cons))
  ? Arg4898_0[1]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.head*"]]);})))}, 1, [], "klvm.s1.head*"];

Shen.fns["klvm.s1.walk-if-reg"] = [Shen.type_func, function shen_user_lambda4947(Arg4898) {
  if (Arg4898.length < 6) return [Shen.type_func, shen_user_lambda4947, 6, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3], Arg4898_4 = Arg4898[4], Arg4898_5 = Arg4898[5];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["klvm.s1.head*"], [Shen.call(Shen.fns["klvm.s1.walk-x1"], [Arg4898_1, false, Arg4898_3, Arg4898_4, []])])),
  (R1 = Shen.call(Shen.fns["klvm.s1.head*"], [Shen.call(Shen.fns["klvm.s1.walk-x1"], [Arg4898_2, false, Arg4898_3, Arg4898_4, []])])),
  ((Arg4898_3)
  ? (R2 = [Shen.type_symbol, "klvm.tailif"])
  : (R2 = [Shen.type_symbol, "klvm.if"])),
  [Shen.type_cons, [Shen.type_cons, R2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg"], [Shen.type_cons, Arg4898_0, []]], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]], Arg4898_5])}, 6, [], "klvm.s1.walk-if-reg"];

Shen.fns["klvm.s1.walk-if"] = [Shen.type_func, function shen_user_lambda4948(Arg4898) {
  if (Arg4898.length < 6) return [Shen.type_func, shen_user_lambda4948, 6, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3], Arg4898_4 = Arg4898[4], Arg4898_5 = Arg4898[5];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.reg"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && Shen.empty$question$(Arg4898_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-if-reg"], [Shen.call(Shen.fns["klvm.s1.func-reg"], [Arg4898_0[2][1], Arg4898_4]), Arg4898_1, Arg4898_2, Arg4898_3, Arg4898_4, Arg4898_5]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.arg"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && Shen.empty$question$(Arg4898_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-if-reg"], [Shen.call(Shen.fns["klvm.s1.func-arg"], [Arg4898_0[2][1], Arg4898_4]), Arg4898_1, Arg4898_2, Arg4898_3, Arg4898_4, Arg4898_5]);})
  : (function() {
  return Shen.simple_error(("Broken Reg-KLambda " + Shen.call(Shen.fns["shen.app"], [Arg4898_0, ".", [Shen.type_symbol, "shen.s"]])));})))}, 6, [], "klvm.s1.walk-if"];

Shen.fns["klvm.s1.walk-do"] = [Shen.type_func, function shen_user_lambda4949(Arg4898) {
  if (Arg4898.length < 4) return [Shen.type_func, shen_user_lambda4949, 4, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg4898_0, Shen.type_cons) && Shen.empty$question$(Arg4898_0[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-x1"], [Arg4898_0[1], true, Arg4898_1, Arg4898_2, Arg4898_3]);})
  : ((Shen.is_type(Arg4898_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["klvm.s1.walk-x1"], [Arg4898_0[1], true, false, Arg4898_2, Arg4898_3])),
  (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-do"], [Arg4898_0[2], Arg4898_1, Arg4898_2, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.walk-do"]]);})))}, 4, [], "klvm.s1.walk-do"];

Shen.fns["klvm.s1.in-do'"] = [Shen.type_func, function shen_user_lambda4950(Arg4898) {
  if (Arg4898.length < 1) return [Shen.type_func, shen_user_lambda4950, 1, Arg4898];
  var Arg4898_0 = Arg4898[0];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg4898_0, Shen.type_cons) && Shen.empty$question$(Arg4898_0[2])))
  ? Arg4898_0[1]
  : ((Shen.is_type(Arg4898_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], Shen.call(Shen.fns["reverse"], [Arg4898_0])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.in-do'"]]);})))}, 1, [], "klvm.s1.in-do'"];

Shen.fns["klvm.s1.in-do"] = [Shen.type_func, function shen_user_lambda4951(Arg4898) {
  if (Arg4898.length < 3) return [Shen.type_func, shen_user_lambda4951, 3, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2];
  var R0, R1, R2, R3;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg4898_1)))
  ? (function() {
  return Shen.call_tail(Arg4898_0, [Arg4898_2]);})
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4898_1)))
  ? [Shen.type_cons, Shen.call(Shen.fns["klvm.s1.in-do'"], [Shen.call(Arg4898_0, [[]])]), Arg4898_2]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.in-do"]]);})))}, 3, [], "klvm.s1.in-do"];

Shen.fns["klvm.s1.walk-x1"] = [Shen.type_func, function shen_user_lambda4952(Arg4898) {
  if (Arg4898.length < 5) return [Shen.type_func, shen_user_lambda4952, 5, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3], Arg4898_4 = Arg4898[4];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg4898_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg4898_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.in-do"], [Shen.call(Shen.fns["klvm.s1.walk-do"], [Arg4898_0[2], Arg4898_2, Arg4898_3]), Arg4898_1, Arg4898_4]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg4898_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-if"], [Arg4898_0[2][1], Arg4898_0[2][2][1], Arg4898_0[2][2][2][1], Arg4898_2, Arg4898_3, Arg4898_4]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.reg"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && (Shen.empty$question$(Arg4898_0[2][2]) && Shen.unwind_tail(Shen.$eq$(true, Arg4898_2)))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.return"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg"], [Shen.type_cons, Shen.call(Shen.fns["klvm.s1.func-reg"], [Arg4898_0[2][1], Arg4898_3]), []]], []]], Arg4898_4]
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.reg"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && (Shen.empty$question$(Arg4898_0[2][2]) && Shen.unwind_tail(Shen.$eq$(false, Arg4898_2)))))))
  ? Arg4898_4
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.arg"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && (Shen.empty$question$(Arg4898_0[2][2]) && Shen.unwind_tail(Shen.$eq$(true, Arg4898_2)))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.return"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg"], [Shen.type_cons, Shen.call(Shen.fns["klvm.s1.func-arg"], [Arg4898_0[2][1], Arg4898_3]), []]], []]], Arg4898_4]
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.arg"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && (Shen.empty$question$(Arg4898_0[2][2]) && Shen.unwind_tail(Shen.$eq$(false, Arg4898_2)))))))
  ? Arg4898_4
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.closure"], Arg4898_0[1])) && Shen.unwind_tail(Shen.$eq$(false, Arg4898_2)))))
  ? Arg4898_4
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.freeze"], Arg4898_0[1])) && Shen.unwind_tail(Shen.$eq$(false, Arg4898_2)))))
  ? Arg4898_4
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.reg->"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg4898_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(false, Arg4898_2))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.in-do"], [Shen.call(Shen.fns["klvm.s1.walk-x2"], [Arg4898_0[2][2][1], Shen.call(Shen.fns["klvm.s1.func-reg"], [Arg4898_0[2][1], Arg4898_3]), Arg4898_3]), Arg4898_1, Arg4898_4]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.closure"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg4898_0[2][2][2][2][2]) && Shen.unwind_tail(Shen.$eq$(true, Arg4898_2))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.in-do"], [Shen.call(Shen.fns["klvm.s1.walk-closure"], [[], Arg4898_0[2][1], Arg4898_0[2][2][1], Shen.call(Shen.fns["klvm.s1.mk-args"], [Arg4898_0[2][2][2][1], Arg4898_3]), Arg4898_0[2][2][2][2][1], Arg4898_3]), Arg4898_1, Arg4898_4]);})
  : (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.freeze"], Arg4898_0[1])) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg4898_0[2][2][2][2]) && Shen.unwind_tail(Shen.$eq$(true, Arg4898_2)))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.in-do"], [Shen.call(Shen.fns["klvm.s1.walk-closure"], [[], [], Arg4898_0[2][1], Shen.call(Shen.fns["klvm.s1.mk-args"], [Arg4898_0[2][2][1], Arg4898_3]), Arg4898_0[2][2][2][1], Arg4898_3]), Arg4898_1, Arg4898_4]);})
  : ((Shen.is_type(Arg4898_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.in-do"], [Shen.call(Shen.fns["klvm.s1.walk-apply"], [Shen.call(Shen.fns["klvm.s1.mk-args"], [Arg4898_0, Arg4898_3]), [], Arg4898_2, Arg4898_3]), Arg4898_1, Arg4898_4]);})
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg4898_2)))
  ? Arg4898_4
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg4898_2)))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.return"], [Shen.type_cons, Arg4898_0, []]], Arg4898_4]
  : (function() {
  return Shen.simple_error(("klvm.s1.walk-x1: Unexpected L1 REGKL expression " + Shen.call(Shen.fns["shen.app"], [Arg4898_0, "", [Shen.type_symbol, "shen.s"]])));})))))))))))))))}, 5, [], "klvm.s1.walk-x1"];

Shen.fns["klvm.s1.func-code"] = [Shen.type_func, function shen_user_lambda4953(Arg4898) {
  if (Arg4898.length < 1) return [Shen.type_func, shen_user_lambda4953, 1, Arg4898];
  var Arg4898_0 = Arg4898[0];
  var R0, R1, R2, R3;
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.func"], Arg4898_0)))
  ? [Shen.type_symbol, "klvm.s1.func"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.toplevel"], Arg4898_0)))
  ? [Shen.type_symbol, "klvm.s1.toplevel"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.closure"], Arg4898_0)))
  ? [Shen.type_symbol, "klvm.s1.closure"]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.func-code"]]);}))))}, 1, [], "klvm.s1.func-code"];

Shen.fns["klvm.s1.walk-func"] = [Shen.type_func, function shen_user_lambda4954(Arg4898) {
  if (Arg4898.length < 7) return [Shen.type_func, shen_user_lambda4954, 7, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2], Arg4898_3 = Arg4898[3], Arg4898_4 = Arg4898[4], Arg4898_5 = Arg4898[5], Arg4898_6 = Arg4898[6];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["length"], [Arg4898_2])),
  (R1 = (Arg4898_3 + R0)),
  (R0 = Shen.call(Shen.fns["klvm.s1.mk-context"], [Arg4898_1, Arg4898_3, R0, R1, 0, Arg4898_6, Arg4898_5])),
  (R2 = Shen.call(Shen.fns["klvm.s1.walk-x1"], [Arg4898_4, false, true, R0, []])),
  (R3 = Shen.call(Shen.fns["klvm.s1.context-frame-size-extra"], [R0])),
  (R3 = [Shen.type_cons, Shen.call(Shen.fns["klvm.s1.func-code"], [Arg4898_0]), [Shen.type_cons, Arg4898_1, [Shen.type_cons, Arg4898_2, [Shen.type_cons, R1, [Shen.type_cons, R3, Shen.call(Shen.fns["reverse"], [R2])]]]]]),
  [Shen.type_cons, R3, Shen.call(Shen.fns["klvm.s1.context-toplevel"], [R0])])}, 7, [], "klvm.s1.walk-func"];

Shen.fns["klvm.s1.walk-1"] = [Shen.type_func, function shen_user_lambda4955(Arg4898) {
  if (Arg4898.length < 3) return [Shen.type_func, shen_user_lambda4955, 3, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg4898_0, Shen.type_cons) && (Shen.is_type(Arg4898_0[2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg4898_0[2][2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg4898_0[2][2][2][2][2]) && Shen.call(Shen.fns["element?"], [Arg4898_0[1], [Shen.type_cons, [Shen.type_symbol, "regkl.func"], [Shen.type_cons, [Shen.type_symbol, "regkl.toplevel"], []]]]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-func"], [Arg4898_0[1], Arg4898_0[2][1], Arg4898_0[2][2][1], Arg4898_0[2][2][2][1], Arg4898_0[2][2][2][2][1], Arg4898_1, Arg4898_2]);})
  : ((Shen.is_type(Arg4898_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("Unexpected toplevel expression " + Shen.call(Shen.fns["shen.app"], [Arg4898_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (((!(Shen.globals["klvm.omit-toplevel-constants?"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-func"], [[Shen.type_symbol, "regkl.toplevel"], Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "klvm.s1.toplevel"]]), [], 0, Arg4898_0, Arg4898_1, Arg4898_2]);})
  : Arg4898_2)))}, 3, [], "klvm.s1.walk-1"];

Shen.fns["klvm.s1.walk-toplevel'"] = [Shen.type_func, function shen_user_lambda4956(Arg4898) {
  if (Arg4898.length < 3) return [Shen.type_func, shen_user_lambda4956, 3, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1], Arg4898_2 = Arg4898[2];
  var R0, R1, R2, R3;
  return ((Shen.empty$question$(Arg4898_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg4898_2]);})
  : ((Shen.is_type(Arg4898_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-toplevel'"], [Arg4898_0[2], Arg4898_1, Shen.call(Shen.fns["klvm.s1.walk-1"], [Arg4898_0[1], Arg4898_1, Arg4898_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s1.walk-toplevel'"]]);})))}, 3, [], "klvm.s1.walk-toplevel'"];

Shen.fns["klvm.s1.ensure-native"] = [Shen.type_func, function shen_user_lambda4957(Arg4898) {
  if (Arg4898.length < 1) return [Shen.type_func, shen_user_lambda4957, 1, Arg4898];
  var Arg4898_0 = Arg4898[0];
  var R0, R1, R2, R3;
  return ((Shen.empty$question$(Arg4898_0))
  ? [Shen.type_func, function shen_user_lambda4959(Arg4958) {
  if (Arg4958.length < 1) return [Shen.type_func, shen_user_lambda4959, 1, Arg4958];
  var Arg4958_0 = Arg4958[0];
  return Shen.fail_obj}, 1, [], undefined]
  : ((Shen.unwind_tail(Shen.$eq$(Arg4898_0, [Shen.type_symbol, "_"])))
  ? [Shen.type_func, function shen_user_lambda4961(Arg4960) {
  if (Arg4960.length < 1) return [Shen.type_func, shen_user_lambda4961, 1, Arg4960];
  var Arg4960_0 = Arg4960[0];
  return Shen.fail_obj}, 1, [], undefined]
  : Arg4898_0))}, 1, [], "klvm.s1.ensure-native"];

Shen.fns["klvm.s1.walk"] = [Shen.type_func, function shen_user_lambda4962(Arg4898) {
  if (Arg4898.length < 2) return [Shen.type_func, shen_user_lambda4962, 2, Arg4898];
  var Arg4898_0 = Arg4898[0], Arg4898_1 = Arg4898[1];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["regkl.walk"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda4964(Arg4963) {
  if (Arg4963.length < 1) return [Shen.type_func, shen_user_lambda4964, 1, Arg4963];
  var Arg4963_0 = Arg4963[0];
  return (function() {
  return Shen.call_tail(Shen.fns["denest.walk"], [Arg4963_0]);})}, 1, [], undefined], Arg4898_1]), false])),
  (function() {
  return Shen.call_tail(Shen.fns["klvm.s1.walk-toplevel'"], [R0, Shen.call(Shen.fns["klvm.s1.ensure-native"], [Arg4898_0]), []]);}))}, 2, [], "klvm.s1.walk"];

Shen.call_toplevel(function js$dot$shen_js_toplevel4965(Arg4898) {
  if (Arg4898.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel4965, 0, Arg4898];
  var R0, R1, R2, R3;
  return (Shen.call(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "klvm.s1.type#context"], Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda4967(Arg4966) {
  if (Arg4966.length < 1) return [Shen.type_func, shen_user_lambda4967, 1, Arg4966];
  var Arg4966_0 = Arg4966[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<datatype-rules>"], [Arg4966_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_symbol, "Native"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Frame-size-extra"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Frame-size"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Arity"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Func"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Func"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Arity"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Frame-size"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Frame-size-extra"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Native"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], []]]], []]]], []]]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 7, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 7, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 6, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 6, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 5, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 5, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_func, function shen_user_lambda4969(Arg4968) {
  if (Arg4968.length < 1) return [Shen.type_func, shen_user_lambda4969, 1, Arg4968];
  var Arg4968_0 = Arg4968[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.datatype-error"], [Arg4968_0]);})}, 1, [], undefined]])]),
  (Shen.globals["klvm.omit-toplevel-constants?"] = true))});


Shen.fns["klvm.s2.mk-context"] = [Shen.type_func, function shen_user_lambda5099(Arg5098) {
  if (Arg5098.length < 8) return [Shen.type_func, shen_user_lambda5099, 8, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1], Arg5098_2 = Arg5098[2], Arg5098_3 = Arg5098[3], Arg5098_4 = Arg5098[4], Arg5098_5 = Arg5098[5], Arg5098_6 = Arg5098[6], Arg5098_7 = Arg5098[7];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg5098_0, Shen.call(Shen.fns["@v"], [Arg5098_1, Shen.call(Shen.fns["@v"], [Arg5098_2, Shen.call(Shen.fns["@v"], [Arg5098_3, Shen.call(Shen.fns["@v"], [Arg5098_4, Shen.call(Shen.fns["@v"], [Arg5098_5, Shen.call(Shen.fns["@v"], [Arg5098_6, Shen.call(Shen.fns["@v"], [Arg5098_7, Shen.vector(0)])])])])])])])]);})}, 8, [], "klvm.s2.mk-context"];

Shen.fns["klvm.s2.context-toplevel->"] = [Shen.type_func, function shen_user_lambda5100(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5100, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5098_0, 8, Arg5098_1]);})}, 2, [], "klvm.s2.context-toplevel->"];

Shen.fns["klvm.s2.context-func->"] = [Shen.type_func, function shen_user_lambda5101(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5101, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5098_0, 7, Arg5098_1]);})}, 2, [], "klvm.s2.context-func->"];

Shen.fns["klvm.s2.context-label->"] = [Shen.type_func, function shen_user_lambda5102(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5102, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5098_0, 6, Arg5098_1]);})}, 2, [], "klvm.s2.context-label->"];

Shen.fns["klvm.s2.context-arity->"] = [Shen.type_func, function shen_user_lambda5103(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5103, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5098_0, 5, Arg5098_1]);})}, 2, [], "klvm.s2.context-arity->"];

Shen.fns["klvm.s2.context-frame-size-extra->"] = [Shen.type_func, function shen_user_lambda5104(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5104, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5098_0, 4, Arg5098_1]);})}, 2, [], "klvm.s2.context-frame-size-extra->"];

Shen.fns["klvm.s2.context-frame-size->"] = [Shen.type_func, function shen_user_lambda5105(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5105, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5098_0, 3, Arg5098_1]);})}, 2, [], "klvm.s2.context-frame-size->"];

Shen.fns["klvm.s2.context-func-type->"] = [Shen.type_func, function shen_user_lambda5106(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5106, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5098_0, 2, Arg5098_1]);})}, 2, [], "klvm.s2.context-func-type->"];

Shen.fns["klvm.s2.context-func-name->"] = [Shen.type_func, function shen_user_lambda5107(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5107, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5098_0, 1, Arg5098_1]);})}, 2, [], "klvm.s2.context-func-name->"];

Shen.fns["klvm.s2.context-toplevel"] = [Shen.type_func, function shen_user_lambda5108(Arg5098) {
  if (Arg5098.length < 1) return [Shen.type_func, shen_user_lambda5108, 1, Arg5098];
  var Arg5098_0 = Arg5098[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5098_0, 8]);})}, 1, [], "klvm.s2.context-toplevel"];

Shen.fns["klvm.s2.context-func"] = [Shen.type_func, function shen_user_lambda5109(Arg5098) {
  if (Arg5098.length < 1) return [Shen.type_func, shen_user_lambda5109, 1, Arg5098];
  var Arg5098_0 = Arg5098[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5098_0, 7]);})}, 1, [], "klvm.s2.context-func"];

Shen.fns["klvm.s2.context-label"] = [Shen.type_func, function shen_user_lambda5110(Arg5098) {
  if (Arg5098.length < 1) return [Shen.type_func, shen_user_lambda5110, 1, Arg5098];
  var Arg5098_0 = Arg5098[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5098_0, 6]);})}, 1, [], "klvm.s2.context-label"];

Shen.fns["klvm.s2.context-arity"] = [Shen.type_func, function shen_user_lambda5111(Arg5098) {
  if (Arg5098.length < 1) return [Shen.type_func, shen_user_lambda5111, 1, Arg5098];
  var Arg5098_0 = Arg5098[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5098_0, 5]);})}, 1, [], "klvm.s2.context-arity"];

Shen.fns["klvm.s2.context-frame-size-extra"] = [Shen.type_func, function shen_user_lambda5112(Arg5098) {
  if (Arg5098.length < 1) return [Shen.type_func, shen_user_lambda5112, 1, Arg5098];
  var Arg5098_0 = Arg5098[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5098_0, 4]);})}, 1, [], "klvm.s2.context-frame-size-extra"];

Shen.fns["klvm.s2.context-frame-size"] = [Shen.type_func, function shen_user_lambda5113(Arg5098) {
  if (Arg5098.length < 1) return [Shen.type_func, shen_user_lambda5113, 1, Arg5098];
  var Arg5098_0 = Arg5098[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5098_0, 3]);})}, 1, [], "klvm.s2.context-frame-size"];

Shen.fns["klvm.s2.context-func-type"] = [Shen.type_func, function shen_user_lambda5114(Arg5098) {
  if (Arg5098.length < 1) return [Shen.type_func, shen_user_lambda5114, 1, Arg5098];
  var Arg5098_0 = Arg5098[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5098_0, 2]);})}, 1, [], "klvm.s2.context-func-type"];

Shen.fns["klvm.s2.context-func-name"] = [Shen.type_func, function shen_user_lambda5115(Arg5098) {
  if (Arg5098.length < 1) return [Shen.type_func, shen_user_lambda5115, 1, Arg5098];
  var Arg5098_0 = Arg5098[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5098_0, 1]);})}, 1, [], "klvm.s2.context-func-name"];

Shen.fns["klvm.s2.next-reg"] = [Shen.type_func, function shen_user_lambda5116(Arg5098) {
  if (Arg5098.length < 1) return [Shen.type_func, shen_user_lambda5116, 1, Arg5098];
  var Arg5098_0 = Arg5098[0];
  return (Shen.call(Shen.fns["klvm.s2.context-frame-size"], [Arg5098_0]) - 1)}, 1, [], "klvm.s2.next-reg"];

Shen.fns["klvm.s2.nargs-reg"] = [Shen.type_func, function shen_user_lambda5117(Arg5098) {
  if (Arg5098.length < 1) return [Shen.type_func, shen_user_lambda5117, 1, Arg5098];
  var Arg5098_0 = Arg5098[0];
  return (Shen.call(Shen.fns["klvm.s2.context-frame-size"], [Arg5098_0]) - 2)}, 1, [], "klvm.s2.nargs-reg"];

Shen.fns["klvm.s2.prepend"] = [Shen.type_func, function shen_user_lambda5118(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5118, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["reverse"], [Arg5098_0]), Arg5098_1]);})}, 2, [], "klvm.s2.prepend"];

Shen.fns["klvm.s2.next-label"] = [Shen.type_func, function shen_user_lambda5119(Arg5098) {
  if (Arg5098.length < 1) return [Shen.type_func, shen_user_lambda5119, 1, Arg5098];
  var Arg5098_0 = Arg5098[0];
  return (Shen.call(Shen.fns["klvm.s2.context-label->"], [Arg5098_0, (Shen.call(Shen.fns["klvm.s2.context-label"], [Arg5098_0]) + 1)]),
  (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.context-label"], [Arg5098_0]);}))}, 1, [], "klvm.s2.next-label"];

Shen.fns["klvm.s2.close-label"] = [Shen.type_func, function shen_user_lambda5120(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5120, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return ((Shen.empty$question$(Arg5098_1))
  ? []
  : (Shen.call(Shen.fns["klvm.s2.context-func->"], [Arg5098_0, [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg5098_1]), Shen.call(Shen.fns["klvm.s2.context-func"], [Arg5098_0])]]),
  []))}, 2, [], "klvm.s2.close-label"];

Shen.fns["klvm.s2.label"] = [Shen.type_func, function shen_user_lambda5121(Arg5098) {
  if (Arg5098.length < 3) return [Shen.type_func, shen_user_lambda5121, 3, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1], Arg5098_2 = Arg5098[2];
  return (Shen.call(Shen.fns["klvm.s2.close-label"], [Arg5098_1, Arg5098_2]),
  [Shen.type_cons, Arg5098_0, []])}, 3, [], "klvm.s2.label"];

Shen.fns["klvm.entry-template"] = [Shen.type_func, function shen_user_lambda5122(Arg5098) {
  if (Arg5098.length < 3) return [Shen.type_func, shen_user_lambda5122, 3, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1], Arg5098_2 = Arg5098[2];
  return [Shen.type_cons, [Shen.type_symbol, "klvm.nargs-cond"], [Shen.type_cons, Arg5098_1, [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.ret->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.func-obj"], [Shen.type_cons, Arg5098_0, [Shen.type_cons, Arg5098_1, [Shen.type_cons, Arg5098_2, []]]]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.wipe"], [Shen.type_cons, 0, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.goto-next"], []], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.nargs-"], [Shen.type_cons, Arg5098_1, []]], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.sp+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.nargs"], []], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.sp-"], [Shen.type_cons, Arg5098_1, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.nargs-"], [Shen.type_cons, Arg5098_1, []]], []]]], []]]]]]}, 3, [], "klvm.entry-template"];

Shen.fns["klvm.return-template"] = [Shen.type_func, function shen_user_lambda5123(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5123, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return [Shen.type_cons, [Shen.type_symbol, "klvm.if-nargs>0"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.closure->"], [Shen.type_cons, Arg5098_0, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.next->"], [Shen.type_cons, Arg5098_1, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.sp-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.nargs"], []], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.put-closure-args"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.wipe"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.nargs"], []], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.call"], []], []]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.ret->"], [Shen.type_cons, Arg5098_0, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.next->"], [Shen.type_cons, Arg5098_1, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.wipe"], [Shen.type_cons, 0, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.goto-next"], []], []]]]], []]]]}, 2, [], "klvm.return-template"];

Shen.fns["klvm.s2.call-template"] = [Shen.type_func, function shen_user_lambda5124(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5124, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.sp+"], [Shen.type_cons, Arg5098_1, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.nargs->"], [Shen.type_cons, Arg5098_0, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.put-closure-args"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.call"], []], []]]]]}, 2, [], "klvm.s2.call-template"];

Shen.fns["klvm.s2.tailcall-template"] = [Shen.type_func, function shen_user_lambda5125(Arg5098) {
  if (Arg5098.length < 3) return [Shen.type_func, shen_user_lambda5125, 3, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1], Arg5098_2 = Arg5098[2];
  return [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.sp-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.nargs"], []], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.nargs+"], [Shen.type_cons, Arg5098_0, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.put-closure-args"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.wipe"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.nargs"], []], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.call"], []], []]]]]]}, 3, [], "klvm.s2.tailcall-template"];

Shen.fns["klvm.s2.entry-func-name"] = [Shen.type_func, function shen_user_lambda5126(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5126, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.s1.func"], Arg5098_1)))
  ? Arg5098_0
  : [])}, 2, [], "klvm.s2.entry-func-name"];

Shen.fns["klvm.s2.entry-op"] = [Shen.type_func, function shen_user_lambda5127(Arg5098) {
  if (Arg5098.length < 3) return [Shen.type_func, shen_user_lambda5127, 3, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1], Arg5098_2 = Arg5098[2];
  return (((Shen.globals["klvm.s2.inline-func-entry"]))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.entry-template"], [Arg5098_0, Arg5098_1, Shen.call(Shen.fns["klvm.s2.entry-func-name"], [Arg5098_0, Arg5098_2])]);})
  : [Shen.type_cons, [Shen.type_symbol, "klvm.entry"], [Shen.type_cons, Arg5098_0, [Shen.type_cons, Arg5098_1, [Shen.type_cons, Shen.call(Shen.fns["klvm.s2.entry-func-name"], [Arg5098_0, Arg5098_2]), []]]]])}, 3, [], "klvm.s2.entry-op"];

Shen.fns["klvm.s2.return-op"] = [Shen.type_func, function shen_user_lambda5128(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5128, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return (((Shen.globals["klvm.s2.inline-func-return"]))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.return-template"], [Arg5098_0, Shen.call(Shen.fns["klvm.s2.next-reg"], [Arg5098_1])]);})
  : [Shen.type_cons, [Shen.type_symbol, "klvm.return"], [Shen.type_cons, Arg5098_0, [Shen.type_cons, Shen.call(Shen.fns["klvm.s2.next-reg"], [Arg5098_1]), []]]])}, 2, [], "klvm.s2.return-op"];

Shen.fns["klvm.s2.call-ret"] = [Shen.type_func, function shen_user_lambda5129(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5129, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  return ((Shen.empty$question$(Arg5098_0))
  ? Arg5098_1
  : [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg->"], [Shen.type_cons, Arg5098_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.ret"], []], []]]], Arg5098_1])}, 2, [], "klvm.s2.call-ret"];

Shen.fns["klvm.s2.prepare-args"] = [Shen.type_func, function shen_user_lambda5130(Arg5098) {
  if (Arg5098.length < 4) return [Shen.type_func, shen_user_lambda5130, 4, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1], Arg5098_2 = Arg5098[2], Arg5098_3 = Arg5098[3];
  var R0;
  return ((Shen.empty$question$(Arg5098_0))
  ? Arg5098_3
  : (((Shen.is_type(Arg5098_0, Shen.type_cons) && Shen.is_type(Arg5098_0[1], Shen.type_cons)))
  ? ((R0 = [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg->"], [Shen.type_cons, (Arg5098_1 + Arg5098_0[1][1]), [Shen.type_cons, Arg5098_0[1][2], []]]], Arg5098_3]),
  (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.prepare-args"], [Arg5098_0[2], Arg5098_1, Arg5098_2, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s2.prepare-args"]]);})))}, 4, [], "klvm.s2.prepare-args"];

Shen.fns["klvm.s2.walk-call"] = [Shen.type_func, function shen_user_lambda5131(Arg5098) {
  if (Arg5098.length < 6) return [Shen.type_func, shen_user_lambda5131, 6, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1], Arg5098_2 = Arg5098[2], Arg5098_3 = Arg5098[3], Arg5098_4 = Arg5098[4], Arg5098_5 = Arg5098[5];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["klvm.s2.context-frame-size"], [Arg5098_4])),
  (R1 = Shen.call(Shen.fns["klvm.s2.next-label"], [Arg5098_4])),
  (R2 = [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.next->"], [Shen.type_cons, R1, []]], Arg5098_5]),
  (R2 = [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.closure->"], [Shen.type_cons, Arg5098_0, []]], R2]),
  (R2 = Shen.call(Shen.fns["klvm.s2.prepare-args"], [Arg5098_3, R0, Arg5098_4, R2])),
  (R2 = Shen.call(Shen.fns["klvm.s2.prepend"], [Shen.call(Shen.fns["klvm.s2.call-template"], [Arg5098_1, R0]), R2])),
  (R2 = Shen.call(Shen.fns["klvm.s2.label"], [R1, Arg5098_4, R2])),
  (R2 = [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.sp-"], [Shen.type_cons, R0, []]], R2]),
  (R2 = Shen.call(Shen.fns["klvm.s2.call-ret"], [Arg5098_2, R2])),
  R2)}, 6, [], "klvm.s2.walk-call"];

Shen.fns["klvm.s2.walk-tailcall"] = [Shen.type_func, function shen_user_lambda5132(Arg5098) {
  if (Arg5098.length < 5) return [Shen.type_func, shen_user_lambda5132, 5, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1], Arg5098_2 = Arg5098[2], Arg5098_3 = Arg5098[3], Arg5098_4 = Arg5098[4];
  var R0, R1, R2;
  return ((R0 = [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.next->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg"], [Shen.type_cons, Shen.call(Shen.fns["klvm.s2.next-reg"], [Arg5098_3]), []]], []]], Arg5098_4]),
  (R0 = [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.closure->"], [Shen.type_cons, Arg5098_0, []]], R0]),
  (R0 = [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.nargs->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg"], [Shen.type_cons, Shen.call(Shen.fns["klvm.s2.nargs-reg"], [Arg5098_3]), []]], []]], R0]),
  (R0 = Shen.call(Shen.fns["klvm.s2.prepare-args"], [Arg5098_2, 0, Arg5098_3, R0])),
  (R1 = (Shen.call(Shen.fns["klvm.s2.context-frame-size"], [Arg5098_3]) + Shen.call(Shen.fns["klvm.s2.context-frame-size-extra"], [Arg5098_3]))),
  (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.prepend"], [Shen.call(Shen.fns["klvm.s2.tailcall-template"], [Arg5098_1, R1, Arg5098_3]), R0]);}))}, 5, [], "klvm.s2.walk-tailcall"];

Shen.fns["klvm.s2.walk-if-expr"] = [Shen.type_func, function shen_user_lambda5133(Arg5098) {
  if (Arg5098.length < 6) return [Shen.type_func, shen_user_lambda5133, 6, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1], Arg5098_2 = Arg5098[2], Arg5098_3 = Arg5098[3], Arg5098_4 = Arg5098[4], Arg5098_5 = Arg5098[5];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5098_3)))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.walk-x1"], [Arg5098_0, Arg5098_4, Shen.call(Shen.fns["klvm.s2.label"], [Arg5098_1, Arg5098_4, Arg5098_5])]);})
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5098_3)))
  ? ((R0 = Shen.call(Shen.fns["klvm.s2.label"], [Arg5098_1, Arg5098_4, Arg5098_5])),
  (R0 = Shen.call(Shen.fns["klvm.s2.walk-x1"], [Arg5098_0, Arg5098_4, R0])),
  [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.goto"], [Shen.type_cons, Arg5098_2, []]], R0])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s2.walk-if-expr"]]);})))}, 6, [], "klvm.s2.walk-if-expr"];

Shen.fns["klvm.s2.walk-if"] = [Shen.type_func, function shen_user_lambda5134(Arg5098) {
  if (Arg5098.length < 6) return [Shen.type_func, shen_user_lambda5134, 6, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1], Arg5098_2 = Arg5098[2], Arg5098_3 = Arg5098[3], Arg5098_4 = Arg5098[4], Arg5098_5 = Arg5098[5];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg5098_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.reg"], Arg5098_0[1])) && (Shen.is_type(Arg5098_0[2], Shen.type_cons) && Shen.empty$question$(Arg5098_0[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["klvm.s2.next-label"], [Arg5098_4])),
  (R1 = Shen.call(Shen.fns["klvm.s2.next-label"], [Arg5098_4])),
  (R2 = Shen.call(Shen.fns["klvm.s2.next-label"], [Arg5098_4])),
  (R3 = [Shen.type_cons, [Shen.type_symbol, "klvm.if"], [Shen.type_cons, Arg5098_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.goto"], [Shen.type_cons, R1, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.goto"], [Shen.type_cons, R2, []]], []]]]]),
  (R3 = [Shen.type_cons, R3, Arg5098_5]),
  (R3 = Shen.call(Shen.fns["klvm.s2.walk-if-expr"], [Arg5098_1, R1, R0, Arg5098_3, Arg5098_4, R3])),
  (R3 = Shen.call(Shen.fns["klvm.s2.walk-if-expr"], [Arg5098_2, R2, R0, Arg5098_3, Arg5098_4, R3])),
  ((Arg5098_3)
  ? R3
  : (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.label"], [R0, Arg5098_4, R3]);})))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s2.walk-if"]]);}))}, 6, [], "klvm.s2.walk-if"];

Shen.fns["klvm.s2.walk-do"] = [Shen.type_func, function shen_user_lambda5135(Arg5098) {
  if (Arg5098.length < 3) return [Shen.type_func, shen_user_lambda5135, 3, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1], Arg5098_2 = Arg5098[2];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg5098_0, Shen.type_cons) && Shen.empty$question$(Arg5098_0[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.walk-x1"], [Arg5098_0[1], Arg5098_1, Arg5098_2]);})
  : ((Shen.is_type(Arg5098_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.walk-do"], [Arg5098_0[2], Arg5098_1, Shen.call(Shen.fns["klvm.s2.walk-x1"], [Arg5098_0[1], Arg5098_1, Arg5098_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s2.walk-do"]]);})))}, 3, [], "klvm.s2.walk-do"];

Shen.fns["klvm.s2.walk-x1"] = [Shen.type_func, function shen_user_lambda5136(Arg5098) {
  if (Arg5098.length < 3) return [Shen.type_func, shen_user_lambda5136, 3, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1], Arg5098_2 = Arg5098[2];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg5098_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg5098_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.walk-do"], [Arg5098_0[2], Arg5098_1, Arg5098_2]);})
  : (((Shen.is_type(Arg5098_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.tailif"], Arg5098_0[1])) && (Shen.is_type(Arg5098_0[2], Shen.type_cons) && (Shen.is_type(Arg5098_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5098_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5098_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.walk-if"], [Arg5098_0[2][1], Arg5098_0[2][2][1], Arg5098_0[2][2][2][1], true, Arg5098_1, Arg5098_2]);})
  : (((Shen.is_type(Arg5098_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.if"], Arg5098_0[1])) && (Shen.is_type(Arg5098_0[2], Shen.type_cons) && (Shen.is_type(Arg5098_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5098_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5098_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.walk-if"], [Arg5098_0[2][1], Arg5098_0[2][2][1], Arg5098_0[2][2][2][1], false, Arg5098_1, Arg5098_2]);})
  : (((Shen.is_type(Arg5098_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.call"], Arg5098_0[1])) && (Shen.is_type(Arg5098_0[2], Shen.type_cons) && (Shen.is_type(Arg5098_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5098_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5098_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5098_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.walk-call"], [Arg5098_0[2][1], Arg5098_0[2][2][1], Arg5098_0[2][2][2][1], Arg5098_0[2][2][2][2][1], Arg5098_1, Arg5098_2]);})
  : (((Shen.is_type(Arg5098_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.tailcall"], Arg5098_0[1])) && (Shen.is_type(Arg5098_0[2], Shen.type_cons) && (Shen.is_type(Arg5098_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5098_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5098_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.walk-tailcall"], [Arg5098_0[2][1], Arg5098_0[2][2][1], Arg5098_0[2][2][2][1], Arg5098_1, Arg5098_2]);})
  : (((Shen.is_type(Arg5098_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.reg->"], Arg5098_0[1])) && (Shen.is_type(Arg5098_0[2], Shen.type_cons) && (Shen.is_type(Arg5098_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5098_0[2][2][2]))))))
  ? [Shen.type_cons, Arg5098_0, Arg5098_2]
  : (((Shen.is_type(Arg5098_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.return"], Arg5098_0[1])) && (Shen.is_type(Arg5098_0[2], Shen.type_cons) && Shen.empty$question$(Arg5098_0[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["klvm.s2.nargs-reg"], [Arg5098_1])),
  (R0 = [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.nargs->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg"], [Shen.type_cons, R0, []]], []]], Arg5098_2]),
  [Shen.type_cons, Shen.call(Shen.fns["klvm.s2.return-op"], [Arg5098_0[2][1], Arg5098_1]), R0])
  : (((Shen.is_type(Arg5098_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.push-error-handler"], Arg5098_0[1])) && (Shen.is_type(Arg5098_0[2], Shen.type_cons) && Shen.empty$question$(Arg5098_0[2][2])))))
  ? [Shen.type_cons, Arg5098_0, Arg5098_2]
  : (((Shen.is_type(Arg5098_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.pop-error-handler"], Arg5098_0[1])) && Shen.empty$question$(Arg5098_0[2]))))
  ? [Shen.type_cons, Arg5098_0, Arg5098_2]
  : (((Shen.is_type(Arg5098_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.s2.klvm.native"], Arg5098_0[1])) && (Shen.is_type(Arg5098_0[2], Shen.type_cons) && Shen.empty$question$(Arg5098_0[2][2])))))
  ? [Shen.type_cons, Arg5098_0, Arg5098_2]
  : ((Shen.empty$question$(Arg5098_0))
  ? Arg5098_2
  : (function() {
  return Shen.simple_error(("klvm.s2.walk-x1: Unexpected L1 expression: " + Shen.call(Shen.fns["shen.app"], [Arg5098_0, "\x0a", [Shen.type_symbol, "shen.s"]])));}))))))))))))}, 3, [], "klvm.s2.walk-x1"];

Shen.fns["klvm.s2.func-hdr"] = [Shen.type_func, function shen_user_lambda5137(Arg5098) {
  if (Arg5098.length < 1) return [Shen.type_func, shen_user_lambda5137, 1, Arg5098];
  var Arg5098_0 = Arg5098[0];
  var R0, R1, R2, R3;
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.s1.func"], Arg5098_0)))
  ? [Shen.type_symbol, "klvm.func"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.s1.toplevel"], Arg5098_0)))
  ? [Shen.type_symbol, "klvm.toplevel"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "klvm.s1.closure"], Arg5098_0)))
  ? [Shen.type_symbol, "klvm.closure"]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s2.func-hdr"]]);}))))}, 1, [], "klvm.s2.func-hdr"];

Shen.fns["klvm.s2.func-entry"] = [Shen.type_func, function shen_user_lambda5138(Arg5098) {
  if (Arg5098.length < 1) return [Shen.type_func, shen_user_lambda5138, 1, Arg5098];
  var Arg5098_0 = Arg5098[0];
  var R0, R1, R2, R3;
  return (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.prepend"], [[Shen.type_cons, Shen.call(Shen.fns["klvm.s2.entry-op"], [Shen.call(Shen.fns["klvm.s2.context-func-name"], [Arg5098_0]), Shen.call(Shen.fns["klvm.s2.context-arity"], [Arg5098_0]), Shen.call(Shen.fns["klvm.s2.context-func-type"], [Arg5098_0])]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.nregs->"], [Shen.type_cons, (Shen.call(Shen.fns["klvm.s2.context-frame-size"], [Arg5098_0]) + Shen.call(Shen.fns["klvm.s2.context-frame-size-extra"], [Arg5098_0])), []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg->"], [Shen.type_cons, Shen.call(Shen.fns["klvm.s2.nargs-reg"], [Arg5098_0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.nargs"], []], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.reg->"], [Shen.type_cons, Shen.call(Shen.fns["klvm.s2.next-reg"], [Arg5098_0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.next"], []], []]]], []]]]], Shen.call(Shen.fns["klvm.s2.label"], [Shen.call(Shen.fns["klvm.s2.next-label"], [Arg5098_0]), Arg5098_0, []])]);})}, 1, [], "klvm.s2.func-entry"];

Shen.fns["klvm.s2.walk-toplevel-expr"] = [Shen.type_func, function shen_user_lambda5139(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5139, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg5098_0, Shen.type_cons) && (Shen.is_type(Arg5098_0[2], Shen.type_cons) && (Shen.is_type(Arg5098_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5098_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5098_0[2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg5098_0[2][2][2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5098_0[2][2][2][2][2][2]) && Shen.call(Shen.fns["element?"], [Arg5098_0[1], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.func"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.closure"], [Shen.type_cons, [Shen.type_symbol, "klvm.s1.toplevel"], []]]]])))))))))
  ? ((R0 = Shen.call(Shen.fns["length"], [Arg5098_0[2][2][1]])),
  (R1 = (Arg5098_0[2][2][2][1] + 2)),
  (R0 = Shen.call(Shen.fns["klvm.s2.mk-context"], [Arg5098_0[2][1], Arg5098_0[1], R1, Arg5098_0[2][2][2][2][1], R0, -1, [], Arg5098_1])),
  (R2 = Shen.call(Shen.fns["klvm.s2.func-entry"], [R0])),
  (R2 = Shen.call(Shen.fns["klvm.s2.walk-x1"], [Arg5098_0[2][2][2][2][2][1], R0, R2])),
  Shen.call(Shen.fns["klvm.s2.close-label"], [R0, R2]),
  (R2 = Shen.call(Shen.fns["klvm.s2.context-toplevel"], [R0])),
  (R3 = Shen.call(Shen.fns["klvm.s2.func-hdr"], [Arg5098_0[1]])),
  (R0 = Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["klvm.s2.context-func"], [R0])])),
  [Shen.type_cons, [Shen.type_cons, R3, [Shen.type_cons, Arg5098_0[2][1], [Shen.type_cons, Arg5098_0[2][2][1], [Shen.type_cons, R1, [Shen.type_cons, R0, []]]]]], R2])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s2.walk-toplevel-expr"]]);}))}, 2, [], "klvm.s2.walk-toplevel-expr"];

Shen.fns["klvm.s2.walk-toplevel"] = [Shen.type_func, function shen_user_lambda5140(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5140, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  var R0, R1, R2, R3;
  return ((Shen.empty$question$(Arg5098_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg5098_1]);})
  : ((Shen.is_type(Arg5098_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.walk-toplevel"], [Arg5098_0[2], Shen.call(Shen.fns["klvm.s2.walk-toplevel-expr"], [Arg5098_0[1], Arg5098_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "klvm.s2.walk-toplevel"]]);})))}, 2, [], "klvm.s2.walk-toplevel"];

Shen.fns["klvm.s2.walk"] = [Shen.type_func, function shen_user_lambda5141(Arg5098) {
  if (Arg5098.length < 1) return [Shen.type_func, shen_user_lambda5141, 1, Arg5098];
  var Arg5098_0 = Arg5098[0];
  var R0, R1, R2, R3;
  return (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.walk-toplevel"], [Arg5098_0, []]);})}, 1, [], "klvm.s2.walk"];

Shen.fns["klvm.runtime"] = [Shen.type_func, function shen_user_lambda5142(Arg5098) {
  if (Arg5098.length < 0) return [Shen.type_func, shen_user_lambda5142, 0, Arg5098];
  var R0, R1, R2, R3;
  return ((R0 = [Shen.type_symbol, "X"]),
  (R1 = [Shen.type_symbol, "E"]),
  (R2 = [Shen.type_symbol, "R"]),
  [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, [Shen.type_symbol, "regkl.trap-error"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, R1, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.push-error-handler"], [Shen.type_cons, R1, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R2, [Shen.type_cons, [Shen.type_cons, R0, []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "klvm.pop-error-handler"], []], [Shen.type_cons, R2, []]]], []]]]], []]]], []]]]], []])}, 0, [], "klvm.runtime"];

Shen.fns["klvm.s2-from-kl"] = [Shen.type_func, function shen_user_lambda5143(Arg5098) {
  if (Arg5098.length < 2) return [Shen.type_func, shen_user_lambda5143, 2, Arg5098];
  var Arg5098_0 = Arg5098[0], Arg5098_1 = Arg5098[1];
  var R0, R1, R2, R3;
  return (function() {
  return Shen.call_tail(Shen.fns["klvm.s2.walk"], [Shen.call(Shen.fns["klvm.s1.walk"], [Arg5098_0, Arg5098_1])]);})}, 2, [], "klvm.s2-from-kl"];

Shen.call_toplevel(function js$dot$shen_js_toplevel5144(Arg5098) {
  if (Arg5098.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel5144, 0, Arg5098];
  var R0, R1, R2, R3;
  return (Shen.call(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "klvm.s2.type#context"], Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda5146(Arg5145) {
  if (Arg5145.length < 1) return [Shen.type_func, shen_user_lambda5146, 1, Arg5145];
  var Arg5145_0 = Arg5145[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<datatype-rules>"], [Arg5145_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Func"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Label"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Arity"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Frame-size-extra"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Frame-size"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Func-type"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Func-name"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Func-name"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Func-type"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Frame-size"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Frame-size-extra"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Arity"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Label"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Func"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], []]]], []]]], []]]], []]]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 8, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 8, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 7, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.s-expr"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 7, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 6, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 6, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 5, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 5, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "klvm.s2.context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_func, function shen_user_lambda5148(Arg5147) {
  if (Arg5147.length < 1) return [Shen.type_func, shen_user_lambda5148, 1, Arg5147];
  var Arg5147_0 = Arg5147[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.datatype-error"], [Arg5147_0]);})}, 1, [], undefined]])]),
  (Shen.globals["klvm.s2.inline-func-entry"] = false),
  (Shen.globals["klvm.s2.inline-func-return"] = false))});


Shen.fns["js.mk-context"] = [Shen.type_func, function shen_user_lambda5670(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5670, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  return (function() {
  return Shen.call_tail(Shen.fns["@v"], [Arg5669_0, Shen.call(Shen.fns["@v"], [Arg5669_1, Shen.call(Shen.fns["@v"], [Arg5669_2, Shen.call(Shen.fns["@v"], [Arg5669_3, Shen.vector(0)])])])]);})}, 4, [], "js.mk-context"];

Shen.fns["js.context-varname->"] = [Shen.type_func, function shen_user_lambda5671(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5671, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5669_0, 4, Arg5669_1]);})}, 2, [], "js.context-varname->"];

Shen.fns["js.context-argname->"] = [Shen.type_func, function shen_user_lambda5672(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5672, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5669_0, 3, Arg5669_1]);})}, 2, [], "js.context-argname->"];

Shen.fns["js.context-toplevel->"] = [Shen.type_func, function shen_user_lambda5673(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5673, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5669_0, 2, Arg5669_1]);})}, 2, [], "js.context-toplevel->"];

Shen.fns["js.context-nregs->"] = [Shen.type_func, function shen_user_lambda5674(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5674, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg5669_0, 1, Arg5669_1]);})}, 2, [], "js.context-nregs->"];

Shen.fns["js.context-varname"] = [Shen.type_func, function shen_user_lambda5675(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5675, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5669_0, 4]);})}, 1, [], "js.context-varname"];

Shen.fns["js.context-argname"] = [Shen.type_func, function shen_user_lambda5676(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5676, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5669_0, 3]);})}, 1, [], "js.context-argname"];

Shen.fns["js.context-toplevel"] = [Shen.type_func, function shen_user_lambda5677(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5677, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5669_0, 2]);})}, 1, [], "js.context-toplevel"];

Shen.fns["js.context-nregs"] = [Shen.type_func, function shen_user_lambda5678(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5678, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg5669_0, 1]);})}, 1, [], "js.context-nregs"];

Shen.fns["js.max"] = [Shen.type_func, function shen_user_lambda5679(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5679, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  return (((Arg5669_0 > Arg5669_1))
  ? Arg5669_0
  : Arg5669_1)}, 2, [], "js.max"];

Shen.fns["js.str-js-from-shen*"] = [Shen.type_func, function shen_user_lambda5680(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5680, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg5669_0)))
  ? Arg5669_1
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("-", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "_")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("_", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$_")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("$", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("'", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$quote$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("`", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$bquote$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("/", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$slash$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("*", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$asterisk$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("+", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$plus$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("%", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$percent$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("=", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$eq$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("?", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$question$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("!", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$excl$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$(">", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$gt$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("<", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$lt$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$(".", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$dot$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("|", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$bar$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("#", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$sharp$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("~", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$tilde$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$(":", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$colon$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$(";", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$sc$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("@", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$at$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("&", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$amp$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("{", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$cbraceopen$")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$("}", Arg5669_0[0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "$cbraceclose$")]);})
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + Arg5669_0[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.str-js-from-shen*"]]);})))))))))))))))))))))))))))}, 2, [], "js.str-js-from-shen*"];

Shen.fns["js.str-js-from-shen"] = [Shen.type_func, function shen_user_lambda5681(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5681, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-js-from-shen*"], [Arg5669_0, ""]);})}, 1, [], "js.str-js-from-shen"];

Shen.fns["js.sym-js-from-shen"] = [Shen.type_func, function shen_user_lambda5682(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5682, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  return (function() {
  return Shen.intern(Shen.call(Shen.fns["js.str-js-from-shen"], [Shen.str(Arg5669_0)]));})}, 1, [], "js.sym-js-from-shen"];

Shen.fns["js.backslash"] = [Shen.type_func, function shen_user_lambda5683(Arg5669) {
  if (Arg5669.length < 0) return [Shen.type_func, shen_user_lambda5683, 0, Arg5669];
  return (function() {
  return Shen.n_$gt$string(92);})}, 0, [], "js.backslash"];

Shen.fns["js.dquote"] = [Shen.type_func, function shen_user_lambda5684(Arg5669) {
  if (Arg5669.length < 0) return [Shen.type_func, shen_user_lambda5684, 0, Arg5669];
  return (function() {
  return Shen.n_$gt$string(34);})}, 0, [], "js.dquote"];

Shen.fns["js.esc-string"] = [Shen.type_func, function shen_user_lambda5685(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5685, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  return ((Shen.unwind_tail(Shen.$eq$("", Arg5669_0)))
  ? Arg5669_1
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && (Shen.unwind_tail(Shen.$eq$(Arg5669_0[0], Shen.call(Shen.fns["js.backslash"], []))) || Shen.unwind_tail(Shen.$eq$(Arg5669_0[0], Shen.call(Shen.fns["js.dquote"], []))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + (Shen.call(Shen.fns["js.backslash"], []) + Arg5669_0[0]))]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$(Shen.string_$gt$n(Arg5669_0[0]), 10))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "\\x0a")]);})
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$(Shen.string_$gt$n(Arg5669_0[0]), 13))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + "\\x0d")]);})
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.esc-string"], [Shen.tlstr(Arg5669_0), (Arg5669_1 + Arg5669_0[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.esc-string"]]);}))))))}, 2, [], "js.esc-string"];

Shen.fns["js.func-name"] = [Shen.type_func, function shen_user_lambda5686(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5686, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  return ((Shen.is_type(Arg5669_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg5669_0]);})
  : Arg5669_0)}, 1, [], "js.func-name"];

Shen.fns["js.intfunc-name"] = [Shen.type_func, function shen_user_lambda5687(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5687, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  return (((Shen.call(Shen.fns["shen.sysfunc?"], [Arg5669_0]) || (Shen.globals["shen.*installing-kl*"])))
  ? (function() {
  return Shen.intern(("Shen." + Shen.call(Shen.fns["js.str-js-from-shen"], [Shen.str(Arg5669_0)])));})
  : ((Shen.is_type(Arg5669_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg5669_0]);})
  : Arg5669_0))}, 1, [], "js.intfunc-name"];

Shen.fns["js.int-func-args*"] = [Shen.type_func, function shen_user_lambda5688(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5688, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  return ((Shen.empty$question$(Arg5669_1))
  ? []
  : (((Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[1], Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg5669_0, Arg5669_1[1][2]]))))
  ? Arg5669_1[1][1]
  : (((Shen.is_type(Arg5669_1, Shen.type_cons) && Shen.is_type(Arg5669_1[1], Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-func-args*"], [Arg5669_0, Arg5669_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.int-func-args*"]]);}))))}, 2, [], "js.int-func-args*"];

Shen.fns["js.int-func-args"] = [Shen.type_func, function shen_user_lambda5689(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5689, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.int-func-args*"], [Arg5669_0, (Shen.globals["js.int-funcs"])]);})}, 1, [], "js.int-func-args"];

Shen.fns["js.int-func?"] = [Shen.type_func, function shen_user_lambda5690(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5690, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg5669_0)))
  ? true
  : (!Shen.empty$question$(Shen.call(Shen.fns["js.int-func-args"], [Arg5669_0]))))}, 1, [], "js.int-func?"];

Shen.fns["js.esc-obj"] = [Shen.type_func, function shen_user_lambda5691(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5691, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  return (((typeof(Arg5669_0) == 'string'))
  ? ("\"" + (Shen.call(Shen.fns["js.esc-string"], [Arg5669_0, ""]) + "\""))
  : ((Shen.is_type(Arg5669_0, Shen.type_symbol))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.sym-js-from-shen"], [Arg5669_0]);})
  : (function() {
  return Shen.simple_error(("Object " + Shen.call(Shen.fns["shen.app"], [Arg5669_0, " cannot be escaped", [Shen.type_symbol, "shen.r"]])));})))}, 1, [], "js.esc-obj"];

Shen.fns["js.str-join*"] = [Shen.type_func, function shen_user_lambda5692(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5692, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  return ((Shen.empty$question$(Arg5669_0))
  ? Arg5669_2
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("", Arg5669_2))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg5669_0[2], Arg5669_1, Shen.call(Shen.fns["shen.app"], [Arg5669_0[1], "", [Shen.type_symbol, "shen.a"]])]);})
  : ((Shen.is_type(Arg5669_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg5669_0[2], Arg5669_1, (Arg5669_2 + (Arg5669_1 + Shen.call(Shen.fns["shen.app"], [Arg5669_0[1], "", [Shen.type_symbol, "shen.a"]])))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.str-join*"]]);}))))}, 3, [], "js.str-join*"];

Shen.fns["js.str-join"] = [Shen.type_func, function shen_user_lambda5693(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5693, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-join*"], [Arg5669_0, Arg5669_1, ""]);})}, 2, [], "js.str-join"];

Shen.fns["js.arg-list"] = [Shen.type_func, function shen_user_lambda5694(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5694, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  return (function() {
  return Shen.call_tail(Shen.fns["js.str-join"], [Arg5669_0, ", "]);})}, 1, [], "js.arg-list"];

Shen.fns["js.arg-name"] = [Shen.type_func, function shen_user_lambda5695(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5695, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-argname"], [Arg5669_1]), ("_" + Shen.call(Shen.fns["shen.app"], [Arg5669_0, "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);})}, 2, [], "js.arg-name"];

Shen.fns["js.tail-call-ret"] = [Shen.type_func, function shen_user_lambda5696(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5696, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  return ("(function() {\x0a  return " + Shen.call(Shen.fns["shen.app"], [Arg5669_0, ";})", [Shen.type_symbol, "shen.a"]]))}, 1, [], "js.tail-call-ret"];

Shen.fns["js.tail-call-expr"] = [Shen.type_func, function shen_user_lambda5697(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5697, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5669_0, false, Arg5669_1]);})}, 2, [], "js.tail-call-expr"];

Shen.fns["js.cond-case"] = [Shen.type_func, function shen_user_lambda5698(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5698, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-expr"], [Arg5669_0, Arg5669_1]);})}, 2, [], "js.cond-case"];

Shen.fns["js.emit-cond*"] = [Shen.type_func, function shen_user_lambda5699(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5699, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  return ((Shen.empty$question$(Arg5669_0))
  ? (function() {
  return Shen.simple_error("cond failure: no default branch");})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.is_type(Arg5669_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5669_0[1][1])) && (Shen.is_type(Arg5669_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[1][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5669_0[1][2][1], Arg5669_1, Arg5669_2]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.is_type(Arg5669_0[1], Shen.type_cons) && (Shen.is_type(Arg5669_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[1][2][2])))))
  ? ("((" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.cond-case"], [Arg5669_0[1][1], Arg5669_2]), (")\x0a  ? " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_0[1][2][1], Arg5669_1, Arg5669_2]), ("\x0a  : " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.emit-cond*"], [Arg5669_0[2], Arg5669_1, Arg5669_2]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-cond*"]]);}))))}, 3, [], "js.emit-cond*"];

Shen.fns["js.emit-cond"] = [Shen.type_func, function shen_user_lambda5700(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5700, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  return (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond*"], [Arg5669_0, Arg5669_1, Arg5669_2]);})}, 3, [], "js.emit-cond"];

Shen.fns["js.emit-trap-error"] = [Shen.type_func, function shen_user_lambda5701(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5701, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg5669_2)))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_0, false, Arg5669_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1, false, Arg5669_3])),
  ("Shen.trap_error(" + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5669_2)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.emit-trap-error"], [Arg5669_0, Arg5669_1, false, Arg5669_3])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-trap-error"]]);})))}, 4, [], "js.emit-trap-error"];

Shen.fns["js.predicate-op"] = [Shen.type_func, function shen_user_lambda5702(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5702, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1;
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number?"], Arg5669_0)) && (typeof(Arg5669_1) == 'number')))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string?"], Arg5669_0)) && (typeof(Arg5669_1) == 'string')))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5669_0)) && Shen.unwind_tail(Shen.$eq$(true, Arg5669_1))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5669_0)) && Shen.unwind_tail(Shen.$eq$(false, Arg5669_1))))
  ? "true"
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean?"], Arg5669_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "boolean?"], [Shen.type_cons, Arg5669_1, []], Arg5669_2, Arg5669_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string?"], Arg5669_0)))
  ? ("(typeof(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1, false, Arg5669_3]), ") == 'string')", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number?"], Arg5669_0)))
  ? ("(typeof(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1, false, Arg5669_3]), ") == 'number')", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol?"], Arg5669_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1, false, Arg5669_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.type_symbol", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons?"], Arg5669_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1, false, Arg5669_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.type_cons", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tuple?"], Arg5669_0)))
  ? ("Shen.is_type(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1, false, Arg5669_3]), (", " + Shen.call(Shen.fns["shen.app"], ["Shen.fns['shen.tuple']", ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector?"], Arg5669_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "vector?"], [Shen.type_cons, Arg5669_1, []], Arg5669_2, Arg5669_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "empty?"], Arg5669_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, Arg5669_1, []], Arg5669_2, Arg5669_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "absvector?"], Arg5669_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "absvector?"], [Shen.type_cons, Arg5669_1, []], Arg5669_2, Arg5669_3]);})
  : Shen.fail_obj)))))))))))))}, 4, [], "js.predicate-op"];

Shen.fns["js.math-op"] = [Shen.type_func, function shen_user_lambda5703(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5703, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1;
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5669_1[2][2]) && ((typeof(Arg5669_1[1]) == 'number') && (typeof(Arg5669_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5669_1[1] + Arg5669_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5669_1[2][2]) && ((typeof(Arg5669_1[1]) == 'number') && (typeof(Arg5669_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5669_1[1] - Arg5669_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5669_1[2][2]) && ((typeof(Arg5669_1[1]) == 'number') && (typeof(Arg5669_1[2][1]) == 'number')))))))
  ? (function() {
  return Shen.str((Arg5669_1[1] * Arg5669_1[2][1]));})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5669_1[2][2]) && ((typeof(Arg5669_1[1]) == 'number') && ((typeof(Arg5669_1[2][1]) == 'number') && (!Shen.unwind_tail(Shen.$eq$(Arg5669_1[2][1], 0))))))))))
  ? (function() {
  return Shen.str((Arg5669_1[1] / Arg5669_1[2][1]));})
  : (((Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5669_1[2][2]) && Shen.call(Shen.fns["element?"], [Arg5669_0, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "/"], []]]]]])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[1], false, Arg5669_3]), (" " + Shen.call(Shen.fns["shen.app"], [Arg5669_0, (" " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[2][1], false, Arg5669_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj)))))}, 4, [], "js.math-op"];

Shen.fns["js.equality-op"] = [Shen.type_func, function shen_user_lambda5704(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5704, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  var R0, R1;
  return (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5669_0[2][2]) && ((typeof(Arg5669_0[1]) == 'number') && (typeof(Arg5669_0[2][1]) == 'number'))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5669_0[1], Arg5669_0[2][1])));})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5669_0[2][2]) && ((typeof(Arg5669_0[1]) == 'string') && (typeof(Arg5669_0[2][1]) == 'string'))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5669_0[1], Arg5669_0[2][1])));})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5669_0[2][2]) && (Shen.boolean$question$(Arg5669_0[1]) && Shen.boolean$question$(Arg5669_0[2][1]))))))
  ? (function() {
  return Shen.str(Shen.unwind_tail(Shen.$eq$(Arg5669_0[1], Arg5669_0[2][1])));})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5669_0[2][1]) && Shen.empty$question$(Arg5669_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, Arg5669_0[1], []], Arg5669_1, Arg5669_2]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.empty$question$(Arg5669_0[1]) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "empty?"], Arg5669_0[2], Arg5669_1, Arg5669_2]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "="], Arg5669_0, Arg5669_1, Arg5669_2]);})
  : Shen.fail_obj))))))}, 3, [], "js.equality-op"];

Shen.fns["js.order-op"] = [Shen.type_func, function shen_user_lambda5705(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5705, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1;
  return (((Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5669_1[2][2]) && Shen.call(Shen.fns["element?"], [Arg5669_0, [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "<="], []]]]]])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[1], false, Arg5669_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[2][1], false, Arg5669_3])),
  ("(" + Shen.call(Shen.fns["shen.app"], [R0, (" " + Shen.call(Shen.fns["shen.app"], [Arg5669_0, (" " + Shen.call(Shen.fns["shen.app"], [R1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : Shen.fail_obj)}, 4, [], "js.order-op"];

Shen.fns["js.logic-op"] = [Shen.type_func, function shen_user_lambda5706(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5706, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1;
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(false, Arg5669_1[1])) && Shen.empty$question$(Arg5669_1[2])))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5669_1[1])) && Shen.empty$question$(Arg5669_1[2])))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "not"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && Shen.empty$question$(Arg5669_1[2]))))
  ? ("(!" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[1], false, Arg5669_3]), ")", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(false, Arg5669_1[1])) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && Shen.empty$question$(Arg5669_1[2][2]))))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5669_1[1])) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && Shen.empty$question$(Arg5669_1[2][2]))))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && Shen.empty$question$(Arg5669_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[1], false, Arg5669_3]), (" && " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[2][1], false, Arg5669_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "or"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && Shen.empty$question$(Arg5669_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[1], false, Arg5669_3]), (" || " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[2][1], false, Arg5669_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj)))))))}, 4, [], "js.logic-op"];

Shen.fns["js.emit-set*"] = [Shen.type_func, function shen_user_lambda5707(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5707, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5669_3)))
  ? ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5669_0)])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, ("] = " + Shen.call(Shen.fns["shen.app"], [Arg5669_1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5669_3)))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_0, false, Arg5669_2])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, ("[1]] = " + Shen.call(Shen.fns["shen.app"], [Arg5669_1, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-set*"]]);})))}, 4, [], "js.emit-set*"];

Shen.fns["js.emit-set"] = [Shen.type_func, function shen_user_lambda5708(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5708, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["js.emit-set*"], [Arg5669_0, Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1, false, Arg5669_2]), Arg5669_2, Shen.is_type(Arg5669_0, Shen.type_symbol)]);})}, 3, [], "js.emit-set"];

Shen.fns["js.emit-value"] = [Shen.type_func, function shen_user_lambda5709(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5709, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5669_2)))
  ? ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5669_0)]), "])", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5669_2)))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_0, false, Arg5669_1])),
  ("(Shen.globals[" + Shen.call(Shen.fns["shen.app"], [R0, "[1]])", [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-value"]]);})))}, 3, [], "js.emit-value"];

Shen.fns["js.basic-op"] = [Shen.type_func, function shen_user_lambda5710(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5710, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1;
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("true", Arg5669_1[1])) && Shen.empty$question$(Arg5669_1[2])))))
  ? "true"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("false", Arg5669_1[1])) && Shen.empty$question$(Arg5669_1[2])))))
  ? "false"
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.empty$question$(Arg5669_1[2]) && (typeof(Arg5669_1[1]) == 'string')))))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Arg5669_1[1]]), "]", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "intern"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && Shen.empty$question$(Arg5669_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [[Shen.type_symbol, "intern"], Arg5669_1, Arg5669_2, Arg5669_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && Shen.empty$question$(Arg5669_1[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[1], false, Arg5669_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[2][1], false, Arg5669_3])),
  ("[Shen.type_cons, " + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && Shen.empty$question$(Arg5669_1[2][2])))))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[1], false, Arg5669_3])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[2][1], false, Arg5669_3])),
  ("[Shen.fns['shen.tuple'], " + Shen.call(Shen.fns["shen.app"], [R0, (", " + Shen.call(Shen.fns["shen.app"], [R1, "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && Shen.empty$question$(Arg5669_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-set"], [Arg5669_1[1], Arg5669_1[2][1], Arg5669_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "value"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && Shen.empty$question$(Arg5669_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-value"], [Arg5669_1[1], Arg5669_3, Shen.is_type(Arg5669_1[1], Shen.type_symbol)]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "thaw"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && Shen.empty$question$(Arg5669_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-thaw"], [Arg5669_1[1], Arg5669_2, Arg5669_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "function"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && Shen.empty$question$(Arg5669_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[1], true, Arg5669_3]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "hd"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && Shen.empty$question$(Arg5669_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[1], false, Arg5669_3]), "[1]", [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tl"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && Shen.empty$question$(Arg5669_1[2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[1], false, Arg5669_3]), "[2]", [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && Shen.empty$question$(Arg5669_1[2][2])))))
  ? ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[1], false, Arg5669_3]), (" + " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[2][1], false, Arg5669_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "pos"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && Shen.empty$question$(Arg5669_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[1], false, Arg5669_3]), ("[" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[2][1], false, Arg5669_3]), "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "address->"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && (Shen.is_type(Arg5669_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg5669_1[2][2][2]))))))
  ? ("Shen.absvector_set(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[1], false, Arg5669_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[2][1], false, Arg5669_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[2][2][1], false, Arg5669_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-address"], Arg5669_0)) && (Shen.is_type(Arg5669_1, Shen.type_cons) && (Shen.is_type(Arg5669_1[2], Shen.type_cons) && Shen.empty$question$(Arg5669_1[2][2])))))
  ? ("Shen.absvector_ref(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[1], false, Arg5669_3]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1[2][1], false, Arg5669_3]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : Shen.fail_obj))))))))))))))))}, 4, [], "js.basic-op"];

Shen.fns["js.int-funcall*"] = [Shen.type_func, function shen_user_lambda5711(Arg5669) {
  if (Arg5669.length < 5) return [Shen.type_func, shen_user_lambda5711, 5, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3], Arg5669_4 = Arg5669[4];
  var R0, R1;
  return (((Shen.unwind_tail(Shen.$eq$(true, Arg5669_2)) && Shen.unwind_tail(Shen.$eq$(true, Arg5669_3))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall*"], [Arg5669_0, Arg5669_1, false, false, Arg5669_4]);})
  : (((Shen.unwind_tail(Shen.$eq$(true, Arg5669_2)) && Shen.unwind_tail(Shen.$eq$(false, Arg5669_3))))
  ? ((R0 = Shen.call(Shen.fns["js.int-funcall*"], [Arg5669_0, Arg5669_1, false, false, Arg5669_4])),
  ("Shen.unwind_tail(" + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])))
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg5669_2)) && Shen.unwind_tail(Shen.$eq$(false, Arg5669_3))))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5713(Arg5712) {
  if (Arg5712.length < 2) return [Shen.type_func, shen_user_lambda5713, 2, Arg5712];
  var Arg5712_0 = Arg5712[0], Arg5712_1 = Arg5712[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5712_1, false, Arg5712_0]);})}, 2, [Arg5669_4], undefined], Arg5669_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.intfunc-name"], [Arg5669_0]), ("(" + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]);}))
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg5669_2)) && Shen.unwind_tail(Shen.$eq$(true, Arg5669_3))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["js.int-funcall*"], [Arg5669_0, Arg5669_1, false, false, Arg5669_4])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.int-funcall*"]]);})))))}, 5, [], "js.int-funcall*"];

Shen.fns["js.int-funcall"] = [Shen.type_func, function shen_user_lambda5714(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5714, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["element?"], [Arg5669_0, (Shen.globals["js.tail-internals"])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall*"], [Arg5669_0, Arg5669_1, R0, Arg5669_2, Arg5669_3]);}))}, 4, [], "js.int-funcall"];

Shen.fns["js.int-curry"] = [Shen.type_func, function shen_user_lambda5715(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5715, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1;
  return ((R0 = ("Shen.fns[\"" + Shen.call(Shen.fns["shen.app"], [Arg5669_0, "\"][1]", [Shen.type_symbol, "shen.a"]]))),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5717(Arg5716) {
  if (Arg5716.length < 2) return [Shen.type_func, shen_user_lambda5717, 2, Arg5716];
  var Arg5716_0 = Arg5716[0], Arg5716_1 = Arg5716[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5716_1, false, Arg5716_0]);})}, 2, [Arg5669_3], undefined], Arg5669_2])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-func-obj"], [Shen.call(Shen.fns["length"], [Arg5669_1]), R0, R1, []]);}))}, 4, [], "js.int-curry"];

Shen.fns["js.internal-op*"] = [Shen.type_func, function shen_user_lambda5718(Arg5669) {
  if (Arg5669.length < 5) return [Shen.type_func, shen_user_lambda5718, 5, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3], Arg5669_4 = Arg5669[4];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg5669_1]), Shen.call(Shen.fns["length"], [Arg5669_2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.int-funcall"], [Arg5669_0, Arg5669_2, Arg5669_3, Arg5669_4]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js.int-curry"], [Arg5669_0, Arg5669_1, Arg5669_2, Arg5669_4]);}))}, 5, [], "js.internal-op*"];

Shen.fns["js.internal-op"] = [Shen.type_func, function shen_user_lambda5719(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5719, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["js.int-func-args"], [Arg5669_0])),
  Shen.call(Shen.fns["js.intfunc-name"], [Arg5669_0]),
  ((Shen.empty$question$(R0))
  ? Shen.fail_obj
  : (function() {
  return Shen.call_tail(Shen.fns["js.internal-op*"], [Arg5669_0, R0, Arg5669_1, Arg5669_2, Arg5669_3]);})))}, 4, [], "js.internal-op"];

Shen.fns["js.emit-do"] = [Shen.type_func, function shen_user_lambda5720(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5720, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1;
  return (((Shen.is_type(Arg5669_0, Shen.type_cons) && Shen.empty$question$(Arg5669_0[2])))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5722(Arg5721) {
  if (Arg5721.length < 2) return [Shen.type_func, shen_user_lambda5722, 2, Arg5721];
  var Arg5721_0 = Arg5721[0], Arg5721_1 = Arg5721[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5721_1, false, Arg5721_0]);})}, 2, [Arg5669_2], undefined], Shen.call(Shen.fns["reverse"], [Arg5669_3])])),
  (R1 = ",\x0a  "),
  ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.str-join"], [R0, R1]), (",\x0a  " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_0[1], Arg5669_1, Arg5669_2]), ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : ((Shen.is_type(Arg5669_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-do"], [Arg5669_0[2], Arg5669_1, Arg5669_2, [Shen.type_cons, Arg5669_0[1], Arg5669_3]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-do"]]);})))}, 4, [], "js.emit-do"];

Shen.fns["js.std-op"] = [Shen.type_func, function shen_user_lambda5723(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5723, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda5725(Arg5724) {
  if (Arg5724.length < 4) return [Shen.type_func, shen_user_lambda5725, 4, Arg5724];
  var Arg5724_0 = Arg5724[0], Arg5724_1 = Arg5724[1], Arg5724_2 = Arg5724[2], Arg5724_3 = Arg5724[3];
  var R0, R1, R2, R3, R4;
  return ((R4 = Shen.call(Shen.fns["js.math-op"], [Arg5724_0, Arg5724_1, Arg5724_2, Arg5724_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = [Shen.type_func, function shen_user_lambda5727(Arg5726) {
  if (Arg5726.length < 4) return [Shen.type_func, shen_user_lambda5727, 4, Arg5726];
  var Arg5726_0 = Arg5726[0], Arg5726_1 = Arg5726[1], Arg5726_2 = Arg5726[2], Arg5726_3 = Arg5726[3];
  var R0, R1, R2, R3, R4;
  return ((R4 = Shen.call(Shen.fns["js.logic-op"], [Arg5726_0, Arg5726_1, Arg5726_2, Arg5726_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = Shen.call(Shen.fns["js.order-op"], [Arg5726_0, Arg5726_1, Arg5726_2, Arg5726_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = Shen.call(Shen.fns["js.basic-op"], [Arg5726_0, Arg5726_1, Arg5726_2, Arg5726_3])),
  ((Shen.unwind_tail(Shen.$eq$(R4, Shen.fail_obj)))
  ? ((R4 = [Shen.type_func, function shen_user_lambda5729(Arg5728) {
  if (Arg5728.length < 4) return [Shen.type_func, shen_user_lambda5729, 4, Arg5728];
  var Arg5728_0 = Arg5728[0], Arg5728_1 = Arg5728[1], Arg5728_2 = Arg5728[2], Arg5728_3 = Arg5728[3];
  return (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.trap-error"], Arg5728_0)) && (Shen.is_type(Arg5728_1, Shen.type_cons) && (Shen.is_type(Arg5728_1[2], Shen.type_cons) && Shen.empty$question$(Arg5728_1[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-trap-error"], [Arg5728_1[1], Arg5728_1[2][1], Arg5728_2, Arg5728_3]);})
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "do"], Arg5728_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-do"], [Arg5728_1, Arg5728_2, Arg5728_3, []]);})
  : (((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], Arg5728_0)) && Shen.empty$question$(Arg5728_1)))
  ? "Shen.fail_obj"
  : Shen.fail_obj)))}, 4, [Arg5726_0, Arg5726_1, Arg5726_2, Arg5726_3], undefined]),
  ((Shen.is_type(Arg5726_0, Shen.type_symbol))
  ? ((R3 = Shen.call(Shen.fns["js.internal-op"], [Arg5726_0, Arg5726_1, Arg5726_2, Arg5726_3])),
  ((Shen.unwind_tail(Shen.$eq$(R3, Shen.fail_obj)))
  ? Shen.thaw(R4)
  : R3))
  : Shen.thaw(R4)))
  : R4))
  : R4))
  : R4))}, 4, [Arg5724_0, Arg5724_1, Arg5724_2, Arg5724_3], undefined]),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg5724_0)))
  ? ((R3 = Shen.call(Shen.fns["js.equality-op"], [Arg5724_1, Arg5724_2, Arg5724_3])),
  ((Shen.unwind_tail(Shen.$eq$(R3, Shen.fail_obj)))
  ? Shen.thaw(R4)
  : R3))
  : Shen.thaw(R4)))
  : R4))}, 4, [Arg5669_0, Arg5669_1, Arg5669_2, Arg5669_3], undefined]),
  (((Shen.is_type(Arg5669_1, Shen.type_cons) && Shen.empty$question$(Arg5669_1[2])))
  ? ((R1 = Shen.call(Shen.fns["js.predicate-op"], [Arg5669_0, Arg5669_1[1], Arg5669_2, Arg5669_3])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0)))}, 4, [], "js.std-op"];

Shen.fns["js.mk-regs-aux"] = [Shen.type_func, function shen_user_lambda5730(Arg5669) {
  if (Arg5669.length < 5) return [Shen.type_func, shen_user_lambda5730, 5, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3], Arg5669_4 = Arg5669[4];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5669_1, Arg5669_0)))
  ? Arg5669_4
  : ((R0 = Shen.call(Shen.fns["@s"], [Arg5669_4, Shen.call(Shen.fns["@s"], [Arg5669_3, Shen.call(Shen.fns["@s"], [Shen.str(Shen.call(Shen.fns["js.context-varname"], [Arg5669_2])), Shen.str(Arg5669_0)])])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.mk-regs-aux"], [(Arg5669_0 + 1), Arg5669_1, Arg5669_2, ", ", R0]);})))}, 5, [], "js.mk-regs-aux"];

Shen.fns["js.mk-regs"] = [Shen.type_func, function shen_user_lambda5731(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5731, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["js.mk-regs-aux"], [0, Shen.call(Shen.fns["js.context-nregs"], [Arg5669_0]), Arg5669_0, "var ", ""]);})}, 1, [], "js.mk-regs"];

Shen.fns["js.mk-regs-str"] = [Shen.type_func, function shen_user_lambda5732(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5732, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["js.context-nregs"], [Arg5669_0]), 0)))
  ? ""
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.mk-regs"], [Arg5669_0]), ";\x0a  ", [Shen.type_symbol, "shen.a"]]);}))}, 1, [], "js.mk-regs-str"];

Shen.fns["js.mk-args-str-aux"] = [Shen.type_func, function shen_user_lambda5733(Arg5669) {
  if (Arg5669.length < 5) return [Shen.type_func, shen_user_lambda5733, 5, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3], Arg5669_4 = Arg5669[4];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5669_1, Arg5669_0)))
  ? Arg5669_4
  : ((R0 = "~A~A~A = ~A[~A]"),
  (R1 = Shen.call(Shen.fns["js.context-argname"], [Arg5669_2])),
  (R2 = Shen.call(Shen.fns["js.arg-name"], [Arg5669_1, Arg5669_2])),
  (R2 = Shen.call(Shen.fns["shen.insert"], [Arg5669_1, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.insert"], [Arg5669_3, Shen.call(Shen.fns["shen.insert"], [Arg5669_4, Shen.call(Shen.fns["shen.proc-nl"], [R0])])])])])])),
  (function() {
  return Shen.call_tail(Shen.fns["js.mk-args-str-aux"], [Arg5669_0, (Arg5669_1 + 1), Arg5669_2, ", ", R2]);})))}, 5, [], "js.mk-args-str-aux"];

Shen.fns["js.mk-args-str"] = [Shen.type_func, function shen_user_lambda5734(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5734, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg5669_0)))
  ? ""
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.mk-args-str-aux"], [Arg5669_0, 0, Arg5669_1, "var ", ""]), ";\x0a  ", [Shen.type_symbol, "shen.a"]]);}))}, 2, [], "js.mk-args-str"];

Shen.fns["js.emit-func-obj"] = [Shen.type_func, function shen_user_lambda5735(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5735, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1, R2;
  return ((((Shen.unwind_tail(Shen.$eq$(Arg5669_3, "")) || Shen.empty$question$(Arg5669_3)))
  ? (R0 = "undefined")
  : (R0 = Arg5669_3)),
  (R1 = Shen.call(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["js.str-join"], [Arg5669_2, ", "]), "]"])])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], ["S", Shen.call(Shen.fns["@s"], ["h", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], [".", Shen.call(Shen.fns["@s"], ["t", Shen.call(Shen.fns["@s"], ["y", Shen.call(Shen.fns["@s"], ["p", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], ["_", Shen.call(Shen.fns["@s"], ["f", Shen.call(Shen.fns["@s"], ["u", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], ["c", Shen.call(Shen.fns["@s"], [",", Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["js.str-join"], [[Shen.type_cons, Arg5669_1, [Shen.type_cons, Shen.str(Arg5669_0), [Shen.type_cons, R1, [Shen.type_cons, R0, []]]]], ", "]), "]"])])])])])])])])])])])])])])])])])]);}))}, 4, [], "js.emit-func-obj"];

Shen.fns["js.emit-func-closure"] = [Shen.type_func, function shen_user_lambda5736(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5736, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  var R0, R1, R2;
  return ((R0 = "[~A, ~A, ~A, ~A]"),
  (R1 = "Shen.type_func"),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [Arg5669_2, Shen.call(Shen.fns["shen.insert"], [Arg5669_0, Shen.call(Shen.fns["shen.insert"], [Arg5669_1, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.proc-nl"], [R0])])])])]);}))}, 3, [], "js.emit-func-closure"];

Shen.fns["js.emit-func-body"] = [Shen.type_func, function shen_user_lambda5737(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5737, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["js.func-name"], [Arg5669_0])),
  (R1 = Shen.call(Shen.fns["js.context-argname"], [Arg5669_3])),
  (R2 = Shen.call(Shen.fns["js.emit-func-closure"], [Arg5669_1, R0, R1])),
  (R2 = ("if (" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-argname"], [Arg5669_3]), (".length < " + Shen.call(Shen.fns["shen.app"], [Arg5669_1, (") return " + Shen.call(Shen.fns["shen.app"], [R2, "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))),
  (R3 = "function ~A(~A) {~%  ~A;~%  ~A~Areturn ~A}"),
  (R4 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_2, true, Arg5669_3])),
  (R5 = Shen.call(Shen.fns["js.mk-regs-str"], [Arg5669_3])),
  (R6 = Shen.call(Shen.fns["js.mk-args-str"], [Arg5669_1, Arg5669_3])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert"], [R4, Shen.call(Shen.fns["shen.insert"], [R5, Shen.call(Shen.fns["shen.insert"], [R6, Shen.call(Shen.fns["shen.insert"], [R2, Shen.call(Shen.fns["shen.insert"], [R1, Shen.call(Shen.fns["shen.insert"], [R0, Shen.call(Shen.fns["shen.proc-nl"], [R3])])])])])])]);}))}, 4, [], "js.emit-func-body"];

Shen.fns["js.emit-mk-func"] = [Shen.type_func, function shen_user_lambda5738(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5738, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5669_0)])),
  Shen.call(Shen.fns["js.func-name"], [Arg5669_0]),
  (R1 = Shen.call(Shen.fns["length"], [Arg5669_1])),
  (R2 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]])),
  (R2 = Shen.call(Shen.fns["js.emit-func-body"], [R2, R1, Arg5669_2, Arg5669_3])),
  (R2 = Shen.call(Shen.fns["js.emit-func-obj"], [R1, R2, [], R0])),
  ("Shen.fns[" + Shen.call(Shen.fns["shen.app"], [R0, ("] = " + Shen.call(Shen.fns["shen.app"], [R2, ";\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))}, 4, [], "js.emit-mk-func"];

Shen.fns["js.emit-mk-closure"] = [Shen.type_func, function shen_user_lambda5739(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5739, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["js.context-toplevel"], [Arg5669_3])),
  (R1 = [Shen.type_symbol, "Arg"]),
  (R2 = (Shen.call(Shen.fns["length"], [Arg5669_1]) + Shen.call(Shen.fns["length"], [Arg5669_0]))),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, R0, Shen.call(Shen.fns["gensym"], [R1]), [Shen.type_symbol, "R"]])),
  (R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen-user-lambda"]])),
  (R0 = Shen.call(Shen.fns["js.emit-func-body"], [R0, R2, Arg5669_2, R1])),
  Shen.call(Shen.fns["js.context-toplevel->"], [Arg5669_3, Shen.call(Shen.fns["js.context-toplevel"], [R1])]),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5741(Arg5740) {
  if (Arg5740.length < 2) return [Shen.type_func, shen_user_lambda5741, 2, Arg5740];
  var Arg5740_0 = Arg5740[0], Arg5740_1 = Arg5740[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5740_1, false, Arg5740_0]);})}, 2, [Arg5669_3], undefined], Arg5669_1])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-func-obj"], [R2, R0, R1, []]);}))}, 4, [], "js.emit-mk-closure"];

Shen.fns["js.emit-mk-toplevel"] = [Shen.type_func, function shen_user_lambda5742(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5742, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "js.shen-js-toplevel"]])),
  (R0 = Shen.call(Shen.fns["js.emit-func-body"], [R0, 0, Arg5669_0, Arg5669_1])),
  ("Shen.call_toplevel(" + (R0 + ");")))}, 2, [], "js.emit-mk-toplevel"];

Shen.fns["js.emit-thaw"] = [Shen.type_func, function shen_user_lambda5743(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5743, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg5669_1)))
  ? ("Shen.unwind_tail(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.emit-thaw"], [Arg5669_0, true, Arg5669_2]), ")", [Shen.type_symbol, "shen.a"]]))
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5669_1)))
  ? ("Shen.thaw(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_0, false, Arg5669_2]), ")", [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-thaw"]]);})))}, 3, [], "js.emit-thaw"];

Shen.fns["js.emit-freeze"] = [Shen.type_func, function shen_user_lambda5744(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5744, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  var R0, R1, R2, R3, R4, R5, R6;
  return (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-closure"], [[], Arg5669_0, Arg5669_1, Arg5669_2]);})}, 3, [], "js.emit-freeze"];

Shen.fns["js.emit-get-arg"] = [Shen.type_func, function shen_user_lambda5745(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5745, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  var R0, R1, R2, R3, R4, R5, R6;
  return (function() {
  return Shen.call_tail(Shen.fns["js.arg-name"], [Arg5669_0, Arg5669_1]);})}, 2, [], "js.emit-get-arg"];

Shen.fns["js.emit-set-reg"] = [Shen.type_func, function shen_user_lambda5746(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5746, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_1, false, Arg5669_2])),
  Shen.call(Shen.fns["js.context-nregs->"], [Arg5669_2, Shen.call(Shen.fns["js.max"], [(Arg5669_0 + 1), Shen.call(Shen.fns["js.context-nregs"], [Arg5669_2])])]),
  ("(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-varname"], [Arg5669_2]), Shen.call(Shen.fns["shen.app"], [Arg5669_0, (" = " + Shen.call(Shen.fns["shen.app"], [R0, ")", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]])))}, 3, [], "js.emit-set-reg"];

Shen.fns["js.emit-get-reg"] = [Shen.type_func, function shen_user_lambda5747(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5747, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  var R0, R1, R2, R3, R4, R5, R6;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.context-varname"], [Arg5669_1]), Shen.call(Shen.fns["shen.app"], [Arg5669_0, "", [Shen.type_symbol, "shen.a"]]), [Shen.type_symbol, "shen.a"]]);})}, 2, [], "js.emit-get-reg"];

Shen.fns["js.func-arg"] = [Shen.type_func, function shen_user_lambda5748(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5748, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  var R0, R1, R2, R3, R4, R5, R6;
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5669_1, false, Arg5669_0]);})}, 2, [], "js.func-arg"];

Shen.fns["js.emit-funcall*"] = [Shen.type_func, function shen_user_lambda5749(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5749, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5669_2)))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5751(Arg5750) {
  if (Arg5750.length < 2) return [Shen.type_func, shen_user_lambda5751, 2, Arg5750];
  var Arg5750_0 = Arg5750[0], Arg5750_1 = Arg5750[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5750_1, false, Arg5750_0]);})}, 2, [Arg5669_3], undefined], Arg5669_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  (R1 = "Shen.call_tail"),
  (function() {
  return Shen.call_tail(Shen.fns["js.tail-call-ret"], [Shen.call(Shen.fns["shen.app"], [R1, ("(" + Shen.call(Shen.fns["shen.app"], [Arg5669_0, (", [" + Shen.call(Shen.fns["shen.app"], [R0, "])", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])]);}))
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5669_2)))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5753(Arg5752) {
  if (Arg5752.length < 2) return [Shen.type_func, shen_user_lambda5753, 2, Arg5752];
  var Arg5752_0 = Arg5752[0], Arg5752_1 = Arg5752[1];
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5752_1, false, Arg5752_0]);})}, 2, [Arg5669_3], undefined], Arg5669_1])),
  (R0 = Shen.call(Shen.fns["js.str-join"], [R0, ", "])),
  ("Shen.call(" + Shen.call(Shen.fns["shen.app"], [Arg5669_0, (", [" + Shen.call(Shen.fns["shen.app"], [R0, "])", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.emit-funcall*"]]);})))}, 4, [], "js.emit-funcall*"];

Shen.fns["js.emit-funcall"] = [Shen.type_func, function shen_user_lambda5754(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5754, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5669_0)])),
  (R0 = ("Shen.fns[" + Shen.call(Shen.fns["shen.app"], [R0, "]", [Shen.type_symbol, "shen.a"]]))),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall*"], [R0, Arg5669_1, Arg5669_2, Arg5669_3]);}))}, 4, [], "js.emit-funcall"];

Shen.fns["js.js-from-kl-expr"] = [Shen.type_func, function shen_user_lambda5755(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5755, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr*"], [Arg5669_0, Arg5669_1, Arg5669_2])),
  (((typeof(R0) == 'string'))
  ? R0
  : (function() {
  return Shen.simple_error(("ERROR: expr " + Shen.call(Shen.fns["shen.app"], [Arg5669_0, (" => " + Shen.call(Shen.fns["shen.app"], [R0, "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]])));})))}, 3, [], "js.js-from-kl-expr"];

Shen.fns["js.js-from-kl-expr*"] = [Shen.type_func, function shen_user_lambda5756(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5756, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((Shen.empty$question$(Arg5669_0))
  ? "[]"
  : (((typeof(Arg5669_0) == 'number'))
  ? (function() {
  return Shen.str(Arg5669_0);})
  : ((Shen.unwind_tail(Shen.$eq$(Arg5669_0, Shen.fail_obj)))
  ? "shen_fail_obj"
  : ((Shen.unwind_tail(Shen.$eq$(true, Arg5669_0)))
  ? "true"
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5669_0)))
  ? "false"
  : ((Shen.is_type(Arg5669_0, Shen.type_symbol))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], [Shen.str(Arg5669_0), "]", [Shen.type_symbol, "shen.s"]]))
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bar!"], Arg5669_0)))
  ? ("[Shen.type_symbol, " + Shen.call(Shen.fns["shen.app"], ["|", "]", [Shen.type_symbol, "shen.s"]]))
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5669_0[1])) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[2][2][2]))))))
  ? ("[Shen.type_cons, " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_0[2][1], false, Arg5669_2]), (", " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_0[2][2][1], false, Arg5669_2]), "]", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], Arg5669_0[1])) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5669_0[2][1], Arg5669_1, Arg5669_2]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg5669_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond"], [Arg5669_0[2], Arg5669_1, Arg5669_2]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg5669_0[1])) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-cond"], [[Shen.type_cons, [Shen.type_cons, Arg5669_0[2][1], [Shen.type_cons, Arg5669_0[2][2][1], []]], [Shen.type_cons, [Shen.type_cons, true, Arg5669_0[2][2][2]], []]], Arg5669_1, Arg5669_2]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "freeze"], Arg5669_0[1])) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[2][2])))))
  ? (function() {
  return Shen.simple_error("Wrong freeze code!");})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.freeze"], Arg5669_0[1])) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-freeze"], [Arg5669_0[2][2][1], Arg5669_0[2][2][2][1], Arg5669_2]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.arg"], Arg5669_0[1])) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-get-arg"], [Arg5669_0[2][1], Arg5669_2]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.reg"], Arg5669_0[1])) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-get-reg"], [Arg5669_0[2][1], Arg5669_2]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.reg->"], Arg5669_0[1])) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-set-reg"], [Arg5669_0[2][1], Arg5669_0[2][2][1], Arg5669_2]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.func"], Arg5669_0[1])) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-func"], [Arg5669_0[2][1], Arg5669_0[2][2][1], Arg5669_0[2][2][2][2][1], Arg5669_2]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.closure"], Arg5669_0[1])) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-closure"], [Arg5669_0[2][1], Arg5669_0[2][2][2][1], Arg5669_0[2][2][2][2][1], Arg5669_2]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.toplevel"], Arg5669_0[1])) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[2][2][2][2][2]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-mk-toplevel"], [Arg5669_0[2][2][2][2][1], Arg5669_2]);})
  : ((R0 = [Shen.type_func, function shen_user_lambda5758(Arg5757) {
  if (Arg5757.length < 3) return [Shen.type_func, shen_user_lambda5758, 3, Arg5757];
  var Arg5757_0 = Arg5757[0], Arg5757_1 = Arg5757[1], Arg5757_2 = Arg5757[2];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg5757_0, Shen.type_cons) && Shen.is_type(Arg5757_0[1], Shen.type_cons)))
  ? ((R3 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5757_0[1], false, Arg5757_2])),
  (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall*"], [R3, Arg5757_0[2], Arg5757_1, Arg5757_2]);}))
  : ((Shen.is_type(Arg5757_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.emit-funcall"], [Arg5757_0[1], Arg5757_0[2], Arg5757_1, Arg5757_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["js.esc-obj"], [Arg5757_0]);})))}, 3, [Arg5669_0, Arg5669_1, Arg5669_2], undefined]),
  ((Shen.is_type(Arg5669_0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["js.std-op"], [Arg5669_0[1], Arg5669_0[2], Arg5669_1, Arg5669_2])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Shen.fail_obj)))
  ? Shen.thaw(R0)
  : R1))
  : Shen.thaw(R0))))))))))))))))))))))}, 3, [], "js.js-from-kl-expr*"];

Shen.fns["js.js-from-kl-toplevel-expr"] = [Shen.type_func, function shen_user_lambda5759(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5759, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  var R0, R1, R2, R3, R4, R5, R6;
  return (((typeof(Arg5669_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_0, false, Arg5669_1]), ";\x0a", [Shen.type_symbol, "shen.a"]]);})
  : ((R0 = Shen.call(Shen.fns["js.js-from-kl-expr"], [Arg5669_0, false, Arg5669_1])),
  (R1 = Shen.call(Shen.fns["js.mk-regs-str"], [Arg5669_1])),
  (((Shen.call(Shen.fns["js.context-nregs"], [Arg5669_1]) > 0))
  ? ("((function() {\x0a  " + Shen.call(Shen.fns["shen.app"], [R1, ("return " + Shen.call(Shen.fns["shen.app"], [R0, "})());\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [R0, ";", [Shen.type_symbol, "shen.a"]]);}))))}, 2, [], "js.js-from-kl-toplevel-expr"];

Shen.fns["js.js-from-kl-toplevel"] = [Shen.type_func, function shen_user_lambda5760(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5760, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  var R0, R1, R2, R3, R4, R5, R6;
  return (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], Arg5669_0[1])) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && (Shen.is_type(Arg5669_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5669_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.emit-set"], [Arg5669_0[2][1], Arg5669_0[2][2][1], Arg5669_2]), ";\x0a"]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.func"], Arg5669_0[1])) && (Shen.is_type(Arg5669_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5669_1)) && Shen.call(Shen.fns["js.int-func?"], [Arg5669_0[2][1]]))))))
  ? ""
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.func"], Arg5669_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5669_0, true, Arg5669_2]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "regkl.toplevel"], Arg5669_0[1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-expr"], [Arg5669_0, true, Arg5669_2]);})
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.empty$question$(Arg5669_0[2]) && Shen.is_type(Arg5669_0[1], Shen.type_symbol))))
  ? ("Shen.call_toplevel(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["js.esc-obj"], [Shen.str(Arg5669_0[1])]), ")\x0a", [Shen.type_symbol, "shen.a"]]))
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && Shen.empty$question$(Arg5669_0[2])))
  ? (function() {
  return Shen.simple_error(("Unexpected toplevel expression: " + Shen.call(Shen.fns["shen.app"], [Arg5669_0[1], "\x0a", [Shen.type_symbol, "shen.r"]])));})
  : (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-expr"], [Arg5669_0, Arg5669_2]);})))))))}, 3, [], "js.js-from-kl-toplevel"];

Shen.fns["js.js-from-kl-toplevel-forms"] = [Shen.type_func, function shen_user_lambda5761(Arg5669) {
  if (Arg5669.length < 4) return [Shen.type_func, shen_user_lambda5761, 4, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2], Arg5669_3 = Arg5669[3];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((Shen.empty$question$(Arg5669_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.context-toplevel"], [Arg5669_2]), Shen.call(Shen.fns["@s"], ["\x0a", Shen.call(Shen.fns["@s"], [Arg5669_3, "\x0a"])])]);})
  : ((Shen.is_type(Arg5669_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["js.js-from-kl-toplevel"], [Arg5669_0[1], Arg5669_1, Arg5669_2])),
  (R0 = (Arg5669_3 + (R0 + "\x0a"))),
  (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-forms"], [Arg5669_0[2], Arg5669_1, Arg5669_2, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.js-from-kl-toplevel-forms"]]);})))}, 4, [], "js.js-from-kl-toplevel-forms"];

Shen.fns["js.js-from-kl*"] = [Shen.type_func, function shen_user_lambda5762(Arg5669) {
  if (Arg5669.length < 3) return [Shen.type_func, shen_user_lambda5762, 3, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1], Arg5669_2 = Arg5669[2];
  var R0, R1, R2, R3, R4, R5, R6;
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel"], [Arg5669_0, Arg5669_1, Arg5669_2]);})}, 3, [], "js.js-from-kl*"];

Shen.fns["js-from-kl"] = [Shen.type_func, function shen_user_lambda5763(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5763, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["js.mk-context"], [0, "", Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Arg"]]), [Shen.type_symbol, "R"]])),
  (R1 = Shen.call(Shen.fns["regkl.walk"], [[Shen.type_cons, Arg5669_0, []], false])),
  (R1 = Shen.call(Shen.fns["js.js-from-kl-toplevel-forms"], [R1, (Shen.globals["js.skip-internals"]), R0, ""])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["js.context-toplevel"], [R0]), Shen.call(Shen.fns["@s"], ["\x0a", Shen.call(Shen.fns["@s"], [R1, "\x0a"])])]);}))}, 1, [], "js-from-kl"];

Shen.fns["js.js-from-kl-forms"] = [Shen.type_func, function shen_user_lambda5764(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5764, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["regkl.walk"], [Arg5669_0, false])),
  (R1 = Shen.call(Shen.fns["js.mk-context"], [0, "", Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Arg"]]), [Shen.type_symbol, "R"]])),
  (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-toplevel-forms"], [R0, (Shen.globals["js.skip-internals"]), R1, ""]);}))}, 1, [], "js.js-from-kl-forms"];

Shen.fns["js.kl-from-shen"] = [Shen.type_func, function shen_user_lambda5765(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5765, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((R0 = Shen.call(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda5767(Arg5766) {
  if (Arg5766.length < 1) return [Shen.type_func, shen_user_lambda5767, 1, Arg5766];
  var Arg5766_0 = Arg5766[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg5766_0]);})}, 1, [], undefined], Arg5669_0])),
  ((Shen.call(Shen.fns["shen.packaged?"], [R0]))
  ? (R0 = Shen.call(Shen.fns["js.package-contents"], [R0]))
  : (R0 = R0)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.elim-def"], [Shen.call(Shen.fns["shen.proc-input+"], [R0])]);}))}, 1, [], "js.kl-from-shen"];

Shen.fns["js-from-shen"] = [Shen.type_func, function shen_user_lambda5768(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5768, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  var R0, R1, R2, R3, R4, R5, R6;
  return (function() {
  return Shen.call_tail(Shen.fns["js-from-kl"], [Shen.call(Shen.fns["js.kl-from-shen"], [Arg5669_0])]);})}, 1, [], "js-from-shen"];

Shen.fns["js.translate-file"] = [Shen.type_func, function shen_user_lambda5769(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5769, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  var R0, R1, R2, R3, R4, R5, R6;
  return (function() {
  return Shen.call_tail(Shen.fns["js.js-from-kl-forms"], [Shen.call(Shen.fns["js.kl-from-shen"], [Shen.call(Shen.fns["read-file"], [Arg5669_0])])]);})}, 1, [], "js.translate-file"];

Shen.fns["js.file-extension?"] = [Shen.type_func, function shen_user_lambda5770(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5770, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((Shen.unwind_tail(Shen.$eq$("", Arg5669_0)))
  ? false
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]) && Shen.unwind_tail(Shen.$eq$(Arg5669_1, Shen.tlstr(Arg5669_0)))))
  ? true
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg5669_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.file-extension?"], [Shen.tlstr(Arg5669_0), Arg5669_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.file-extension?"]]);}))))}, 2, [], "js.file-extension?"];

Shen.fns["js.translate-files'"] = [Shen.type_func, function shen_user_lambda5771(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5771, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  var R0, R1, R2, R3, R4, R5, R6;
  return ((Shen.empty$question$(Arg5669_0))
  ? Arg5669_1
  : (((Shen.is_type(Arg5669_0, Shen.type_cons) && (Shen.call(Shen.fns["js.file-extension?"], [Arg5669_0[1], ".kl"]) || Shen.call(Shen.fns["js.file-extension?"], [Arg5669_0[1], ".shen"]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.translate-files'"], [Arg5669_0[2], (Arg5669_1 + Shen.call(Shen.fns["js.translate-file"], [Arg5669_0[1]]))]);})
  : ((Shen.is_type(Arg5669_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["js.translate-files'"], [Arg5669_0[2], (Arg5669_1 + Shen.call(Shen.fns["read-file-as-string"], [Arg5669_0[1]]))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "js.translate-files'"]]);}))))}, 2, [], "js.translate-files'"];

Shen.fns["js.translate-files"] = [Shen.type_func, function shen_user_lambda5772(Arg5669) {
  if (Arg5669.length < 1) return [Shen.type_func, shen_user_lambda5772, 1, Arg5669];
  var Arg5669_0 = Arg5669[0];
  var R0, R1, R2, R3, R4, R5, R6;
  return (function() {
  return Shen.call_tail(Shen.fns["js.translate-files'"], [Arg5669_0, ""]);})}, 1, [], "js.translate-files"];

Shen.fns["js.dump"] = [Shen.type_func, function shen_user_lambda5773(Arg5669) {
  if (Arg5669.length < 2) return [Shen.type_func, shen_user_lambda5773, 2, Arg5669];
  var Arg5669_0 = Arg5669[0], Arg5669_1 = Arg5669[1];
  var R0, R1, R2, R3, R4, R5, R6;
  return (Shen.call(Shen.fns["write-to-file"], [Arg5669_1, Shen.call(Shen.fns["js.translate-files"], [Arg5669_0])]),
  true)}, 2, [], "js.dump"];

Shen.call_toplevel(function js$dot$shen_js_toplevel5774(Arg5669) {
  if (Arg5669.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel5774, 0, Arg5669];
  var R0, R1, R2, R3, R4, R5, R6;
  return (Shen.call(Shen.fns["shen.process-datatype"], [[Shen.type_symbol, "js.type#context"], Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda5776(Arg5775) {
  if (Arg5775.length < 1) return [Shen.type_func, shen_user_lambda5776, 1, Arg5775];
  var Arg5775_0 = Arg5775[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<datatype-rules>"], [Arg5775_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_symbol, "Varname"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Argname"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Nregs"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Toplevel"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Argname"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "Varname"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]], []]]], []]]], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, []]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, "_______________________"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "B"], []]]]], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "js.context"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_func, function shen_user_lambda5778(Arg5777) {
  if (Arg5777.length < 1) return [Shen.type_func, shen_user_lambda5778, 1, Arg5777];
  var Arg5777_0 = Arg5777[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.datatype-error"], [Arg5777_0]);})}, 1, [], undefined]])]),
  (Shen.globals["js.int-funcs"] = [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], []], [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "js.call-js"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], []]], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "write-byte"], []]]]]]]]]]]]]]]]]]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, "Z"], []]]], [Shen.type_cons, [Shen.type_symbol, "address->"], []]], []]]]),
  (Shen.globals["js.internals"] = [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "write-byte"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "js.shenjs-call-js"], []]]]]]]]]]]]]]]]]]]]]]]]]),
  (Shen.globals["js.tail-internals"] = [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "js.shenjs-call-js"], []]]),
  (Shen.globals["js.skip-internals"] = true),
  (Shen.globals["js.*silence*"] = false))});


"Copyright (c) 2015, Mark Tarver\x0d\x0a\x0d\x0aAll rights reserved.\x0d\x0a\x0d\x0aRedistribution and use in source and binary forms, with or without\x0d\x0amodification, are permitted provided that the following conditions are met:\x0d\x0a1. Redistributions of source code must retain the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer.\x0d\x0a2. Redistributions in binary form must reproduce the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer in the\x0d\x0a   documentation and/or other materials provided with the distribution.\x0d\x0a3. The name of Mark Tarver may not be used to endorse or promote products\x0d\x0a   derived from this software without specific prior written permission.\x0d\x0a\x0d\x0aTHIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY\x0d\x0aEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\x0d\x0aWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\x0d\x0aDISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY\x0d\x0aDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\x0d\x0a(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\x0d\x0aLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\x0d\x0aON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0d\x0a(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\x0d\x0aSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";

Shen.fns["shen.shen"] = [Shen.type_func, function shen_user_lambda5783(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5783, 0, Arg5782];
  return (Shen.call(Shen.fns["shen.credits"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.loop"], []);}))}, 0, [], "shen.shen"];

Shen.fns["shen.loop"] = [Shen.type_func, function shen_user_lambda5784(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5784, 0, Arg5782];
  var R0, R1;
  return (Shen.call(Shen.fns["shen.initialise_environment"], []),
  Shen.call(Shen.fns["shen.prompt"], []),
  (R0 = [Shen.type_func, function shen_user_lambda5786(Arg5785) {
  if (Arg5785.length < 0) return [Shen.type_func, shen_user_lambda5786, 0, Arg5785];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.read-evaluate-print"], []);})}, 0, [], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda5788(Arg5787) {
  if (Arg5787.length < 1) return [Shen.type_func, shen_user_lambda5788, 1, Arg5787];
  var Arg5787_0 = Arg5787[0];
  return (function() {
  return Shen.call_tail(Shen.fns["pr"], [Shen.error_to_string(Arg5787_0), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], undefined]),
  Shen.trap_error(R0, R1),
  (function() {
  return Shen.call_tail(Shen.fns["shen.loop"], []);}))}, 0, [], "shen.loop"];

Shen.fns["shen.credits"] = [Shen.type_func, function shen_user_lambda5789(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5789, 0, Arg5782];
  var R0, R1;
  return (Shen.call(Shen.fns["shen.prhush"], ["\x0aShen, copyright (C) 2010-2015 Mark Tarver\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], [("www.shenlanguage.org, " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*version*"]), "\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], [("running under " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*language*"]), (", implementation: " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*implementation*"]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0aport " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*port*"]), (" ported by " + Shen.call(Shen.fns["shen.app"], [(Shen.globals["*porters*"]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);}))}, 0, [], "shen.credits"];

Shen.fns["shen.initialise_environment"] = [Shen.type_func, function shen_user_lambda5790(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5790, 0, Arg5782];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.multiple-set"], [[Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*infs*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*process-counter*"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "shen.*catch*"], [Shen.type_cons, 0, []]]]]]]]]]);})}, 0, [], "shen.initialise_environment"];

Shen.fns["shen.multiple-set"] = [Shen.type_func, function shen_user_lambda5791(Arg5782) {
  if (Arg5782.length < 1) return [Shen.type_func, shen_user_lambda5791, 1, Arg5782];
  var Arg5782_0 = Arg5782[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg5782_0))
  ? []
  : (((Shen.is_type(Arg5782_0, Shen.type_cons) && Shen.is_type(Arg5782_0[2], Shen.type_cons)))
  ? ((Shen.globals[Arg5782_0[1][1]] = Arg5782_0[2][1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.multiple-set"], [Arg5782_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.multiple-set"]]);})))}, 1, [], "shen.multiple-set"];

Shen.fns["destroy"] = [Shen.type_func, function shen_user_lambda5792(Arg5782) {
  if (Arg5782.length < 1) return [Shen.type_func, shen_user_lambda5792, 1, Arg5782];
  var Arg5782_0 = Arg5782[0];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["declare"], [Arg5782_0, [Shen.type_symbol, "symbol"]]);})}, 1, [], "destroy"];

Shen.fns["shen.read-evaluate-print"] = [Shen.type_func, function shen_user_lambda5793(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5793, 0, Arg5782];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.toplineread"], [])),
  (R1 = (Shen.globals["shen.*history*"])),
  (R0 = Shen.call(Shen.fns["shen.retrieve-from-history-if-needed"], [R0, R1])),
  Shen.call(Shen.fns["shen.update_history"], [R0, R1]),
  (R1 = Shen.call(Shen.fns["fst"], [R0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel"], [R1]);}))}, 0, [], "shen.read-evaluate-print"];

Shen.fns["shen.retrieve-from-history-if-needed"] = [Shen.type_func, function shen_user_lambda5794(Arg5782) {
  if (Arg5782.length < 2) return [Shen.type_func, shen_user_lambda5794, 2, Arg5782];
  var Arg5782_0 = Arg5782[0], Arg5782_1 = Arg5782[1];
  var R0, R1;
  return (((Shen.is_type(Arg5782_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg5782_0]), Shen.type_cons) && Shen.call(Shen.fns["element?"], [Shen.call(Shen.fns["snd"], [Arg5782_0])[1], [Shen.type_cons, Shen.call(Shen.fns["shen.space"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), []]]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.retrieve-from-history-if-needed"], [[Shen.fns['shen.tuple'], Shen.call(Shen.fns["fst"], [Arg5782_0]), Shen.call(Shen.fns["snd"], [Arg5782_0])[2]], Arg5782_1]);})
  : (((Shen.is_type(Arg5782_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg5782_0]), Shen.type_cons) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg5782_0])[2], Shen.type_cons) && (Shen.empty$question$(Shen.call(Shen.fns["snd"], [Arg5782_0])[2][2]) && (Shen.is_type(Arg5782_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg5782_0])[1], Shen.call(Shen.fns["shen.exclamation"], []))) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg5782_0])[2][1], Shen.call(Shen.fns["shen.exclamation"], []))))))))))
  ? (Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [Arg5782_1[1]])]),
  Arg5782_1[1])
  : (((Shen.is_type(Arg5782_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg5782_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg5782_0])[1], Shen.call(Shen.fns["shen.exclamation"], []))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make-key"], [Shen.call(Shen.fns["snd"], [Arg5782_0])[2], Arg5782_1])),
  (R0 = Shen.call(Shen.fns["head"], [Shen.call(Shen.fns["shen.find-past-inputs"], [R0, Arg5782_1])])),
  Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [R0])]),
  R0)
  : (((Shen.is_type(Arg5782_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg5782_0]), Shen.type_cons) && (Shen.empty$question$(Shen.call(Shen.fns["snd"], [Arg5782_0])[2]) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg5782_0])[1], Shen.call(Shen.fns["shen.percent"], [])))))))
  ? (Shen.call(Shen.fns["shen.print-past-inputs"], [[Shen.type_func, function shen_user_lambda5796(Arg5795) {
  if (Arg5795.length < 1) return [Shen.type_func, shen_user_lambda5796, 1, Arg5795];
  var Arg5795_0 = Arg5795[0];
  return true}, 1, [], undefined], Shen.call(Shen.fns["reverse"], [Arg5782_1]), 0]),
  (function() {
  return Shen.call_tail(Shen.fns["abort"], []);}))
  : (((Shen.is_type(Arg5782_0, Shen.fns['shen.tuple']) && (Shen.is_type(Shen.call(Shen.fns["snd"], [Arg5782_0]), Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["snd"], [Arg5782_0])[1], Shen.call(Shen.fns["shen.percent"], []))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make-key"], [Shen.call(Shen.fns["snd"], [Arg5782_0])[2], Arg5782_1])),
  Shen.call(Shen.fns["shen.print-past-inputs"], [R0, Shen.call(Shen.fns["reverse"], [Arg5782_1]), 0]),
  (function() {
  return Shen.call_tail(Shen.fns["abort"], []);}))
  : Arg5782_0)))))}, 2, [], "shen.retrieve-from-history-if-needed"];

Shen.fns["shen.percent"] = [Shen.type_func, function shen_user_lambda5797(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5797, 0, Arg5782];
  var R0, R1;
  return 37}, 0, [], "shen.percent"];

Shen.fns["shen.exclamation"] = [Shen.type_func, function shen_user_lambda5798(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5798, 0, Arg5782];
  var R0, R1;
  return 33}, 0, [], "shen.exclamation"];

Shen.fns["shen.prbytes"] = [Shen.type_func, function shen_user_lambda5799(Arg5782) {
  if (Arg5782.length < 1) return [Shen.type_func, shen_user_lambda5799, 1, Arg5782];
  var Arg5782_0 = Arg5782[0];
  var R0, R1;
  return (Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5801(Arg5800) {
  if (Arg5800.length < 1) return [Shen.type_func, shen_user_lambda5801, 1, Arg5800];
  var Arg5800_0 = Arg5800[0];
  return (function() {
  return Shen.call_tail(Shen.fns["pr"], [Shen.n_$gt$string(Arg5800_0), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], undefined], Arg5782_0]),
  (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))}, 1, [], "shen.prbytes"];

Shen.fns["shen.update_history"] = [Shen.type_func, function shen_user_lambda5802(Arg5782) {
  if (Arg5782.length < 2) return [Shen.type_func, shen_user_lambda5802, 2, Arg5782];
  var Arg5782_0 = Arg5782[0], Arg5782_1 = Arg5782[1];
  var R0, R1;
  return (Shen.globals["shen.*history*"] = [Shen.type_cons, Arg5782_0, Arg5782_1])}, 2, [], "shen.update_history"];

Shen.fns["shen.toplineread"] = [Shen.type_func, function shen_user_lambda5803(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5803, 0, Arg5782];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), []]);})}, 0, [], "shen.toplineread"];

Shen.fns["shen.toplineread_loop"] = [Shen.type_func, function shen_user_lambda5804(Arg5782) {
  if (Arg5782.length < 2) return [Shen.type_func, shen_user_lambda5804, 2, Arg5782];
  var Arg5782_0 = Arg5782[0], Arg5782_1 = Arg5782[1];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5782_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("line read aborted");})
  : ((Shen.call(Shen.fns["element?"], [Arg5782_0, [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.carriage-return"], []), []]]]))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda5806(Arg5805) {
  if (Arg5805.length < 1) return [Shen.type_func, shen_user_lambda5806, 1, Arg5805];
  var Arg5805_0 = Arg5805[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg5805_0]);})}, 1, [], undefined], Arg5782_1, [Shen.type_func, function shen_user_lambda5808(Arg5807) {
  if (Arg5807.length < 1) return [Shen.type_func, shen_user_lambda5808, 1, Arg5807];
  var Arg5807_0 = Arg5807[0];
  return [Shen.type_symbol, "shen.nextline"]}, 1, [], undefined]])),
  Shen.call(Shen.fns["shen.record-it"], [Arg5782_1]),
  (((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.nextline"])) || Shen.empty$question$(R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg5782_1, [Shen.type_cons, Arg5782_0, []]])]);})
  : [Shen.fns['shen.tuple'], R0, Arg5782_1]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.toplineread_loop"], [Shen.read_byte(Shen.call(Shen.fns["stinput"], [])), Shen.call(Shen.fns["append"], [Arg5782_1, [Shen.type_cons, Arg5782_0, []]])]);})))}, 2, [], "shen.toplineread_loop"];

Shen.fns["shen.hat"] = [Shen.type_func, function shen_user_lambda5809(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5809, 0, Arg5782];
  var R0, R1;
  return 94}, 0, [], "shen.hat"];

Shen.fns["shen.newline"] = [Shen.type_func, function shen_user_lambda5810(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5810, 0, Arg5782];
  var R0, R1;
  return 10}, 0, [], "shen.newline"];

Shen.fns["shen.carriage-return"] = [Shen.type_func, function shen_user_lambda5811(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5811, 0, Arg5782];
  var R0, R1;
  return 13}, 0, [], "shen.carriage-return"];

Shen.fns["tc"] = [Shen.type_func, function shen_user_lambda5812(Arg5782) {
  if (Arg5782.length < 1) return [Shen.type_func, shen_user_lambda5812, 1, Arg5782];
  var Arg5782_0 = Arg5782[0];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg5782_0)))
  ? (Shen.globals["shen.*tc*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg5782_0)))
  ? (Shen.globals["shen.*tc*"] = false)
  : (function() {
  return Shen.simple_error("tc expects a + or -");})))}, 1, [], "tc"];

Shen.fns["shen.prompt"] = [Shen.type_func, function shen_user_lambda5813(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5813, 0, Arg5782];
  var R0, R1;
  return (((Shen.globals["shen.*tc*"]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0a\x0a(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["length"], [(Shen.globals["shen.*history*"])]), "+) ", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0a\x0a(" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["length"], [(Shen.globals["shen.*history*"])]), "-) ", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);}))}, 0, [], "shen.prompt"];

Shen.fns["shen.toplevel"] = [Shen.type_func, function shen_user_lambda5814(Arg5782) {
  if (Arg5782.length < 1) return [Shen.type_func, shen_user_lambda5814, 1, Arg5782];
  var Arg5782_0 = Arg5782[0];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel_evaluate"], [Arg5782_0, (Shen.globals["shen.*tc*"])]);})}, 1, [], "shen.toplevel"];

Shen.fns["shen.find-past-inputs"] = [Shen.type_func, function shen_user_lambda5815(Arg5782) {
  if (Arg5782.length < 2) return [Shen.type_func, shen_user_lambda5815, 2, Arg5782];
  var Arg5782_0 = Arg5782[0], Arg5782_1 = Arg5782[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.find"], [Arg5782_0, Arg5782_1])),
  ((Shen.empty$question$(R0))
  ? (function() {
  return Shen.simple_error("input not found\x0a");})
  : R0))}, 2, [], "shen.find-past-inputs"];

Shen.fns["shen.make-key"] = [Shen.type_func, function shen_user_lambda5816(Arg5782) {
  if (Arg5782.length < 2) return [Shen.type_func, shen_user_lambda5816, 2, Arg5782];
  var Arg5782_0 = Arg5782[0], Arg5782_1 = Arg5782[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda5818(Arg5817) {
  if (Arg5817.length < 1) return [Shen.type_func, shen_user_lambda5818, 1, Arg5817];
  var Arg5817_0 = Arg5817[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg5817_0]);})}, 1, [], undefined], Arg5782_0, [Shen.type_func, function shen_user_lambda5820(Arg5819) {
  if (Arg5819.length < 1) return [Shen.type_func, shen_user_lambda5820, 1, Arg5819];
  var Arg5819_0 = Arg5819[0];
  return ((Shen.is_type(Arg5819_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("parse error here: " + Shen.call(Shen.fns["shen.app"], [Arg5819_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (function() {
  return Shen.simple_error("parse error\x0a");}))}, 1, [], undefined]])[1]),
  ((Shen.call(Shen.fns["integer?"], [R0]))
  ? [Shen.type_func, function shen_user_lambda5822(Arg5821) {
  if (Arg5821.length < 3) return [Shen.type_func, shen_user_lambda5822, 3, Arg5821];
  var Arg5821_0 = Arg5821[0], Arg5821_1 = Arg5821[1], Arg5821_2 = Arg5821[2];
  return Shen.$eq$(Arg5821_2, Shen.call(Shen.fns["nth"], [(Arg5821_0 + 1), Shen.call(Shen.fns["reverse"], [Arg5821_1])]))}, 3, [R0, Arg5782_1], undefined]
  : [Shen.type_func, function shen_user_lambda5824(Arg5823) {
  if (Arg5823.length < 2) return [Shen.type_func, shen_user_lambda5824, 2, Arg5823];
  var Arg5823_0 = Arg5823[0], Arg5823_1 = Arg5823[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prefix?"], [Arg5823_0, Shen.call(Shen.fns["shen.trim-gubbins"], [Shen.call(Shen.fns["snd"], [Arg5823_1])])]);})}, 2, [Arg5782_0], undefined]))}, 2, [], "shen.make-key"];

Shen.fns["shen.trim-gubbins"] = [Shen.type_func, function shen_user_lambda5825(Arg5782) {
  if (Arg5782.length < 1) return [Shen.type_func, shen_user_lambda5825, 1, Arg5782];
  var Arg5782_0 = Arg5782[0];
  var R0, R1;
  return (((Shen.is_type(Arg5782_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg5782_0[1], Shen.call(Shen.fns["shen.space"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg5782_0[2]]);})
  : (((Shen.is_type(Arg5782_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg5782_0[1], Shen.call(Shen.fns["shen.newline"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg5782_0[2]]);})
  : (((Shen.is_type(Arg5782_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg5782_0[1], Shen.call(Shen.fns["shen.carriage-return"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg5782_0[2]]);})
  : (((Shen.is_type(Arg5782_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg5782_0[1], Shen.call(Shen.fns["shen.tab"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg5782_0[2]]);})
  : (((Shen.is_type(Arg5782_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg5782_0[1], Shen.call(Shen.fns["shen.left-round"], [])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-gubbins"], [Arg5782_0[2]]);})
  : Arg5782_0)))))}, 1, [], "shen.trim-gubbins"];

Shen.fns["shen.space"] = [Shen.type_func, function shen_user_lambda5826(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5826, 0, Arg5782];
  var R0, R1;
  return 32}, 0, [], "shen.space"];

Shen.fns["shen.tab"] = [Shen.type_func, function shen_user_lambda5827(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5827, 0, Arg5782];
  var R0, R1;
  return 9}, 0, [], "shen.tab"];

Shen.fns["shen.left-round"] = [Shen.type_func, function shen_user_lambda5828(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, shen_user_lambda5828, 0, Arg5782];
  var R0, R1;
  return 40}, 0, [], "shen.left-round"];

Shen.fns["shen.find"] = [Shen.type_func, function shen_user_lambda5829(Arg5782) {
  if (Arg5782.length < 2) return [Shen.type_func, shen_user_lambda5829, 2, Arg5782];
  var Arg5782_0 = Arg5782[0], Arg5782_1 = Arg5782[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg5782_1))
  ? []
  : (((Shen.is_type(Arg5782_1, Shen.type_cons) && Shen.call(Arg5782_0, [Arg5782_1[1]])))
  ? [Shen.type_cons, Arg5782_1[1], Shen.call(Shen.fns["shen.find"], [Arg5782_0, Arg5782_1[2]])]
  : ((Shen.is_type(Arg5782_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.find"], [Arg5782_0, Arg5782_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.find"]]);}))))}, 2, [], "shen.find"];

Shen.fns["shen.prefix?"] = [Shen.type_func, function shen_user_lambda5830(Arg5782) {
  if (Arg5782.length < 2) return [Shen.type_func, shen_user_lambda5830, 2, Arg5782];
  var Arg5782_0 = Arg5782[0], Arg5782_1 = Arg5782[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg5782_0))
  ? true
  : (((Shen.is_type(Arg5782_0, Shen.type_cons) && (Shen.is_type(Arg5782_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg5782_1[1], Arg5782_0[1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prefix?"], [Arg5782_0[2], Arg5782_1[2]]);})
  : false))}, 2, [], "shen.prefix?"];

Shen.fns["shen.print-past-inputs"] = [Shen.type_func, function shen_user_lambda5831(Arg5782) {
  if (Arg5782.length < 3) return [Shen.type_func, shen_user_lambda5831, 3, Arg5782];
  var Arg5782_0 = Arg5782[0], Arg5782_1 = Arg5782[1], Arg5782_2 = Arg5782[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg5782_1))
  ? [Shen.type_symbol, "_"]
  : (((Shen.is_type(Arg5782_1, Shen.type_cons) && (!Shen.call(Arg5782_0, [Arg5782_1[1]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.print-past-inputs"], [Arg5782_0, Arg5782_1[2], (Arg5782_2 + 1)]);})
  : (((Shen.is_type(Arg5782_1, Shen.type_cons) && Shen.is_type(Arg5782_1[1], Shen.fns['shen.tuple'])))
  ? (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg5782_2, ". ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prbytes"], [Shen.call(Shen.fns["snd"], [Arg5782_1[1]])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.print-past-inputs"], [Arg5782_0, Arg5782_1[2], (Arg5782_2 + 1)]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.print-past-inputs"]]);}))))}, 3, [], "shen.print-past-inputs"];

Shen.fns["shen.toplevel_evaluate"] = [Shen.type_func, function shen_user_lambda5832(Arg5782) {
  if (Arg5782.length < 2) return [Shen.type_func, shen_user_lambda5832, 2, Arg5782];
  var Arg5782_0 = Arg5782[0], Arg5782_1 = Arg5782[1];
  var R0, R1;
  return (((Shen.is_type(Arg5782_0, Shen.type_cons) && (Shen.is_type(Arg5782_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg5782_0[2][1])) && (Shen.is_type(Arg5782_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg5782_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(true, Arg5782_1))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg5782_0[1], Arg5782_0[2][2][1]]);})
  : (((Shen.is_type(Arg5782_0, Shen.type_cons) && Shen.is_type(Arg5782_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.toplevel_evaluate"], [[Shen.type_cons, Arg5782_0[1], []], Arg5782_1]),
  Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.toplevel_evaluate"], [Arg5782_0[2], Arg5782_1]);}))
  : (((Shen.is_type(Arg5782_0, Shen.type_cons) && (Shen.empty$question$(Arg5782_0[2]) && Shen.unwind_tail(Shen.$eq$(true, Arg5782_1)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg5782_0[1], Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "A"]])]);})
  : (((Shen.is_type(Arg5782_0, Shen.type_cons) && (Shen.empty$question$(Arg5782_0[2]) && Shen.unwind_tail(Shen.$eq$(false, Arg5782_1)))))
  ? ((R0 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg5782_0[1]])),
  (function() {
  return Shen.call_tail(Shen.fns["print"], [R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.toplevel_evaluate"]]);})))))}, 2, [], "shen.toplevel_evaluate"];

Shen.fns["shen.typecheck-and-evaluate"] = [Shen.type_func, function shen_user_lambda5833(Arg5782) {
  if (Arg5782.length < 2) return [Shen.type_func, shen_user_lambda5833, 2, Arg5782];
  var Arg5782_0 = Arg5782[0], Arg5782_1 = Arg5782[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.typecheck"], [Arg5782_0, Arg5782_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (function() {
  return Shen.simple_error("type error\x0a");})
  : ((R1 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg5782_0])),
  (R0 = Shen.call(Shen.fns["shen.pretty-type"], [R0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [R1, (" : " + Shen.call(Shen.fns["shen.app"], [R0, "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.s"]]), Shen.call(Shen.fns["stoutput"], [])]);}))))}, 2, [], "shen.typecheck-and-evaluate"];

Shen.fns["shen.pretty-type"] = [Shen.type_func, function shen_user_lambda5834(Arg5782) {
  if (Arg5782.length < 1) return [Shen.type_func, shen_user_lambda5834, 1, Arg5782];
  var Arg5782_0 = Arg5782[0];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.mult_subst"], [(Shen.globals["shen.*alphabet*"]), Shen.call(Shen.fns["shen.extract-pvars"], [Arg5782_0]), Arg5782_0]);})}, 1, [], "shen.pretty-type"];

Shen.fns["shen.extract-pvars"] = [Shen.type_func, function shen_user_lambda5835(Arg5782) {
  if (Arg5782.length < 1) return [Shen.type_func, shen_user_lambda5835, 1, Arg5782];
  var Arg5782_0 = Arg5782[0];
  var R0, R1;
  return ((Shen.call(Shen.fns["shen.pvar?"], [Arg5782_0]))
  ? [Shen.type_cons, Arg5782_0, []]
  : ((Shen.is_type(Arg5782_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract-pvars"], [Arg5782_0[1]]), Shen.call(Shen.fns["shen.extract-pvars"], [Arg5782_0[2]])]);})
  : []))}, 1, [], "shen.extract-pvars"];

Shen.fns["shen.mult_subst"] = [Shen.type_func, function shen_user_lambda5836(Arg5782) {
  if (Arg5782.length < 3) return [Shen.type_func, shen_user_lambda5836, 3, Arg5782];
  var Arg5782_0 = Arg5782[0], Arg5782_1 = Arg5782[1], Arg5782_2 = Arg5782[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg5782_0))
  ? Arg5782_2
  : ((Shen.empty$question$(Arg5782_1))
  ? Arg5782_2
  : (((Shen.is_type(Arg5782_0, Shen.type_cons) && Shen.is_type(Arg5782_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mult_subst"], [Arg5782_0[2], Arg5782_1[2], Shen.call(Shen.fns["subst"], [Arg5782_0[1], Arg5782_1[1], Arg5782_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.mult_subst"]]);}))))}, 3, [], "shen.mult_subst"];

Shen.call_toplevel(function js$dot$shen_js_toplevel5837(Arg5782) {
  if (Arg5782.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel5837, 0, Arg5782];
  var R0, R1;
  return (Shen.globals["shen.*history*"] = [])});


"Copyright (c) 2015, Mark Tarver\x0d\x0a\x0d\x0aAll rights reserved.\x0d\x0a\x0d\x0aRedistribution and use in source and binary forms, with or without\x0d\x0amodification, are permitted provided that the following conditions are met:\x0d\x0a1. Redistributions of source code must retain the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer.\x0d\x0a2. Redistributions in binary form must reproduce the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer in the\x0d\x0a   documentation and/or other materials provided with the distribution.\x0d\x0a3. The name of Mark Tarver may not be used to endorse or promote products\x0d\x0a   derived from this software without specific prior written permission.\x0d\x0a\x0d\x0aTHIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY\x0d\x0aEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\x0d\x0aWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\x0d\x0aDISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY\x0d\x0aDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\x0d\x0a(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\x0d\x0aLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\x0d\x0aON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0d\x0a(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\x0d\x0aSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";

Shen.fns["shen.shen->kl"] = [Shen.type_func, function shen_user_lambda5840(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5840, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  return (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda5842(Arg5841) {
  if (Arg5841.length < 1) return [Shen.type_func, shen_user_lambda5842, 1, Arg5841];
  var Arg5841_0 = Arg5841[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<define>"], [Arg5841_0]);})}, 1, [], undefined], [Shen.type_cons, Arg5839_0, Arg5839_1], [Shen.type_func, function shen_user_lambda5844(Arg5843) {
  if (Arg5843.length < 2) return [Shen.type_func, shen_user_lambda5844, 2, Arg5843];
  var Arg5843_0 = Arg5843[0], Arg5843_1 = Arg5843[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.shen-syntax-error"], [Arg5843_0, Arg5843_1]);})}, 2, [Arg5839_0], undefined]]);})}, 2, [], "shen.shen->kl"];

Shen.fns["shen.shen-syntax-error"] = [Shen.type_func, function shen_user_lambda5845(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5845, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  return (function() {
  return Shen.simple_error(("syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg5839_0, (" here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg5839_1]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));})}, 2, [], "shen.shen-syntax-error"];

Shen.fns["shen.<define>"] = [Shen.type_func, function shen_user_lambda5846(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5846, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg5839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<signature>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.compile_to_machine_code"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<name>"], [Arg5839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.compile_to_machine_code"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]);})
  : Shen.fail_obj))
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<define>"];

Shen.fns["shen.<name>"] = [Shen.type_func, function shen_user_lambda5847(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5847, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1;
  return ((Shen.is_type(Arg5839_0[1], Shen.type_cons))
  ? ((R0 = Arg5839_0[1][1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg5839_0])])[1], (((Shen.is_type(R0, Shen.type_symbol) && (!Shen.call(Shen.fns["shen.sysfunc?"], [R0]))))
  ? R0
  : Shen.simple_error(Shen.call(Shen.fns["shen.app"], [R0, " is not a legitimate function name.\x0a", [Shen.type_symbol, "shen.a"]])))]);}))
  : Shen.fail_obj)}, 1, [], "shen.<name>"];

Shen.fns["shen.sysfunc?"] = [Shen.type_func, function shen_user_lambda5848(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5848, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5839_0, Shen.call(Shen.fns["get"], [[Shen.type_symbol, "shen"], [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])])]);})}, 1, [], "shen.sysfunc?"];

Shen.fns["shen.<signature>"] = [Shen.type_func, function shen_user_lambda5849(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5849, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1;
  return (((Shen.is_type(Arg5839_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "{"], Arg5839_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<signature-help>"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg5839_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "}"], R0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])[1], Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.curry-type"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])])]);})
  : Shen.fail_obj)
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<signature>"];

Shen.fns["shen.curry-type"] = [Shen.type_func, function shen_user_lambda5850(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5850, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1;
  return (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg5839_0[2][1])) && (Shen.is_type(Arg5839_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg5839_0[2][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [[Shen.type_cons, Arg5839_0[1], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg5839_0[2][2], []]]]]);})
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg5839_0[2][1])) && (Shen.is_type(Arg5839_0[2][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[2][2][2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], Arg5839_0[2][2][2][1]))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [[Shen.type_cons, Arg5839_0[1], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, Arg5839_0[2][2], []]]]]);})
  : ((Shen.is_type(Arg5839_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5852(Arg5851) {
  if (Arg5851.length < 1) return [Shen.type_func, shen_user_lambda5852, 1, Arg5851];
  var Arg5851_0 = Arg5851[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [Arg5851_0]);})}, 1, [], undefined], Arg5839_0]);})
  : Arg5839_0)))}, 1, [], "shen.curry-type"];

Shen.fns["shen.<signature-help>"] = [Shen.type_func, function shen_user_lambda5853(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5853, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1;
  return (((Shen.is_type(Arg5839_0[1], Shen.type_cons))
  ? ((R0 = Arg5839_0[1][1]),
  (R1 = Shen.call(Shen.fns["shen.<signature-help>"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg5839_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, [Shen.type_symbol, "}"], []]]])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, R0, Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["<e>"], [Arg5839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], []]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<signature-help>"];

Shen.fns["shen.<rules>"] = [Shen.type_func, function shen_user_lambda5854(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5854, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<rule>"], [Arg5839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.linearise"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<rule>"], [Arg5839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.linearise"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), []]]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<rules>"];

Shen.fns["shen.<rule>"] = [Shen.type_func, function shen_user_lambda5855(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5855, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg5839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg5839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "->"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg5839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (((Shen.is_type(R1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R1[1][1]))))
  ? ((R2 = Shen.call(Shen.fns["shen.<guard>"], [Shen.call(Shen.fns["shen.pair"], [R1[1][2], Shen.call(Shen.fns["shen.hdtl"], [R1])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.choicepoint!"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]], []]]], []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<patterns>"], [Arg5839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<-"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<action>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.choicepoint!"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]], []]]]);})
  : Shen.fail_obj))
  : Shen.fail_obj)
  : Shen.fail_obj))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<rule>"];

Shen.fns["shen.fail_if"] = [Shen.type_func, function shen_user_lambda5856(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5856, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return ((Shen.call(Arg5839_0, [Arg5839_1]))
  ? Shen.fail_obj
  : Arg5839_1)}, 2, [], "shen.fail_if"];

Shen.fns["shen.succeeds?"] = [Shen.type_func, function shen_user_lambda5857(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5857, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5839_0, Shen.fail_obj)))
  ? false
  : true)}, 1, [], "shen.succeeds?"];

Shen.fns["shen.<patterns>"] = [Shen.type_func, function shen_user_lambda5858(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5858, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg5839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<patterns>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["<e>"], [Arg5839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], []]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<patterns>"];

Shen.fns["shen.<pattern>"] = [Shen.type_func, function shen_user_lambda5859(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5859, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return ((((Shen.is_type(Arg5839_0[1], Shen.type_cons) && Shen.is_type(Arg5839_0[1][1], Shen.type_cons)))
  ? (((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][2], Arg5839_0[2][1]])[1], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg5839_0[1], Shen.type_cons) && Shen.is_type(Arg5839_0[1][1], Shen.type_cons)))
  ? (((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][2], Arg5839_0[2][1]])[1], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg5839_0[1], Shen.type_cons) && Shen.is_type(Arg5839_0[1][1], Shen.type_cons)))
  ? (((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][2], Arg5839_0[2][1]])[1], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg5839_0[1], Shen.type_cons) && Shen.is_type(Arg5839_0[1][1], Shen.type_cons)))
  ? (((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<pattern1>"], [Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<pattern2>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][2], Arg5839_0[2][1]])[1], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((((Shen.is_type(Arg5839_0[1], Shen.type_cons) && Shen.is_type(Arg5839_0[1][1], Shen.type_cons)))
  ? (((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1][1]))))
  ? (((Shen.is_type(Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])])])[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(0, Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])[1][2], Shen.call(Shen.fns["shen.hdtl"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][1], Arg5839_0[2][1]])])])[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][2], Arg5839_0[2][1]])[1], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]]))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg5839_0[1], Shen.type_cons))
  ? ((R0 = Arg5839_0[1][1]),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg5839_0])])[1], Shen.call(Shen.fns["shen.constructor-error"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<simple_pattern>"], [Arg5839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]);})
  : Shen.fail_obj))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<pattern>"];

Shen.fns["shen.constructor-error"] = [Shen.type_func, function shen_user_lambda5860(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5860, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg5839_0, " is not a legitimate constructor\x0a", [Shen.type_symbol, "shen.a"]]));})}, 1, [], "shen.constructor-error"];

Shen.fns["shen.<simple_pattern>"] = [Shen.type_func, function shen_user_lambda5861(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5861, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5839_0[1], Shen.type_cons))
  ? ((R0 = Arg5839_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "_"])))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg5839_0])])[1], Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Parse_Y"]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((Shen.is_type(Arg5839_0[1], Shen.type_cons))
  ? ((R0 = Arg5839_0[1][1]),
  (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "<-"], []]]])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg5839_0])])[1], R0]);})
  : Shen.fail_obj))
  : Shen.fail_obj)
  : R0))}, 1, [], "shen.<simple_pattern>"];

Shen.fns["shen.<pattern1>"] = [Shen.type_func, function shen_user_lambda5862(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5862, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg5839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]);})
  : Shen.fail_obj))}, 1, [], "shen.<pattern1>"];

Shen.fns["shen.<pattern2>"] = [Shen.type_func, function shen_user_lambda5863(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5863, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.<pattern>"], [Arg5839_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]);})
  : Shen.fail_obj))}, 1, [], "shen.<pattern2>"];

Shen.fns["shen.<action>"] = [Shen.type_func, function shen_user_lambda5864(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5864, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg5839_0[1], Shen.type_cons))
  ? ((R0 = Arg5839_0[1][1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg5839_0])])[1], R0]);}))
  : Shen.fail_obj)}, 1, [], "shen.<action>"];

Shen.fns["shen.<guard>"] = [Shen.type_func, function shen_user_lambda5865(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5865, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg5839_0[1], Shen.type_cons))
  ? ((R0 = Arg5839_0[1][1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg5839_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg5839_0])])[1], R0]);}))
  : Shen.fail_obj)}, 1, [], "shen.<guard>"];

Shen.fns["shen.compile_to_machine_code"] = [Shen.type_func, function shen_user_lambda5866(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5866, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.compile_to_lambda+"], [Arg5839_0, Arg5839_1])),
  (R0 = Shen.call(Shen.fns["shen.compile_to_kl"], [Arg5839_0, R0])),
  Shen.call(Shen.fns["shen.record-source"], [Arg5839_0, R0]),
  R0)}, 2, [], "shen.compile_to_machine_code"];

Shen.fns["shen.record-source"] = [Shen.type_func, function shen_user_lambda5867(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5867, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_symbol, "shen.skip"]
  : (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg5839_0, [Shen.type_symbol, "shen.source"], Arg5839_1, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.record-source"];

Shen.fns["shen.compile_to_lambda+"] = [Shen.type_func, function shen_user_lambda5868(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5868, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.aritycheck"], [Arg5839_0, Arg5839_1])),
  Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5870(Arg5869) {
  if (Arg5869.length < 2) return [Shen.type_func, shen_user_lambda5870, 2, Arg5869];
  var Arg5869_0 = Arg5869[0], Arg5869_1 = Arg5869[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.free_variable_check"], [Arg5869_0, Arg5869_1]);})}, 2, [Arg5839_0], undefined], Arg5839_1]),
  (R0 = Shen.call(Shen.fns["shen.parameters"], [R0])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5872(Arg5871) {
  if (Arg5871.length < 1) return [Shen.type_func, shen_user_lambda5872, 1, Arg5871];
  var Arg5871_0 = Arg5871[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.strip-protect"], [Arg5871_0]);})}, 1, [], undefined], Arg5839_1])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5874(Arg5873) {
  if (Arg5873.length < 1) return [Shen.type_func, shen_user_lambda5874, 1, Arg5873];
  var Arg5873_0 = Arg5873[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.abstract_rule"], [Arg5873_0]);})}, 1, [], undefined], R1])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5876(Arg5875) {
  if (Arg5875.length < 2) return [Shen.type_func, shen_user_lambda5876, 2, Arg5875];
  var Arg5875_0 = Arg5875[0], Arg5875_1 = Arg5875[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.application_build"], [Arg5875_0, Arg5875_1]);})}, 2, [R0], undefined], R1])),
  [Shen.type_cons, R0, [Shen.type_cons, R1, []]])}, 2, [], "shen.compile_to_lambda+"];

Shen.fns["shen.free_variable_check"] = [Shen.type_func, function shen_user_lambda5877(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5877, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5839_1, Shen.type_cons) && (Shen.is_type(Arg5839_1[2], Shen.type_cons) && Shen.empty$question$(Arg5839_1[2][2]))))
  ? ((R0 = Shen.call(Shen.fns["shen.extract_vars"], [Arg5839_1[1]])),
  (R0 = Shen.call(Shen.fns["shen.extract_free_vars"], [R0, Arg5839_1[2][1]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.free_variable_warnings"], [Arg5839_0, R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.free_variable_check"]]);}))}, 2, [], "shen.free_variable_check"];

Shen.fns["shen.extract_vars"] = [Shen.type_func, function shen_user_lambda5878(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5878, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return ((Shen.call(Shen.fns["variable?"], [Arg5839_0]))
  ? [Shen.type_cons, Arg5839_0, []]
  : ((Shen.is_type(Arg5839_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_vars"], [Arg5839_0[1]]), Shen.call(Shen.fns["shen.extract_vars"], [Arg5839_0[2]])]);})
  : []))}, 1, [], "shen.extract_vars"];

Shen.fns["shen.extract_free_vars"] = [Shen.type_func, function shen_user_lambda5879(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5879, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5839_1, Shen.type_cons) && (Shen.is_type(Arg5839_1[2], Shen.type_cons) && (Shen.empty$question$(Arg5839_1[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg5839_1[1], [Shen.type_symbol, "protect"]))))))
  ? []
  : (((Shen.call(Shen.fns["variable?"], [Arg5839_1]) && (!Shen.call(Shen.fns["element?"], [Arg5839_1, Arg5839_0]))))
  ? [Shen.type_cons, Arg5839_1, []]
  : (((Shen.is_type(Arg5839_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg5839_1[1])) && (Shen.is_type(Arg5839_1[2], Shen.type_cons) && (Shen.is_type(Arg5839_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg5839_1[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.extract_free_vars"], [[Shen.type_cons, Arg5839_1[2][1], Arg5839_0], Arg5839_1[2][2][1]]);})
  : (((Shen.is_type(Arg5839_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg5839_1[1])) && (Shen.is_type(Arg5839_1[2], Shen.type_cons) && (Shen.is_type(Arg5839_1[2][2], Shen.type_cons) && (Shen.is_type(Arg5839_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5839_1[2][2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_free_vars"], [Arg5839_0, Arg5839_1[2][2][1]]), Shen.call(Shen.fns["shen.extract_free_vars"], [[Shen.type_cons, Arg5839_1[2][1], Arg5839_0], Arg5839_1[2][2][2][1]])]);})
  : ((Shen.is_type(Arg5839_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.extract_free_vars"], [Arg5839_0, Arg5839_1[1]]), Shen.call(Shen.fns["shen.extract_free_vars"], [Arg5839_0, Arg5839_1[2]])]);})
  : [])))))}, 2, [], "shen.extract_free_vars"];

Shen.fns["shen.free_variable_warnings"] = [Shen.type_func, function shen_user_lambda5880(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5880, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5839_1))
  ? [Shen.type_symbol, "_"]
  : (function() {
  return Shen.simple_error(("error: the following variables are free in " + Shen.call(Shen.fns["shen.app"], [Arg5839_0, (": " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.list_variables"], [Arg5839_1]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));}))}, 2, [], "shen.free_variable_warnings"];

Shen.fns["shen.list_variables"] = [Shen.type_func, function shen_user_lambda5881(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5881, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5839_0, Shen.type_cons) && Shen.empty$question$(Arg5839_0[2])))
  ? (Shen.str(Arg5839_0[1]) + ".")
  : ((Shen.is_type(Arg5839_0, Shen.type_cons))
  ? (Shen.str(Arg5839_0[1]) + (", " + Shen.call(Shen.fns["shen.list_variables"], [Arg5839_0[2]])))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.list_variables"]]);})))}, 1, [], "shen.list_variables"];

Shen.fns["shen.strip-protect"] = [Shen.type_func, function shen_user_lambda5882(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5882, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg5839_0[1], [Shen.type_symbol, "protect"]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.strip-protect"], [Arg5839_0[2][1]]);})
  : ((Shen.is_type(Arg5839_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5884(Arg5883) {
  if (Arg5883.length < 1) return [Shen.type_func, shen_user_lambda5884, 1, Arg5883];
  var Arg5883_0 = Arg5883[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.strip-protect"], [Arg5883_0]);})}, 1, [], undefined], Arg5839_0]);})
  : Arg5839_0))}, 1, [], "shen.strip-protect"];

Shen.fns["shen.linearise"] = [Shen.type_func, function shen_user_lambda5885(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5885, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[2], Shen.type_cons) && Shen.empty$question$(Arg5839_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Shen.call(Shen.fns["shen.flatten"], [Arg5839_0[1]]), Arg5839_0[1], Arg5839_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.linearise"]]);}))}, 1, [], "shen.linearise"];

Shen.fns["shen.flatten"] = [Shen.type_func, function shen_user_lambda5886(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5886, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5839_0))
  ? []
  : ((Shen.is_type(Arg5839_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["shen.flatten"], [Arg5839_0[1]]), Shen.call(Shen.fns["shen.flatten"], [Arg5839_0[2]])]);})
  : [Shen.type_cons, Arg5839_0, []]))}, 1, [], "shen.flatten"];

Shen.fns["shen.linearise_help"] = [Shen.type_func, function shen_user_lambda5887(Arg5839) {
  if (Arg5839.length < 3) return [Shen.type_func, shen_user_lambda5887, 3, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1], Arg5839_2 = Arg5839[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5839_0))
  ? [Shen.type_cons, Arg5839_1, [Shen.type_cons, Arg5839_2, []]]
  : ((Shen.is_type(Arg5839_0, Shen.type_cons))
  ? (((Shen.call(Shen.fns["variable?"], [Arg5839_0[1]]) && Shen.call(Shen.fns["element?"], [Arg5839_0[1], Arg5839_0[2]])))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [Arg5839_0[1]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg5839_0[1], [Shen.type_cons, R0, []]]], [Shen.type_cons, Arg5839_2, []]]]),
  (R0 = Shen.call(Shen.fns["shen.linearise_X"], [Arg5839_0[1], R0, Arg5839_1])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Arg5839_0[2], R0, R1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.linearise_help"], [Arg5839_0[2], Arg5839_1, Arg5839_2]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.linearise_help"]]);})))}, 3, [], "shen.linearise_help"];

Shen.fns["shen.linearise_X"] = [Shen.type_func, function shen_user_lambda5888(Arg5839) {
  if (Arg5839.length < 3) return [Shen.type_func, shen_user_lambda5888, 3, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1], Arg5839_2 = Arg5839[2];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5839_2, Arg5839_0)))
  ? Arg5839_1
  : ((Shen.is_type(Arg5839_2, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.linearise_X"], [Arg5839_0, Arg5839_1, Arg5839_2[1]])),
  ((Shen.unwind_tail(Shen.$eq$(R0, Arg5839_2[1])))
  ? [Shen.type_cons, Arg5839_2[1], Shen.call(Shen.fns["shen.linearise_X"], [Arg5839_0, Arg5839_1, Arg5839_2[2]])]
  : [Shen.type_cons, R0, Arg5839_2[2]]))
  : Arg5839_2))}, 3, [], "shen.linearise_X"];

Shen.fns["shen.aritycheck"] = [Shen.type_func, function shen_user_lambda5889(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5889, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5839_1, Shen.type_cons) && (Shen.is_type(Arg5839_1[1], Shen.type_cons) && (Shen.is_type(Arg5839_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_1[1][2][2]) && Shen.empty$question$(Arg5839_1[2]))))))
  ? (Shen.call(Shen.fns["shen.aritycheck-action"], [Arg5839_1[1][2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.aritycheck-name"], [Arg5839_0, Shen.call(Shen.fns["arity"], [Arg5839_0]), Shen.call(Shen.fns["length"], [Arg5839_1[1][1]])]);}))
  : (((Shen.is_type(Arg5839_1, Shen.type_cons) && (Shen.is_type(Arg5839_1[1], Shen.type_cons) && (Shen.is_type(Arg5839_1[1][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_1[1][2][2]) && (Shen.is_type(Arg5839_1[2], Shen.type_cons) && (Shen.is_type(Arg5839_1[2][1], Shen.type_cons) && (Shen.is_type(Arg5839_1[2][1][2], Shen.type_cons) && Shen.empty$question$(Arg5839_1[2][1][2][2])))))))))
  ? ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg5839_1[1][1]]), Shen.call(Shen.fns["length"], [Arg5839_1[2][1][1]]))))
  ? (Shen.call(Shen.fns["shen.aritycheck-action"], [Arg5839_1[1][2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.aritycheck"], [Arg5839_0, Arg5839_1[2]]);}))
  : (function() {
  return Shen.simple_error(("arity error in " + Shen.call(Shen.fns["shen.app"], [Arg5839_0, "\x0a", [Shen.type_symbol, "shen.a"]])));}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.aritycheck"]]);})))}, 2, [], "shen.aritycheck"];

Shen.fns["shen.aritycheck-name"] = [Shen.type_func, function shen_user_lambda5890(Arg5839) {
  if (Arg5839.length < 3) return [Shen.type_func, shen_user_lambda5890, 3, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1], Arg5839_2 = Arg5839[2];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg5839_1)))
  ? Arg5839_2
  : ((Shen.unwind_tail(Shen.$eq$(Arg5839_2, Arg5839_1)))
  ? Arg5839_2
  : (Shen.call(Shen.fns["shen.prhush"], [("\x0awarning: changing the arity of " + Shen.call(Shen.fns["shen.app"], [Arg5839_0, " can cause errors.\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  Arg5839_2)))}, 3, [], "shen.aritycheck-name"];

Shen.fns["shen.aritycheck-action"] = [Shen.type_func, function shen_user_lambda5891(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5891, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg5839_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.aah"], [Arg5839_0[1], Arg5839_0[2]]),
  (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5893(Arg5892) {
  if (Arg5892.length < 1) return [Shen.type_func, shen_user_lambda5893, 1, Arg5892];
  var Arg5892_0 = Arg5892[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.aritycheck-action"], [Arg5892_0]);})}, 1, [], undefined], Arg5839_0]);}))
  : [Shen.type_symbol, "shen.skip"])}, 1, [], "shen.aritycheck-action"];

Shen.fns["shen.aah"] = [Shen.type_func, function shen_user_lambda5894(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5894, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["arity"], [Arg5839_0])),
  (R1 = Shen.call(Shen.fns["length"], [Arg5839_1])),
  ((((R0 > -1) && (R1 > R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("warning: " + Shen.call(Shen.fns["shen.app"], [Arg5839_0, (" might not like " + Shen.call(Shen.fns["shen.app"], [R1, (" argument" + Shen.call(Shen.fns["shen.app"], [(((R1 > 1))
  ? "s"
  : ""), ".\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);})
  : [Shen.type_symbol, "shen.skip"]))}, 2, [], "shen.aah"];

Shen.fns["shen.abstract_rule"] = [Shen.type_func, function shen_user_lambda5895(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5895, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[2], Shen.type_cons) && Shen.empty$question$(Arg5839_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.abstraction_build"], [Arg5839_0[1], Arg5839_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.abstract_rule"]]);}))}, 1, [], "shen.abstract_rule"];

Shen.fns["shen.abstraction_build"] = [Shen.type_func, function shen_user_lambda5896(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5896, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5839_0))
  ? Arg5839_1
  : ((Shen.is_type(Arg5839_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5839_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.abstraction_build"], [Arg5839_0[2], Arg5839_1]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.abstraction_build"]]);})))}, 2, [], "shen.abstraction_build"];

Shen.fns["shen.parameters"] = [Shen.type_func, function shen_user_lambda5897(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5897, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg5839_0)))
  ? []
  : [Shen.type_cons, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]]), Shen.call(Shen.fns["shen.parameters"], [(Arg5839_0 - 1)])])}, 1, [], "shen.parameters"];

Shen.fns["shen.application_build"] = [Shen.type_func, function shen_user_lambda5898(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5898, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5839_0))
  ? Arg5839_1
  : ((Shen.is_type(Arg5839_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.application_build"], [Arg5839_0[2], [Shen.type_cons, Arg5839_1, [Shen.type_cons, Arg5839_0[1], []]]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.application_build"]]);})))}, 2, [], "shen.application_build"];

Shen.fns["shen.compile_to_kl"] = [Shen.type_func, function shen_user_lambda5899(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5899, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5839_1, Shen.type_cons) && (Shen.is_type(Arg5839_1[2], Shen.type_cons) && Shen.empty$question$(Arg5839_1[2][2]))))
  ? (Shen.call(Shen.fns["shen.store-arity"], [Arg5839_0, Shen.call(Shen.fns["length"], [Arg5839_1[1]])]),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5901(Arg5900) {
  if (Arg5900.length < 1) return [Shen.type_func, shen_user_lambda5901, 1, Arg5900];
  var Arg5900_0 = Arg5900[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.reduce"], [Arg5900_0]);})}, 1, [], undefined], Arg5839_1[2][1]])),
  (R0 = Shen.call(Shen.fns["shen.cond-expression"], [Arg5839_0, Arg5839_1[1], R0])),
  (((Shen.globals["shen.*optimise*"]))
  ? (R1 = Shen.call(Shen.fns["shen.typextable"], [Shen.call(Shen.fns["shen.get-type"], [Arg5839_0]), Arg5839_1[1]]))
  : (R1 = [Shen.type_symbol, "shen.skip"])),
  (((Shen.globals["shen.*optimise*"]))
  ? (R1 = Shen.call(Shen.fns["shen.assign-types"], [Arg5839_1[1], R1, R0]))
  : (R1 = R0)),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg5839_0, [Shen.type_cons, Arg5839_1[1], [Shen.type_cons, R1, []]]]]),
  R1)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.compile_to_kl"]]);}))}, 2, [], "shen.compile_to_kl"];

Shen.fns["shen.get-type"] = [Shen.type_func, function shen_user_lambda5902(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5902, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg5839_0, Shen.type_cons))
  ? [Shen.type_symbol, "shen.skip"]
  : ((R0 = Shen.call(Shen.fns["assoc"], [Arg5839_0, (Shen.globals["shen.*signedfuncs*"])])),
  ((Shen.empty$question$(R0))
  ? [Shen.type_symbol, "shen.skip"]
  : R0[2])))}, 1, [], "shen.get-type"];

Shen.fns["shen.typextable"] = [Shen.type_func, function shen_user_lambda5903(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5903, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg5839_0[2][1])) && (Shen.is_type(Arg5839_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[2][2][2]) && Shen.is_type(Arg5839_1, Shen.type_cons)))))))
  ? ((Shen.call(Shen.fns["variable?"], [Arg5839_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.typextable"], [Arg5839_0[2][2][1], Arg5839_1[2]]);})
  : [Shen.type_cons, [Shen.type_cons, Arg5839_1[1], Arg5839_0[1]], Shen.call(Shen.fns["shen.typextable"], [Arg5839_0[2][2][1], Arg5839_1[2]])])
  : [])}, 2, [], "shen.typextable"];

Shen.fns["shen.assign-types"] = [Shen.type_func, function shen_user_lambda5904(Arg5839) {
  if (Arg5839.length < 3) return [Shen.type_func, shen_user_lambda5904, 3, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1], Arg5839_2 = Arg5839[2];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5839_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg5839_2[1])) && (Shen.is_type(Arg5839_2[2], Shen.type_cons) && (Shen.is_type(Arg5839_2[2][2], Shen.type_cons) && (Shen.is_type(Arg5839_2[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg5839_2[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg5839_2[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [Arg5839_0, Arg5839_1, Arg5839_2[2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [[Shen.type_cons, Arg5839_2[2][1], Arg5839_0], Arg5839_1, Arg5839_2[2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg5839_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], Arg5839_2[1])) && (Shen.is_type(Arg5839_2[2], Shen.type_cons) && (Shen.is_type(Arg5839_2[2][2], Shen.type_cons) && Shen.empty$question$(Arg5839_2[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg5839_2[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [[Shen.type_cons, Arg5839_2[2][1], Arg5839_0], Arg5839_1, Arg5839_2[2][2][1]]), []]]]
  : (((Shen.is_type(Arg5839_2, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cond"], Arg5839_2[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "cond"], Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5906(Arg5905) {
  if (Arg5905.length < 3) return [Shen.type_func, shen_user_lambda5906, 3, Arg5905];
  var Arg5905_0 = Arg5905[0], Arg5905_1 = Arg5905[1], Arg5905_2 = Arg5905[2];
  return [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [Arg5905_0, Arg5905_1, Arg5905_2[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.assign-types"], [Arg5905_0, Arg5905_1, Arg5905_2[2][1]]), []]]}, 3, [Arg5839_0, Arg5839_1], undefined], Arg5839_2[2]])]
  : ((Shen.is_type(Arg5839_2, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.typextable"], [Shen.call(Shen.fns["shen.get-type"], [Arg5839_2[1]]), Arg5839_2[2]])),
  [Shen.type_cons, Arg5839_2[1], Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5908(Arg5907) {
  if (Arg5907.length < 4) return [Shen.type_func, shen_user_lambda5908, 4, Arg5907];
  var Arg5907_0 = Arg5907[0], Arg5907_1 = Arg5907[1], Arg5907_2 = Arg5907[2], Arg5907_3 = Arg5907[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.assign-types"], [Arg5907_0, Shen.call(Shen.fns["append"], [Arg5907_1, Arg5907_2]), Arg5907_3]);})}, 4, [Arg5839_0, Arg5839_1, R0], undefined], Arg5839_2[2]])])
  : ((R0 = Shen.call(Shen.fns["assoc"], [Arg5839_2, Arg5839_1])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg5839_2, [Shen.type_cons, R0[2], []]]]
  : ((Shen.call(Shen.fns["element?"], [Arg5839_2, Arg5839_0]))
  ? Arg5839_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.atom-type"], [Arg5839_2]);}))))))))}, 3, [], "shen.assign-types"];

Shen.fns["shen.atom-type"] = [Shen.type_func, function shen_user_lambda5909(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5909, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return (((typeof(Arg5839_0) == 'string'))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg5839_0, [Shen.type_cons, [Shen.type_symbol, "string"], []]]]
  : (((typeof(Arg5839_0) == 'number'))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg5839_0, [Shen.type_cons, [Shen.type_symbol, "number"], []]]]
  : ((Shen.boolean$question$(Arg5839_0))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg5839_0, [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]
  : ((Shen.is_type(Arg5839_0, Shen.type_symbol))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Arg5839_0, [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]
  : Arg5839_0))))}, 1, [], "shen.atom-type"];

Shen.fns["shen.store-arity"] = [Shen.type_func, function shen_user_lambda5910(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5910, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_symbol, "shen.skip"]
  : (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg5839_0, [Shen.type_symbol, "arity"], Arg5839_1, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.store-arity"];

Shen.fns["shen.reduce"] = [Shen.type_func, function shen_user_lambda5911(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5911, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return ((Shen.globals["shen.*teststack*"] = []),
  (R0 = Shen.call(Shen.fns["shen.reduce_help"], [Arg5839_0])),
  [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "shen.tests"], Shen.call(Shen.fns["reverse"], [(Shen.globals["shen.*teststack*"])])]], [Shen.type_cons, R0, []]])}, 1, [], "shen.reduce"];

Shen.fns["shen.reduce_help"] = [Shen.type_func, function shen_user_lambda5912(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5912, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5839_0[1][1])) && (Shen.is_type(Arg5839_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg5839_0[1][2][1][1])) && (Shen.is_type(Arg5839_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[1][2][1][2][2][2]) && (Shen.is_type(Arg5839_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[1][2][2][2]) && (Shen.is_type(Arg5839_0[2], Shen.type_cons) && Shen.empty$question$(Arg5839_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "cons?"], Arg5839_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5839_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5839_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg5839_0[2][1], Arg5839_0[1][2][1], Arg5839_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], Arg5839_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], Arg5839_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5839_0[1][1])) && (Shen.is_type(Arg5839_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], Arg5839_0[1][2][1][1])) && (Shen.is_type(Arg5839_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[1][2][1][2][2][2]) && (Shen.is_type(Arg5839_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[1][2][2][2]) && (Shen.is_type(Arg5839_0[2], Shen.type_cons) && Shen.empty$question$(Arg5839_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "tuple?"], Arg5839_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5839_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5839_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg5839_0[2][1], Arg5839_0[1][2][1], Arg5839_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fst"], Arg5839_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "snd"], Arg5839_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5839_0[1][1])) && (Shen.is_type(Arg5839_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], Arg5839_0[1][2][1][1])) && (Shen.is_type(Arg5839_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[1][2][1][2][2][2]) && (Shen.is_type(Arg5839_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[1][2][2][2]) && (Shen.is_type(Arg5839_0[2], Shen.type_cons) && Shen.empty$question$(Arg5839_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "shen.+vector?"], Arg5839_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5839_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5839_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg5839_0[2][1], Arg5839_0[1][2][1], Arg5839_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hdv"], Arg5839_0[2]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tlv"], Arg5839_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5839_0[1][1])) && (Shen.is_type(Arg5839_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg5839_0[1][2][1][1])) && (Shen.is_type(Arg5839_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[1][2][1][2][2][2]) && (Shen.is_type(Arg5839_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[1][2][2][2]) && (Shen.is_type(Arg5839_0[2], Shen.type_cons) && Shen.empty$question$(Arg5839_0[2][2]))))))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "shen.+string?"], Arg5839_0[2]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5839_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, Arg5839_0[1][2][1][2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg5839_0[2][1], Arg5839_0[1][2][1], Arg5839_0[1][2][2][1]]), []]]], []]]]),
  (R0 = [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, Arg5839_0[2][1], [Shen.type_cons, 0, []]]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tlstr"], Arg5839_0[2]], []]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [R0]);}))
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5839_0[1][1])) && (Shen.is_type(Arg5839_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[1][2][2][2]) && (Shen.is_type(Arg5839_0[2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[2][2]) && (!Shen.call(Shen.fns["variable?"], [Arg5839_0[1][2][1]])))))))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [[Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg5839_0[1][2][1], Arg5839_0[2]]]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Arg5839_0[1][2][2][1]]);}))
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5839_0[1][1])) && (Shen.is_type(Arg5839_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[1][2][2][2]) && (Shen.is_type(Arg5839_0[2], Shen.type_cons) && Shen.empty$question$(Arg5839_0[2][2])))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Shen.call(Shen.fns["shen.ebr"], [Arg5839_0[2][1], Arg5839_0[1][2][1], Arg5839_0[1][2][2][1]])]);})
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg5839_0[1])) && (Shen.is_type(Arg5839_0[2], Shen.type_cons) && (Shen.is_type(Arg5839_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5839_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["shen.add_test"], [Arg5839_0[2][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [Arg5839_0[2][2][1]]);}))
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[2], Shen.type_cons) && Shen.empty$question$(Arg5839_0[2][2]))))
  ? ((R0 = Shen.call(Shen.fns["shen.reduce_help"], [Arg5839_0[1]])),
  ((Shen.unwind_tail(Shen.$eq$(Arg5839_0[1], R0)))
  ? Arg5839_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.reduce_help"], [[Shen.type_cons, R0, Arg5839_0[2]]]);})))
  : Arg5839_0))))))))}, 1, [], "shen.reduce_help"];

Shen.fns["shen.+string?"] = [Shen.type_func, function shen_user_lambda5913(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5913, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$("", Arg5839_0)))
  ? false
  : (typeof(Arg5839_0) == 'string'))}, 1, [], "shen.+string?"];

Shen.fns["shen.+vector"] = [Shen.type_func, function shen_user_lambda5914(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5914, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5839_0, Shen.vector(0))))
  ? false
  : (function() {
  return Shen.vector$question$(Arg5839_0);}))}, 1, [], "shen.+vector"];

Shen.fns["shen.ebr"] = [Shen.type_func, function shen_user_lambda5915(Arg5839) {
  if (Arg5839.length < 3) return [Shen.type_func, shen_user_lambda5915, 3, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1], Arg5839_2 = Arg5839[2];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5839_2, Arg5839_1)))
  ? Arg5839_0
  : (((Shen.is_type(Arg5839_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg5839_2[1])) && (Shen.is_type(Arg5839_2[2], Shen.type_cons) && (Shen.is_type(Arg5839_2[2][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_2[2][2][2]) && (Shen.call(Shen.fns["occurrences"], [Arg5839_1, Arg5839_2[2][1]]) > 0)))))))
  ? Arg5839_2
  : (((Shen.is_type(Arg5839_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg5839_2[1])) && (Shen.is_type(Arg5839_2[2], Shen.type_cons) && (Shen.is_type(Arg5839_2[2][2], Shen.type_cons) && (Shen.is_type(Arg5839_2[2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_2[2][2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg5839_2[2][1], Arg5839_1)))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg5839_2[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg5839_0, Arg5839_2[2][1], Arg5839_2[2][2][1]]), Arg5839_2[2][2][2]]]]
  : ((Shen.is_type(Arg5839_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.ebr"], [Arg5839_0, Arg5839_1, Arg5839_2[1]]), Shen.call(Shen.fns["shen.ebr"], [Arg5839_0, Arg5839_1, Arg5839_2[2]])]
  : Arg5839_2))))}, 3, [], "shen.ebr"];

Shen.fns["shen.add_test"] = [Shen.type_func, function shen_user_lambda5916(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5916, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return (Shen.globals["shen.*teststack*"] = [Shen.type_cons, Arg5839_0, (Shen.globals["shen.*teststack*"])])}, 1, [], "shen.add_test"];

Shen.fns["shen.cond-expression"] = [Shen.type_func, function shen_user_lambda5917(Arg5839) {
  if (Arg5839.length < 3) return [Shen.type_func, shen_user_lambda5917, 3, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1], Arg5839_2 = Arg5839[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.err-condition"], [Arg5839_0])),
  (R0 = Shen.call(Shen.fns["shen.case-form"], [Arg5839_2, R0])),
  (R0 = Shen.call(Shen.fns["shen.encode-choices"], [R0, Arg5839_0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cond-form"], [R0]);}))}, 3, [], "shen.cond-expression"];

Shen.fns["shen.cond-form"] = [Shen.type_func, function shen_user_lambda5918(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5918, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5839_0[1][1])) && (Shen.is_type(Arg5839_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5839_0[1][2][2]))))))
  ? Arg5839_0[1][2][1]
  : [Shen.type_cons, [Shen.type_symbol, "cond"], Arg5839_0])}, 1, [], "shen.cond-form"];

Shen.fns["shen.encode-choices"] = [Shen.type_func, function shen_user_lambda5919(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5919, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5839_0))
  ? []
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5839_0[1][1])) && (Shen.is_type(Arg5839_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg5839_0[1][2][1][1])) && (Shen.is_type(Arg5839_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[1][2][1][2][2]) && (Shen.empty$question$(Arg5839_0[1][2][2]) && Shen.empty$question$(Arg5839_0[2])))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg5839_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, (((Shen.globals["shen.*installing-kl*"]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.sys-error"], [Shen.type_cons, Arg5839_1, []]]
  : [Shen.type_cons, [Shen.type_symbol, "shen.f_error"], [Shen.type_cons, Arg5839_1, []]]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg5839_0[1][1])) && (Shen.is_type(Arg5839_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg5839_0[1][2][1][1])) && (Shen.is_type(Arg5839_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[1][2][1][2][2]) && Shen.empty$question$(Arg5839_0[1][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg5839_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, Shen.call(Shen.fns["shen.cond-form"], [Shen.call(Shen.fns["shen.encode-choices"], [Arg5839_0[2], Arg5839_1])]), [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[1], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg5839_0[1][2][1][1])) && (Shen.is_type(Arg5839_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[1][2][1][2][2]) && Shen.empty$question$(Arg5839_0[1][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Shen.call(Shen.fns["shen.cond-form"], [Shen.call(Shen.fns["shen.encode-choices"], [Arg5839_0[2], Arg5839_1])]), []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg5839_0[1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg5839_0[1][2][1][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], []]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Freeze"], []]], []]]]], []]]]], []]], []]
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[1], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5839_0[1][2][2])))))
  ? [Shen.type_cons, Arg5839_0[1], Shen.call(Shen.fns["shen.encode-choices"], [Arg5839_0[2], Arg5839_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.encode-choices"]]);}))))))}, 2, [], "shen.encode-choices"];

Shen.fns["shen.case-form"] = [Shen.type_func, function shen_user_lambda5920(Arg5839) {
  if (Arg5839.length < 2) return [Shen.type_func, shen_user_lambda5920, 2, Arg5839];
  var Arg5839_0 = Arg5839[0], Arg5839_1 = Arg5839[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5839_0))
  ? [Shen.type_cons, Arg5839_1, []]
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[1], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg5839_0[1][1][1])) && (Shen.is_type(Arg5839_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg5839_0[1][1][2][1])) && (Shen.empty$question$(Arg5839_0[1][1][2][2]) && (Shen.is_type(Arg5839_0[1][2], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], Arg5839_0[1][2][1][1])) && (Shen.is_type(Arg5839_0[1][2][1][2], Shen.type_cons) && (Shen.empty$question$(Arg5839_0[1][2][1][2][2]) && Shen.empty$question$(Arg5839_0[1][2][2]))))))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, Arg5839_0[1][2]], Shen.call(Shen.fns["shen.case-form"], [Arg5839_0[2], Arg5839_1])]
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[1], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg5839_0[1][1][1])) && (Shen.is_type(Arg5839_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg5839_0[1][1][2][1])) && (Shen.empty$question$(Arg5839_0[1][1][2][2]) && (Shen.is_type(Arg5839_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5839_0[1][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_cons, true, Arg5839_0[1][2]], []]
  : (((Shen.is_type(Arg5839_0, Shen.type_cons) && (Shen.is_type(Arg5839_0[1], Shen.type_cons) && (Shen.is_type(Arg5839_0[1][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg5839_0[1][1][1])) && (Shen.is_type(Arg5839_0[1][1][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tests"], Arg5839_0[1][1][2][1])) && (Shen.is_type(Arg5839_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg5839_0[1][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.embed-and"], [Arg5839_0[1][1][2][2]]), Arg5839_0[1][2]], Shen.call(Shen.fns["shen.case-form"], [Arg5839_0[2], Arg5839_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.case-form"]]);})))))}, 2, [], "shen.case-form"];

Shen.fns["shen.embed-and"] = [Shen.type_func, function shen_user_lambda5921(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5921, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5839_0, Shen.type_cons) && Shen.empty$question$(Arg5839_0[2])))
  ? Arg5839_0[1]
  : ((Shen.is_type(Arg5839_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, Arg5839_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.embed-and"], [Arg5839_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.embed-and"]]);})))}, 1, [], "shen.embed-and"];

Shen.fns["shen.err-condition"] = [Shen.type_func, function shen_user_lambda5922(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5922, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return [Shen.type_cons, true, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.f_error"], [Shen.type_cons, Arg5839_0, []]], []]]}, 1, [], "shen.err-condition"];

Shen.fns["shen.sys-error"] = [Shen.type_func, function shen_user_lambda5923(Arg5839) {
  if (Arg5839.length < 1) return [Shen.type_func, shen_user_lambda5923, 1, Arg5839];
  var Arg5839_0 = Arg5839[0];
  var R0, R1, R2;
  return (function() {
  return Shen.simple_error(("system function " + Shen.call(Shen.fns["shen.app"], [Arg5839_0, ": unexpected argument\x0a", [Shen.type_symbol, "shen.a"]])));})}, 1, [], "shen.sys-error"];

Shen.call_toplevel(function js$dot$shen_js_toplevel5924(Arg5839) {
  if (Arg5839.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel5924, 0, Arg5839];
  var R0, R1, R2;
  return []});


"Copyright (c) 2015, Mark Tarver\x0d\x0a\x0d\x0aAll rights reserved.\x0d\x0a\x0d\x0aRedistribution and use in source and binary forms, with or without\x0d\x0amodification, are permitted provided that the following conditions are met:\x0d\x0a1. Redistributions of source code must retain the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer.\x0d\x0a2. Redistributions in binary form must reproduce the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer in the\x0d\x0a   documentation and/or other materials provided with the distribution.\x0d\x0a3. The name of Mark Tarver may not be used to endorse or promote products\x0d\x0a   derived from this software without specific prior written permission.\x0d\x0a\x0d\x0aTHIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY\x0d\x0aEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\x0d\x0aWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\x0d\x0aDISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY\x0d\x0aDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\x0d\x0a(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\x0d\x0aLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\x0d\x0aON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0d\x0a(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\x0d\x0aSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";


Shen.fns["eval"] = [Shen.type_func, function shen_user_lambda5953(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5953, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda5955(Arg5954) {
  if (Arg5954.length < 1) return [Shen.type_func, shen_user_lambda5955, 1, Arg5954];
  var Arg5954_0 = Arg5954[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg5954_0]);})}, 1, [], undefined], Arg5952_0])),
  ((Shen.call(Shen.fns["shen.packaged?"], [R0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5957(Arg5956) {
  if (Arg5956.length < 1) return [Shen.type_func, shen_user_lambda5957, 1, Arg5956];
  var Arg5956_0 = Arg5956[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.eval-without-macros"], [Arg5956_0]);})}, 1, [], undefined], Shen.call(Shen.fns["shen.package-contents"], [R0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.eval-without-macros"], [R0]);})))}, 1, [], "eval"];

Shen.fns["shen.eval-without-macros"] = [Shen.type_func, function shen_user_lambda5958(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5958, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0;
  return (function() {
  return Shen.eval_kl(Shen.call(Shen.fns["shen.elim-def"], [Shen.call(Shen.fns["shen.proc-input+"], [Arg5952_0])]));})}, 1, [], "shen.eval-without-macros"];

Shen.fns["shen.proc-input+"] = [Shen.type_func, function shen_user_lambda5959(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5959, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0;
  return (((Shen.is_type(Arg5952_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], Arg5952_0[1])) && (Shen.is_type(Arg5952_0[2], Shen.type_cons) && (Shen.is_type(Arg5952_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5952_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg5952_0[2][1]]), Arg5952_0[2][2]]]
  : (((Shen.is_type(Arg5952_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.read+"], Arg5952_0[1])) && (Shen.is_type(Arg5952_0[2], Shen.type_cons) && (Shen.is_type(Arg5952_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg5952_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.read+"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg5952_0[2][1]]), Arg5952_0[2][2]]]
  : ((Shen.is_type(Arg5952_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5961(Arg5960) {
  if (Arg5960.length < 1) return [Shen.type_func, shen_user_lambda5961, 1, Arg5960];
  var Arg5960_0 = Arg5960[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.proc-input+"], [Arg5960_0]);})}, 1, [], undefined], Arg5952_0]);})
  : Arg5952_0)))}, 1, [], "shen.proc-input+"];

Shen.fns["shen.elim-def"] = [Shen.type_func, function shen_user_lambda5962(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5962, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0;
  return (((Shen.is_type(Arg5952_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], Arg5952_0[1])) && Shen.is_type(Arg5952_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.shen->kl"], [Arg5952_0[2][1], Arg5952_0[2][2]]);})
  : (((Shen.is_type(Arg5952_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defmacro"], Arg5952_0[1])) && Shen.is_type(Arg5952_0[2], Shen.type_cons))))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "X"], []]]]),
  (R0 = Shen.call(Shen.fns["shen.elim-def"], [[Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg5952_0[2][1], Shen.call(Shen.fns["append"], [Arg5952_0[2][2], R0])]]])),
  Shen.call(Shen.fns["shen.add-macro"], [Arg5952_0[2][1]]),
  R0)
  : (((Shen.is_type(Arg5952_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg5952_0[1])) && Shen.is_type(Arg5952_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.elim-def"], [Shen.call(Shen.fns["shen.yacc"], [Arg5952_0])]);})
  : ((Shen.is_type(Arg5952_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5964(Arg5963) {
  if (Arg5963.length < 1) return [Shen.type_func, shen_user_lambda5964, 1, Arg5963];
  var Arg5963_0 = Arg5963[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.elim-def"], [Arg5963_0]);})}, 1, [], undefined], Arg5952_0]);})
  : Arg5952_0))))}, 1, [], "shen.elim-def"];

Shen.fns["shen.add-macro"] = [Shen.type_func, function shen_user_lambda5965(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5965, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return ((R0 = (Shen.globals["shen.*macroreg*"])),
  (R1 = (Shen.globals["shen.*macroreg*"] = Shen.call(Shen.fns["adjoin"], [Arg5952_0, (Shen.globals["shen.*macroreg*"])]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, R1)))
  ? [Shen.type_symbol, "shen.skip"]
  : (Shen.globals["*macros*"] = [Shen.type_cons, [Shen.type_func, function shen_user_lambda5967(Arg5966) {
  if (Arg5966.length < 2) return [Shen.type_func, shen_user_lambda5967, 2, Arg5966];
  var Arg5966_0 = Arg5966[0], Arg5966_1 = Arg5966[1];
  return (function() {
  return Shen.call_tail(Arg5966_0, [Arg5966_1]);})}, 2, [Arg5952_0], undefined], (Shen.globals["*macros*"])])))}, 1, [], "shen.add-macro"];

Shen.fns["shen.packaged?"] = [Shen.type_func, function shen_user_lambda5968(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5968, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return (((Shen.is_type(Arg5952_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg5952_0[1])) && (Shen.is_type(Arg5952_0[2], Shen.type_cons) && Shen.is_type(Arg5952_0[2][2], Shen.type_cons)))))
  ? true
  : false)}, 1, [], "shen.packaged?"];

Shen.fns["external"] = [Shen.type_func, function shen_user_lambda5969(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5969, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda5971(Arg5970) {
  if (Arg5970.length < 1) return [Shen.type_func, shen_user_lambda5971, 1, Arg5970];
  var Arg5970_0 = Arg5970[0];
  return (function() {
  return Shen.call_tail(Shen.fns["get"], [Arg5970_0, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])]);})}, 1, [Arg5952_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda5973(Arg5972) {
  if (Arg5972.length < 2) return [Shen.type_func, shen_user_lambda5973, 2, Arg5972];
  var Arg5972_0 = Arg5972[0], Arg5972_1 = Arg5972[1];
  return (function() {
  return Shen.simple_error(("package " + Shen.call(Shen.fns["shen.app"], [Arg5972_0, " has not been used.\x0a", [Shen.type_symbol, "shen.a"]])));})}, 2, [Arg5952_0], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "external"];

Shen.fns["shen.package-contents"] = [Shen.type_func, function shen_user_lambda5974(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5974, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return (((Shen.is_type(Arg5952_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg5952_0[1])) && (Shen.is_type(Arg5952_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "null"], Arg5952_0[2][1])) && Shen.is_type(Arg5952_0[2][2], Shen.type_cons))))))
  ? Arg5952_0[2][2][2]
  : (((Shen.is_type(Arg5952_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg5952_0[1])) && (Shen.is_type(Arg5952_0[2], Shen.type_cons) && Shen.is_type(Arg5952_0[2][2], Shen.type_cons)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.packageh"], [Arg5952_0[2][1], Arg5952_0[2][2][1], Arg5952_0[2][2][2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.package-contents"]]);})))}, 1, [], "shen.package-contents"];

Shen.fns["shen.walk"] = [Shen.type_func, function shen_user_lambda5975(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda5975, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1;
  return ((Shen.is_type(Arg5952_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Arg5952_0, [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda5977(Arg5976) {
  if (Arg5976.length < 2) return [Shen.type_func, shen_user_lambda5977, 2, Arg5976];
  var Arg5976_0 = Arg5976[0], Arg5976_1 = Arg5976[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.walk"], [Arg5976_0, Arg5976_1]);})}, 2, [Arg5952_0], undefined], Arg5952_1])]);})
  : (function() {
  return Shen.call_tail(Arg5952_0, [Arg5952_1]);}))}, 2, [], "shen.walk"];

Shen.fns["compile"] = [Shen.type_func, function shen_user_lambda5978(Arg5952) {
  if (Arg5952.length < 3) return [Shen.type_func, shen_user_lambda5978, 3, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2];
  var R0, R1;
  return ((R0 = Shen.call(Arg5952_0, [[Shen.type_cons, Arg5952_1, [Shen.type_cons, [], []]]])),
  (((Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0)) || (!Shen.empty$question$(R0[1]))))
  ? (function() {
  return Shen.call_tail(Arg5952_2, [R0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.hdtl"], [R0]);})))}, 3, [], "compile"];

Shen.fns["fail-if"] = [Shen.type_func, function shen_user_lambda5979(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda5979, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1;
  return ((Shen.call(Arg5952_0, [Arg5952_1]))
  ? Shen.fail_obj
  : Arg5952_1)}, 2, [], "fail-if"];

Shen.fns["@s"] = [Shen.type_func, function shen_user_lambda5980(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda5980, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1;
  return (Arg5952_0 + Arg5952_1)}, 2, [], "@s"];

Shen.fns["tc?"] = [Shen.type_func, function shen_user_lambda5981(Arg5952) {
  if (Arg5952.length < 0) return [Shen.type_func, shen_user_lambda5981, 0, Arg5952];
  var R0, R1;
  return (Shen.globals["shen.*tc*"])}, 0, [], "tc?"];

Shen.fns["ps"] = [Shen.type_func, function shen_user_lambda5982(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5982, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda5984(Arg5983) {
  if (Arg5983.length < 1) return [Shen.type_func, shen_user_lambda5984, 1, Arg5983];
  var Arg5983_0 = Arg5983[0];
  return (function() {
  return Shen.call_tail(Shen.fns["get"], [Arg5983_0, [Shen.type_symbol, "shen.source"], (Shen.globals["*property-vector*"])]);})}, 1, [Arg5952_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda5986(Arg5985) {
  if (Arg5985.length < 2) return [Shen.type_func, shen_user_lambda5986, 2, Arg5985];
  var Arg5985_0 = Arg5985[0], Arg5985_1 = Arg5985[1];
  return (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg5985_0, " not found.\x0a", [Shen.type_symbol, "shen.a"]]));})}, 2, [Arg5952_0], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "ps"];

Shen.fns["stinput"] = [Shen.type_func, function shen_user_lambda5987(Arg5952) {
  if (Arg5952.length < 0) return [Shen.type_func, shen_user_lambda5987, 0, Arg5952];
  var R0, R1;
  return (Shen.globals["*stinput*"])}, 0, [], "stinput"];

Shen.fns["shen.+vector?"] = [Shen.type_func, function shen_user_lambda5988(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5988, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return (Shen.absvector$question$(Arg5952_0) && (Shen.absvector_ref(Arg5952_0, 0) > 0))}, 1, [], "shen.+vector?"];


Shen.fns["shen.fillvector"] = [Shen.type_func, function shen_user_lambda5989(Arg5952) {
  if (Arg5952.length < 4) return [Shen.type_func, shen_user_lambda5989, 4, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2], Arg5952_3 = Arg5952[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5952_2, Arg5952_1)))
  ? Shen.absvector_set(Arg5952_0, Arg5952_2, Arg5952_3)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.fillvector"], [Shen.absvector_set(Arg5952_0, Arg5952_1, Arg5952_3), (1 + Arg5952_1), Arg5952_2, Arg5952_3]);}))}, 4, [], "shen.fillvector"];


Shen.fns["vector->"] = [Shen.type_func, function shen_user_lambda5990(Arg5952) {
  if (Arg5952.length < 3) return [Shen.type_func, shen_user_lambda5990, 3, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5952_1, 0)))
  ? (function() {
  return Shen.simple_error("cannot access 0th element of a vector\x0a");})
  : Shen.absvector_set(Arg5952_0, Arg5952_1, Arg5952_2))}, 3, [], "vector->"];

Shen.fns["<-vector"] = [Shen.type_func, function shen_user_lambda5991(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda5991, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5952_1, 0)))
  ? (function() {
  return Shen.simple_error("cannot access 0th element of a vector\x0a");})
  : ((R0 = Shen.absvector_ref(Arg5952_0, Arg5952_1)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (function() {
  return Shen.simple_error("vector element not found\x0a");})
  : R0)))}, 2, [], "<-vector"];

Shen.fns["shen.posint?"] = [Shen.type_func, function shen_user_lambda5992(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5992, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return (Shen.call(Shen.fns["integer?"], [Arg5952_0]) && (Arg5952_0 >= 0))}, 1, [], "shen.posint?"];

Shen.fns["limit"] = [Shen.type_func, function shen_user_lambda5993(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5993, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return Shen.absvector_ref(Arg5952_0, 0)}, 1, [], "limit"];


Shen.fns["shen.analyse-symbol?"] = [Shen.type_func, function shen_user_lambda5994(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5994, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return ((Shen.call(Shen.fns["shen.+string?"], [Arg5952_0]))
  ? (Shen.call(Shen.fns["shen.alpha?"], [Arg5952_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg5952_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.analyse-symbol?"]]);}))}, 1, [], "shen.analyse-symbol?"];

Shen.fns["shen.alpha?"] = [Shen.type_func, function shen_user_lambda5995(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5995, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5952_0, [Shen.type_cons, "A", [Shen.type_cons, "B", [Shen.type_cons, "C", [Shen.type_cons, "D", [Shen.type_cons, "E", [Shen.type_cons, "F", [Shen.type_cons, "G", [Shen.type_cons, "H", [Shen.type_cons, "I", [Shen.type_cons, "J", [Shen.type_cons, "K", [Shen.type_cons, "L", [Shen.type_cons, "M", [Shen.type_cons, "N", [Shen.type_cons, "O", [Shen.type_cons, "P", [Shen.type_cons, "Q", [Shen.type_cons, "R", [Shen.type_cons, "S", [Shen.type_cons, "T", [Shen.type_cons, "U", [Shen.type_cons, "V", [Shen.type_cons, "W", [Shen.type_cons, "X", [Shen.type_cons, "Y", [Shen.type_cons, "Z", [Shen.type_cons, "a", [Shen.type_cons, "b", [Shen.type_cons, "c", [Shen.type_cons, "d", [Shen.type_cons, "e", [Shen.type_cons, "f", [Shen.type_cons, "g", [Shen.type_cons, "h", [Shen.type_cons, "i", [Shen.type_cons, "j", [Shen.type_cons, "k", [Shen.type_cons, "l", [Shen.type_cons, "m", [Shen.type_cons, "n", [Shen.type_cons, "o", [Shen.type_cons, "p", [Shen.type_cons, "q", [Shen.type_cons, "r", [Shen.type_cons, "s", [Shen.type_cons, "t", [Shen.type_cons, "u", [Shen.type_cons, "v", [Shen.type_cons, "w", [Shen.type_cons, "x", [Shen.type_cons, "y", [Shen.type_cons, "z", [Shen.type_cons, "=", [Shen.type_cons, "*", [Shen.type_cons, "/", [Shen.type_cons, "+", [Shen.type_cons, "-", [Shen.type_cons, "_", [Shen.type_cons, "?", [Shen.type_cons, "$", [Shen.type_cons, "!", [Shen.type_cons, "@", [Shen.type_cons, "~", [Shen.type_cons, ">", [Shen.type_cons, "<", [Shen.type_cons, "&", [Shen.type_cons, "%", [Shen.type_cons, "{", [Shen.type_cons, "}", [Shen.type_cons, ":", [Shen.type_cons, ";", [Shen.type_cons, "`", [Shen.type_cons, "#", [Shen.type_cons, "'", [Shen.type_cons, ".", []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]);})}, 1, [], "shen.alpha?"];

Shen.fns["shen.alphanums?"] = [Shen.type_func, function shen_user_lambda5996(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5996, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$("", Arg5952_0)))
  ? true
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg5952_0]))
  ? (Shen.call(Shen.fns["shen.alphanum?"], [Arg5952_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg5952_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.alphanums?"]]);})))}, 1, [], "shen.alphanums?"];

Shen.fns["shen.alphanum?"] = [Shen.type_func, function shen_user_lambda5997(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5997, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return (Shen.call(Shen.fns["shen.alpha?"], [Arg5952_0]) || Shen.call(Shen.fns["shen.digit?"], [Arg5952_0]))}, 1, [], "shen.alphanum?"];

Shen.fns["shen.digit?"] = [Shen.type_func, function shen_user_lambda5998(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5998, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5952_0, [Shen.type_cons, "1", [Shen.type_cons, "2", [Shen.type_cons, "3", [Shen.type_cons, "4", [Shen.type_cons, "5", [Shen.type_cons, "6", [Shen.type_cons, "7", [Shen.type_cons, "8", [Shen.type_cons, "9", [Shen.type_cons, "0", []]]]]]]]]]]]);})}, 1, [], "shen.digit?"];

Shen.fns["variable?"] = [Shen.type_func, function shen_user_lambda5999(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda5999, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return (((Shen.boolean$question$(Arg5952_0) || ((typeof(Arg5952_0) == 'number') || (typeof(Arg5952_0) == 'string'))))
  ? false
  : ((R0 = [Shen.type_func, function shen_user_lambda6001(Arg6000) {
  if (Arg6000.length < 1) return [Shen.type_func, shen_user_lambda6001, 1, Arg6000];
  var Arg6000_0 = Arg6000[0];
  var R0;
  return ((R0 = Shen.str(Arg6000_0)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.analyse-variable?"], [R0]);}))}, 1, [Arg5952_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6003(Arg6002) {
  if (Arg6002.length < 1) return [Shen.type_func, shen_user_lambda6003, 1, Arg6002];
  var Arg6002_0 = Arg6002[0];
  return false}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);})))}, 1, [], "variable?"];

Shen.fns["shen.analyse-variable?"] = [Shen.type_func, function shen_user_lambda6004(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6004, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return ((Shen.call(Shen.fns["shen.+string?"], [Arg5952_0]))
  ? (Shen.call(Shen.fns["shen.uppercase?"], [Arg5952_0[0]]) && Shen.call(Shen.fns["shen.alphanums?"], [Shen.tlstr(Arg5952_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.analyse-variable?"]]);}))}, 1, [], "shen.analyse-variable?"];

Shen.fns["shen.uppercase?"] = [Shen.type_func, function shen_user_lambda6005(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6005, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5952_0, [Shen.type_cons, "A", [Shen.type_cons, "B", [Shen.type_cons, "C", [Shen.type_cons, "D", [Shen.type_cons, "E", [Shen.type_cons, "F", [Shen.type_cons, "G", [Shen.type_cons, "H", [Shen.type_cons, "I", [Shen.type_cons, "J", [Shen.type_cons, "K", [Shen.type_cons, "L", [Shen.type_cons, "M", [Shen.type_cons, "N", [Shen.type_cons, "O", [Shen.type_cons, "P", [Shen.type_cons, "Q", [Shen.type_cons, "R", [Shen.type_cons, "S", [Shen.type_cons, "T", [Shen.type_cons, "U", [Shen.type_cons, "V", [Shen.type_cons, "W", [Shen.type_cons, "X", [Shen.type_cons, "Y", [Shen.type_cons, "Z", []]]]]]]]]]]]]]]]]]]]]]]]]]]]);})}, 1, [], "shen.uppercase?"];

Shen.fns["gensym"] = [Shen.type_func, function shen_user_lambda6006(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6006, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["concat"], [Arg5952_0, (Shen.globals["shen.*gensym*"] = (1 + (Shen.globals["shen.*gensym*"])))]);})}, 1, [], "gensym"];

Shen.fns["concat"] = [Shen.type_func, function shen_user_lambda6007(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6007, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1;
  return (function() {
  return Shen.intern((Shen.str(Arg5952_0) + Shen.str(Arg5952_1)));})}, 2, [], "concat"];


Shen.fns["fst"] = [Shen.type_func, function shen_user_lambda6008(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6008, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return Shen.absvector_ref(Arg5952_0, 1)}, 1, [], "fst"];

Shen.fns["snd"] = [Shen.type_func, function shen_user_lambda6009(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6009, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return Shen.absvector_ref(Arg5952_0, 2)}, 1, [], "snd"];

Shen.fns["tuple?"] = [Shen.type_func, function shen_user_lambda6010(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6010, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda6012(Arg6011) {
  if (Arg6011.length < 1) return [Shen.type_func, shen_user_lambda6012, 1, Arg6011];
  var Arg6011_0 = Arg6011[0];
  return (Shen.absvector$question$(Arg6011_0) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.tuple"], Shen.absvector_ref(Arg6011_0, 0))))}, 1, [Arg5952_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6014(Arg6013) {
  if (Arg6013.length < 1) return [Shen.type_func, shen_user_lambda6014, 1, Arg6013];
  var Arg6013_0 = Arg6013[0];
  return false}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "tuple?"];

Shen.fns["append"] = [Shen.type_func, function shen_user_lambda6015(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6015, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg5952_0))
  ? Arg5952_1
  : ((Shen.is_type(Arg5952_0, Shen.type_cons))
  ? [Shen.type_cons, Arg5952_0[1], Shen.call(Shen.fns["append"], [Arg5952_0[2], Arg5952_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "append"]]);})))}, 2, [], "append"];

Shen.fns["@v"] = [Shen.type_func, function shen_user_lambda6016(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6016, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["limit"], [Arg5952_1])),
  (R1 = Shen.vector((R0 + 1))),
  (R1 = Shen.call(Shen.fns["vector->"], [R1, 1, Arg5952_0])),
  ((Shen.unwind_tail(Shen.$eq$(R0, 0)))
  ? R1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.@v-help"], [Arg5952_1, 1, R0, R1]);})))}, 2, [], "@v"];

Shen.fns["shen.@v-help"] = [Shen.type_func, function shen_user_lambda6017(Arg5952) {
  if (Arg5952.length < 4) return [Shen.type_func, shen_user_lambda6017, 4, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2], Arg5952_3 = Arg5952[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5952_2, Arg5952_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.copyfromvector"], [Arg5952_0, Arg5952_3, Arg5952_2, (Arg5952_2 + 1)]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.@v-help"], [Arg5952_0, (Arg5952_1 + 1), Arg5952_2, Shen.call(Shen.fns["shen.copyfromvector"], [Arg5952_0, Arg5952_3, Arg5952_1, (Arg5952_1 + 1)])]);}))}, 4, [], "shen.@v-help"];

Shen.fns["shen.copyfromvector"] = [Shen.type_func, function shen_user_lambda6018(Arg5952) {
  if (Arg5952.length < 4) return [Shen.type_func, shen_user_lambda6018, 4, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2], Arg5952_3 = Arg5952[3];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda6020(Arg6019) {
  if (Arg6019.length < 4) return [Shen.type_func, shen_user_lambda6020, 4, Arg6019];
  var Arg6019_0 = Arg6019[0], Arg6019_1 = Arg6019[1], Arg6019_2 = Arg6019[2], Arg6019_3 = Arg6019[3];
  return (function() {
  return Shen.call_tail(Shen.fns["vector->"], [Arg6019_3, Arg6019_0, Shen.call(Shen.fns["<-vector"], [Arg6019_1, Arg6019_2])]);})}, 4, [Arg5952_3, Arg5952_0, Arg5952_2, Arg5952_1], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6022(Arg6021) {
  if (Arg6021.length < 2) return [Shen.type_func, shen_user_lambda6022, 2, Arg6021];
  var Arg6021_0 = Arg6021[0], Arg6021_1 = Arg6021[1];
  return Arg6021_0}, 2, [Arg5952_1], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 4, [], "shen.copyfromvector"];

Shen.fns["hdv"] = [Shen.type_func, function shen_user_lambda6023(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6023, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda6025(Arg6024) {
  if (Arg6024.length < 1) return [Shen.type_func, shen_user_lambda6025, 1, Arg6024];
  var Arg6024_0 = Arg6024[0];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg6024_0, 1]);})}, 1, [Arg5952_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6027(Arg6026) {
  if (Arg6026.length < 2) return [Shen.type_func, shen_user_lambda6027, 2, Arg6026];
  var Arg6026_0 = Arg6026[0], Arg6026_1 = Arg6026[1];
  return (function() {
  return Shen.simple_error(("hdv needs a non-empty vector as an argument; not " + Shen.call(Shen.fns["shen.app"], [Arg6026_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})}, 2, [Arg5952_0], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "hdv"];

Shen.fns["tlv"] = [Shen.type_func, function shen_user_lambda6028(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6028, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["limit"], [Arg5952_0])),
  ((Shen.unwind_tail(Shen.$eq$(R0, 0)))
  ? (function() {
  return Shen.simple_error("cannot take the tail of the empty vector\x0a");})
  : ((Shen.unwind_tail(Shen.$eq$(R0, 1)))
  ? (function() {
  return Shen.vector(0);})
  : (Shen.vector((R0 - 1)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.tlv-help"], [Arg5952_0, 2, R0, Shen.vector((R0 - 1))]);})))))}, 1, [], "tlv"];

Shen.fns["shen.tlv-help"] = [Shen.type_func, function shen_user_lambda6029(Arg5952) {
  if (Arg5952.length < 4) return [Shen.type_func, shen_user_lambda6029, 4, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2], Arg5952_3 = Arg5952[3];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5952_2, Arg5952_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.copyfromvector"], [Arg5952_0, Arg5952_3, Arg5952_2, (Arg5952_2 - 1)]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.tlv-help"], [Arg5952_0, (Arg5952_1 + 1), Arg5952_2, Shen.call(Shen.fns["shen.copyfromvector"], [Arg5952_0, Arg5952_3, Arg5952_1, (Arg5952_1 - 1)])]);}))}, 4, [], "shen.tlv-help"];

Shen.fns["assoc"] = [Shen.type_func, function shen_user_lambda6030(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6030, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg5952_1))
  ? []
  : (((Shen.is_type(Arg5952_1, Shen.type_cons) && (Shen.is_type(Arg5952_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg5952_1[1][1], Arg5952_0)))))
  ? Arg5952_1[1]
  : ((Shen.is_type(Arg5952_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["assoc"], [Arg5952_0, Arg5952_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "assoc"]]);}))))}, 2, [], "assoc"];

Shen.fns["boolean?"] = [Shen.type_func, function shen_user_lambda6031(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6031, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg5952_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg5952_0)))
  ? true
  : false))}, 1, [], "boolean?"];

Shen.fns["nl"] = [Shen.type_func, function shen_user_lambda6032(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6032, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg5952_0)))
  ? 0
  : (Shen.call(Shen.fns["shen.prhush"], ["\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["nl"], [(Arg5952_0 - 1)]);})))}, 1, [], "nl"];

Shen.fns["difference"] = [Shen.type_func, function shen_user_lambda6033(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6033, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg5952_0))
  ? []
  : ((Shen.is_type(Arg5952_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg5952_0[1], Arg5952_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["difference"], [Arg5952_0[2], Arg5952_1]);})
  : [Shen.type_cons, Arg5952_0[1], Shen.call(Shen.fns["difference"], [Arg5952_0[2], Arg5952_1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "difference"]]);})))}, 2, [], "difference"];

Shen.fns["do"] = [Shen.type_func, function shen_user_lambda6034(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6034, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1;
  return Arg5952_1}, 2, [], "do"];

Shen.fns["element?"] = [Shen.type_func, function shen_user_lambda6035(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6035, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg5952_1))
  ? false
  : (((Shen.is_type(Arg5952_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg5952_1[1], Arg5952_0))))
  ? true
  : ((Shen.is_type(Arg5952_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg5952_0, Arg5952_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "element?"]]);}))))}, 2, [], "element?"];


Shen.fns["fix"] = [Shen.type_func, function shen_user_lambda6036(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6036, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.fix-help"], [Arg5952_0, Arg5952_1, Shen.call(Arg5952_0, [Arg5952_1])]);})}, 2, [], "fix"];

Shen.fns["shen.fix-help"] = [Shen.type_func, function shen_user_lambda6037(Arg5952) {
  if (Arg5952.length < 3) return [Shen.type_func, shen_user_lambda6037, 3, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5952_2, Arg5952_1)))
  ? Arg5952_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.fix-help"], [Arg5952_0, Arg5952_2, Shen.call(Arg5952_0, [Arg5952_2])]);}))}, 3, [], "shen.fix-help"];

Shen.fns["put"] = [Shen.type_func, function shen_user_lambda6038(Arg5952) {
  if (Arg5952.length < 4) return [Shen.type_func, shen_user_lambda6038, 4, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2], Arg5952_3 = Arg5952[3];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg5952_0, Shen.call(Shen.fns["limit"], [Arg5952_3])])),
  ((R1 = [Shen.type_func, function shen_user_lambda6040(Arg6039) {
  if (Arg6039.length < 5) return [Shen.type_func, shen_user_lambda6040, 5, Arg6039];
  var Arg6039_0 = Arg6039[0], Arg6039_1 = Arg6039[1], Arg6039_2 = Arg6039[2], Arg6039_3 = Arg6039[3], Arg6039_4 = Arg6039[4];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg6039_0, Arg6039_1]);})}, 5, [Arg5952_3, R0, Arg5952_0, Arg5952_1, Arg5952_2], undefined]),
  (R2 = [Shen.type_func, function shen_user_lambda6042(Arg6041) {
  if (Arg6041.length < 1) return [Shen.type_func, shen_user_lambda6042, 1, Arg6041];
  var Arg6041_0 = Arg6041[0];
  return []}, 1, [], undefined]),
  (R1 = Shen.trap_error(R1, R2))),
  Shen.call(Shen.fns["vector->"], [Arg5952_3, R0, Shen.call(Shen.fns["shen.change-pointer-value"], [Arg5952_0, Arg5952_1, Arg5952_2, R1])]),
  Arg5952_2)}, 4, [], "put"];

Shen.fns["unput"] = [Shen.type_func, function shen_user_lambda6043(Arg5952) {
  if (Arg5952.length < 3) return [Shen.type_func, shen_user_lambda6043, 3, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg5952_0, Shen.call(Shen.fns["limit"], [Arg5952_2])])),
  ((R1 = [Shen.type_func, function shen_user_lambda6045(Arg6044) {
  if (Arg6044.length < 4) return [Shen.type_func, shen_user_lambda6045, 4, Arg6044];
  var Arg6044_0 = Arg6044[0], Arg6044_1 = Arg6044[1], Arg6044_2 = Arg6044[2], Arg6044_3 = Arg6044[3];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg6044_0, Arg6044_1]);})}, 4, [Arg5952_2, R0, Arg5952_1, Arg5952_0], undefined]),
  (R2 = [Shen.type_func, function shen_user_lambda6047(Arg6046) {
  if (Arg6046.length < 1) return [Shen.type_func, shen_user_lambda6047, 1, Arg6046];
  var Arg6046_0 = Arg6046[0];
  return []}, 1, [], undefined]),
  (R1 = Shen.trap_error(R1, R2))),
  Shen.call(Shen.fns["vector->"], [Arg5952_2, R0, Shen.call(Shen.fns["shen.remove-pointer"], [Arg5952_0, Arg5952_1, R1])]),
  Arg5952_0)}, 3, [], "unput"];

Shen.fns["shen.remove-pointer"] = [Shen.type_func, function shen_user_lambda6048(Arg5952) {
  if (Arg5952.length < 3) return [Shen.type_func, shen_user_lambda6048, 3, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5952_2))
  ? []
  : (((Shen.is_type(Arg5952_2, Shen.type_cons) && (Shen.is_type(Arg5952_2[1], Shen.type_cons) && (Shen.is_type(Arg5952_2[1][1], Shen.type_cons) && (Shen.is_type(Arg5952_2[1][1][2], Shen.type_cons) && (Shen.empty$question$(Arg5952_2[1][1][2][2]) && (Shen.unwind_tail(Shen.$eq$(Arg5952_2[1][1][2][1], Arg5952_1)) && Shen.unwind_tail(Shen.$eq$(Arg5952_2[1][1][1], Arg5952_0)))))))))
  ? Arg5952_2[2]
  : ((Shen.is_type(Arg5952_2, Shen.type_cons))
  ? [Shen.type_cons, Arg5952_2[1], Shen.call(Shen.fns["shen.remove-pointer"], [Arg5952_0, Arg5952_1, Arg5952_2[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.remove-pointer"]]);}))))}, 3, [], "shen.remove-pointer"];

Shen.fns["shen.change-pointer-value"] = [Shen.type_func, function shen_user_lambda6049(Arg5952) {
  if (Arg5952.length < 4) return [Shen.type_func, shen_user_lambda6049, 4, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2], Arg5952_3 = Arg5952[3];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5952_3))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, Arg5952_0, [Shen.type_cons, Arg5952_1, []]], Arg5952_2], []]
  : (((Shen.is_type(Arg5952_3, Shen.type_cons) && (Shen.is_type(Arg5952_3[1], Shen.type_cons) && (Shen.is_type(Arg5952_3[1][1], Shen.type_cons) && (Shen.is_type(Arg5952_3[1][1][2], Shen.type_cons) && (Shen.empty$question$(Arg5952_3[1][1][2][2]) && (Shen.unwind_tail(Shen.$eq$(Arg5952_3[1][1][2][1], Arg5952_1)) && Shen.unwind_tail(Shen.$eq$(Arg5952_3[1][1][1], Arg5952_0)))))))))
  ? [Shen.type_cons, [Shen.type_cons, Arg5952_3[1][1], Arg5952_2], Arg5952_3[2]]
  : ((Shen.is_type(Arg5952_3, Shen.type_cons))
  ? [Shen.type_cons, Arg5952_3[1], Shen.call(Shen.fns["shen.change-pointer-value"], [Arg5952_0, Arg5952_1, Arg5952_2, Arg5952_3[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.change-pointer-value"]]);}))))}, 4, [], "shen.change-pointer-value"];

Shen.fns["get"] = [Shen.type_func, function shen_user_lambda6050(Arg5952) {
  if (Arg5952.length < 3) return [Shen.type_func, shen_user_lambda6050, 3, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["hash"], [Arg5952_0, Shen.call(Shen.fns["limit"], [Arg5952_2])])),
  ((R0 = [Shen.type_func, function shen_user_lambda6052(Arg6051) {
  if (Arg6051.length < 4) return [Shen.type_func, shen_user_lambda6052, 4, Arg6051];
  var Arg6051_0 = Arg6051[0], Arg6051_1 = Arg6051[1], Arg6051_2 = Arg6051[2], Arg6051_3 = Arg6051[3];
  return (function() {
  return Shen.call_tail(Shen.fns["<-vector"], [Arg6051_0, Arg6051_1]);})}, 4, [Arg5952_2, R0, Arg5952_0, Arg5952_1], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6054(Arg6053) {
  if (Arg6053.length < 1) return [Shen.type_func, shen_user_lambda6054, 1, Arg6053];
  var Arg6053_0 = Arg6053[0];
  return (function() {
  return Shen.simple_error("pointer not found\x0a");})}, 1, [], undefined]),
  (R0 = Shen.trap_error(R0, R1))),
  (R0 = Shen.call(Shen.fns["assoc"], [[Shen.type_cons, Arg5952_0, [Shen.type_cons, Arg5952_1, []]], R0])),
  ((Shen.empty$question$(R0))
  ? (function() {
  return Shen.simple_error("value not found\x0a");})
  : R0[2]))}, 3, [], "get"];

Shen.fns["hash"] = [Shen.type_func, function shen_user_lambda6055(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6055, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.mod"], [Shen.call(Shen.fns["sum"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6057(Arg6056) {
  if (Arg6056.length < 1) return [Shen.type_func, shen_user_lambda6057, 1, Arg6056];
  var Arg6056_0 = Arg6056[0];
  return (function() {
  return Shen.string_$gt$n(Arg6056_0);})}, 1, [], undefined], Shen.call(Shen.fns["explode"], [Arg5952_0])])]), Arg5952_1])),
  ((Shen.unwind_tail(Shen.$eq$(0, R0)))
  ? 1
  : R0))}, 2, [], "hash"];

Shen.fns["shen.mod"] = [Shen.type_func, function shen_user_lambda6058(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6058, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [Arg5952_0, Shen.call(Shen.fns["shen.multiples"], [Arg5952_0, [Shen.type_cons, Arg5952_1, []]])]);})}, 2, [], "shen.mod"];

Shen.fns["shen.multiples"] = [Shen.type_func, function shen_user_lambda6059(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6059, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return (((Shen.is_type(Arg5952_1, Shen.type_cons) && (Arg5952_1[1] > Arg5952_0)))
  ? Arg5952_1[2]
  : ((Shen.is_type(Arg5952_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.multiples"], [Arg5952_0, [Shen.type_cons, (2 * Arg5952_1[1]), Arg5952_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.multiples"]]);})))}, 2, [], "shen.multiples"];

Shen.fns["shen.modh"] = [Shen.type_func, function shen_user_lambda6060(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6060, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg5952_0)))
  ? 0
  : ((Shen.empty$question$(Arg5952_1))
  ? Arg5952_0
  : (((Shen.is_type(Arg5952_1, Shen.type_cons) && (Arg5952_1[1] > Arg5952_0)))
  ? ((Shen.empty$question$(Arg5952_1[2]))
  ? Arg5952_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [Arg5952_0, Arg5952_1[2]]);}))
  : ((Shen.is_type(Arg5952_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.modh"], [(Arg5952_0 - Arg5952_1[1]), Arg5952_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.modh"]]);})))))}, 2, [], "shen.modh"];

Shen.fns["sum"] = [Shen.type_func, function shen_user_lambda6061(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6061, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5952_0))
  ? 0
  : ((Shen.is_type(Arg5952_0, Shen.type_cons))
  ? (Arg5952_0[1] + Shen.call(Shen.fns["sum"], [Arg5952_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "sum"]]);})))}, 1, [], "sum"];

Shen.fns["head"] = [Shen.type_func, function shen_user_lambda6062(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6062, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg5952_0, Shen.type_cons))
  ? Arg5952_0[1]
  : (function() {
  return Shen.simple_error("head expects a non-empty list");}))}, 1, [], "head"];

Shen.fns["tail"] = [Shen.type_func, function shen_user_lambda6063(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6063, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg5952_0, Shen.type_cons))
  ? Arg5952_0[2]
  : (function() {
  return Shen.simple_error("tail expects a non-empty list");}))}, 1, [], "tail"];

Shen.fns["hdstr"] = [Shen.type_func, function shen_user_lambda6064(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6064, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return Arg5952_0[0]}, 1, [], "hdstr"];

Shen.fns["intersection"] = [Shen.type_func, function shen_user_lambda6065(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6065, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5952_0))
  ? []
  : ((Shen.is_type(Arg5952_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg5952_0[1], Arg5952_1]))
  ? [Shen.type_cons, Arg5952_0[1], Shen.call(Shen.fns["intersection"], [Arg5952_0[2], Arg5952_1])]
  : (function() {
  return Shen.call_tail(Shen.fns["intersection"], [Arg5952_0[2], Arg5952_1]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "intersection"]]);})))}, 2, [], "intersection"];

Shen.fns["reverse"] = [Shen.type_func, function shen_user_lambda6066(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6066, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.reverse_help"], [Arg5952_0, []]);})}, 1, [], "reverse"];

Shen.fns["shen.reverse_help"] = [Shen.type_func, function shen_user_lambda6067(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6067, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5952_0))
  ? Arg5952_1
  : ((Shen.is_type(Arg5952_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.reverse_help"], [Arg5952_0[2], [Shen.type_cons, Arg5952_0[1], Arg5952_1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.reverse_help"]]);})))}, 2, [], "shen.reverse_help"];

Shen.fns["union"] = [Shen.type_func, function shen_user_lambda6068(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6068, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5952_0))
  ? Arg5952_1
  : ((Shen.is_type(Arg5952_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["element?"], [Arg5952_0[1], Arg5952_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Arg5952_0[2], Arg5952_1]);})
  : [Shen.type_cons, Arg5952_0[1], Shen.call(Shen.fns["union"], [Arg5952_0[2], Arg5952_1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "union"]]);})))}, 2, [], "union"];

Shen.fns["y-or-n?"] = [Shen.type_func, function shen_user_lambda6069(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6069, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.proc-nl"], [Arg5952_0]), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.prhush"], [" (y/n) ", Shen.call(Shen.fns["stoutput"], [])]),
  (R0 = Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["read"], [Shen.call(Shen.fns["stinput"], [])]), "", [Shen.type_symbol, "shen.s"]])),
  ((Shen.unwind_tail(Shen.$eq$("y", R0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$("n", R0)))
  ? false
  : (Shen.call(Shen.fns["shen.prhush"], ["please answer y or n\x0a", Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["y-or-n?"], [Arg5952_0]);})))))}, 1, [], "y-or-n?"];


Shen.fns["subst"] = [Shen.type_func, function shen_user_lambda6070(Arg5952) {
  if (Arg5952.length < 3) return [Shen.type_func, shen_user_lambda6070, 3, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5952_2, Arg5952_1)))
  ? Arg5952_0
  : ((Shen.is_type(Arg5952_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6072(Arg6071) {
  if (Arg6071.length < 3) return [Shen.type_func, shen_user_lambda6072, 3, Arg6071];
  var Arg6071_0 = Arg6071[0], Arg6071_1 = Arg6071[1], Arg6071_2 = Arg6071[2];
  return (function() {
  return Shen.call_tail(Shen.fns["subst"], [Arg6071_0, Arg6071_1, Arg6071_2]);})}, 3, [Arg5952_0, Arg5952_1], undefined], Arg5952_2]);})
  : Arg5952_2))}, 3, [], "subst"];

Shen.fns["explode"] = [Shen.type_func, function shen_user_lambda6073(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6073, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.explode-h"], [Shen.call(Shen.fns["shen.app"], [Arg5952_0, "", [Shen.type_symbol, "shen.a"]])]);})}, 1, [], "explode"];

Shen.fns["shen.explode-h"] = [Shen.type_func, function shen_user_lambda6074(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6074, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$("", Arg5952_0)))
  ? []
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg5952_0]))
  ? [Shen.type_cons, Arg5952_0[0], Shen.call(Shen.fns["shen.explode-h"], [Shen.tlstr(Arg5952_0)])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.explode-h"]]);})))}, 1, [], "shen.explode-h"];

Shen.fns["cd"] = [Shen.type_func, function shen_user_lambda6075(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6075, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return (Shen.globals["*home-directory*"] = ((Shen.unwind_tail(Shen.$eq$(Arg5952_0, "")))
  ? ""
  : Shen.call(Shen.fns["shen.app"], [Arg5952_0, "/", [Shen.type_symbol, "shen.a"]])))}, 1, [], "cd"];

Shen.fns["map"] = [Shen.type_func, function shen_user_lambda6076(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6076, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.map-h"], [Arg5952_0, Arg5952_1, []]);})}, 2, [], "map"];

Shen.fns["shen.map-h"] = [Shen.type_func, function shen_user_lambda6077(Arg5952) {
  if (Arg5952.length < 3) return [Shen.type_func, shen_user_lambda6077, 3, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1], Arg5952_2 = Arg5952[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5952_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg5952_2]);})
  : ((Shen.is_type(Arg5952_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.map-h"], [Arg5952_0, Arg5952_1[2], [Shen.type_cons, Shen.call(Arg5952_0, [Arg5952_1[1]]), Arg5952_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.map-h"]]);})))}, 3, [], "shen.map-h"];

Shen.fns["length"] = [Shen.type_func, function shen_user_lambda6078(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6078, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.length-h"], [Arg5952_0, 0]);})}, 1, [], "length"];

Shen.fns["shen.length-h"] = [Shen.type_func, function shen_user_lambda6079(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6079, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5952_0))
  ? Arg5952_1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.length-h"], [Arg5952_0[2], (Arg5952_1 + 1)]);}))}, 2, [], "shen.length-h"];

Shen.fns["occurrences"] = [Shen.type_func, function shen_user_lambda6080(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6080, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5952_1, Arg5952_0)))
  ? 1
  : ((Shen.is_type(Arg5952_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["occurrences"], [Arg5952_0, Arg5952_1[1]]) + Shen.call(Shen.fns["occurrences"], [Arg5952_0, Arg5952_1[2]]))
  : 0))}, 2, [], "occurrences"];

Shen.fns["nth"] = [Shen.type_func, function shen_user_lambda6081(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6081, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return (((Shen.unwind_tail(Shen.$eq$(1, Arg5952_0)) && Shen.is_type(Arg5952_1, Shen.type_cons)))
  ? Arg5952_1[1]
  : ((Shen.is_type(Arg5952_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["nth"], [(Arg5952_0 - 1), Arg5952_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "nth"]]);})))}, 2, [], "nth"];

Shen.fns["integer?"] = [Shen.type_func, function shen_user_lambda6082(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6082, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return ((typeof(Arg5952_0) == 'number') && ((R0 = Shen.call(Shen.fns["shen.abs"], [Arg5952_0])),
  Shen.call(Shen.fns["shen.integer-test?"], [R0, Shen.call(Shen.fns["shen.magless"], [R0, 1])])))}, 1, [], "integer?"];

Shen.fns["shen.abs"] = [Shen.type_func, function shen_user_lambda6083(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6083, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return (((Arg5952_0 > 0))
  ? Arg5952_0
  : (0 - Arg5952_0))}, 1, [], "shen.abs"];

Shen.fns["shen.magless"] = [Shen.type_func, function shen_user_lambda6084(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6084, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return ((R0 = (Arg5952_1 * 2)),
  (((R0 > Arg5952_0))
  ? Arg5952_1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.magless"], [Arg5952_0, R0]);})))}, 2, [], "shen.magless"];

Shen.fns["shen.integer-test?"] = [Shen.type_func, function shen_user_lambda6085(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6085, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg5952_0)))
  ? true
  : (((1 > Arg5952_0))
  ? false
  : ((R0 = (Arg5952_0 - Arg5952_1)),
  (((0 > R0))
  ? (function() {
  return Shen.call_tail(Shen.fns["integer?"], [Arg5952_0]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.integer-test?"], [R0, Arg5952_1]);})))))}, 2, [], "shen.integer-test?"];

Shen.fns["mapcan"] = [Shen.type_func, function shen_user_lambda6086(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6086, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg5952_1))
  ? []
  : ((Shen.is_type(Arg5952_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Arg5952_0, [Arg5952_1[1]]), Shen.call(Shen.fns["mapcan"], [Arg5952_0, Arg5952_1[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "mapcan"]]);})))}, 2, [], "mapcan"];

Shen.fns["=="] = [Shen.type_func, function shen_user_lambda6087(Arg5952) {
  if (Arg5952.length < 2) return [Shen.type_func, shen_user_lambda6087, 2, Arg5952];
  var Arg5952_0 = Arg5952[0], Arg5952_1 = Arg5952[1];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg5952_1, Arg5952_0)))
  ? true
  : false)}, 2, [], "=="];

Shen.fns["abort"] = [Shen.type_func, function shen_user_lambda6088(Arg5952) {
  if (Arg5952.length < 0) return [Shen.type_func, shen_user_lambda6088, 0, Arg5952];
  var R0, R1, R2;
  return (function() {
  return Shen.simple_error("");})}, 0, [], "abort"];

Shen.fns["bound?"] = [Shen.type_func, function shen_user_lambda6089(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6089, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return (Shen.is_type(Arg5952_0, Shen.type_symbol) && (((R0 = [Shen.type_func, function shen_user_lambda6091(Arg6090) {
  if (Arg6090.length < 1) return [Shen.type_func, shen_user_lambda6091, 1, Arg6090];
  var Arg6090_0 = Arg6090[0];
  return (Shen.globals[Arg6090_0[1]])}, 1, [Arg5952_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6093(Arg6092) {
  if (Arg6092.length < 1) return [Shen.type_func, shen_user_lambda6093, 1, Arg6092];
  var Arg6092_0 = Arg6092[0];
  return [Shen.type_symbol, "shen.this-symbol-is-unbound"]}, 1, [], undefined]),
  (R0 = Shen.trap_error(R0, R1))),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.this-symbol-is-unbound"])))
  ? false
  : true)))}, 1, [], "bound?"];

Shen.fns["shen.string->bytes"] = [Shen.type_func, function shen_user_lambda6094(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6094, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$("", Arg5952_0)))
  ? []
  : [Shen.type_cons, Shen.string_$gt$n(Arg5952_0[0]), Shen.call(Shen.fns["shen.string->bytes"], [Shen.tlstr(Arg5952_0)])])}, 1, [], "shen.string->bytes"];

Shen.fns["maxinferences"] = [Shen.type_func, function shen_user_lambda6095(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6095, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return (Shen.globals["shen.*maxinferences*"] = Arg5952_0)}, 1, [], "maxinferences"];

Shen.fns["inferences"] = [Shen.type_func, function shen_user_lambda6096(Arg5952) {
  if (Arg5952.length < 0) return [Shen.type_func, shen_user_lambda6096, 0, Arg5952];
  var R0, R1, R2;
  return (Shen.globals["shen.*infs*"])}, 0, [], "inferences"];

Shen.fns["protect"] = [Shen.type_func, function shen_user_lambda6097(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6097, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return Arg5952_0}, 1, [], "protect"];

Shen.fns["stoutput"] = [Shen.type_func, function shen_user_lambda6098(Arg5952) {
  if (Arg5952.length < 0) return [Shen.type_func, shen_user_lambda6098, 0, Arg5952];
  var R0, R1, R2;
  return (Shen.globals["*stoutput*"])}, 0, [], "stoutput"];

Shen.fns["string->symbol"] = [Shen.type_func, function shen_user_lambda6099(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6099, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return ((R0 = Shen.intern(Arg5952_0)),
  ((Shen.is_type(R0, Shen.type_symbol))
  ? R0
  : (function() {
  return Shen.simple_error(("cannot intern " + Shen.call(Shen.fns["shen.app"], [Arg5952_0, " to a symbol", [Shen.type_symbol, "shen.s"]])));})))}, 1, [], "string->symbol"];

Shen.fns["optimise"] = [Shen.type_func, function shen_user_lambda6100(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6100, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg5952_0)))
  ? (Shen.globals["shen.*optimise*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg5952_0)))
  ? (Shen.globals["shen.*optimise*"] = false)
  : (function() {
  return Shen.simple_error("optimise expects a + or a -.\x0a");})))}, 1, [], "optimise"];

Shen.fns["os"] = [Shen.type_func, function shen_user_lambda6101(Arg5952) {
  if (Arg5952.length < 0) return [Shen.type_func, shen_user_lambda6101, 0, Arg5952];
  var R0, R1, R2;
  return (Shen.globals["*os*"])}, 0, [], "os"];

Shen.fns["language"] = [Shen.type_func, function shen_user_lambda6102(Arg5952) {
  if (Arg5952.length < 0) return [Shen.type_func, shen_user_lambda6102, 0, Arg5952];
  var R0, R1, R2;
  return (Shen.globals["*language*"])}, 0, [], "language"];

Shen.fns["version"] = [Shen.type_func, function shen_user_lambda6103(Arg5952) {
  if (Arg5952.length < 0) return [Shen.type_func, shen_user_lambda6103, 0, Arg5952];
  var R0, R1, R2;
  return (Shen.globals["*version*"])}, 0, [], "version"];

Shen.fns["port"] = [Shen.type_func, function shen_user_lambda6104(Arg5952) {
  if (Arg5952.length < 0) return [Shen.type_func, shen_user_lambda6104, 0, Arg5952];
  var R0, R1, R2;
  return (Shen.globals["*port*"])}, 0, [], "port"];

Shen.fns["porters"] = [Shen.type_func, function shen_user_lambda6105(Arg5952) {
  if (Arg5952.length < 0) return [Shen.type_func, shen_user_lambda6105, 0, Arg5952];
  var R0, R1, R2;
  return (Shen.globals["*porters*"])}, 0, [], "porters"];

Shen.fns["implementation"] = [Shen.type_func, function shen_user_lambda6106(Arg5952) {
  if (Arg5952.length < 0) return [Shen.type_func, shen_user_lambda6106, 0, Arg5952];
  var R0, R1, R2;
  return (Shen.globals["*implementation*"])}, 0, [], "implementation"];

Shen.fns["release"] = [Shen.type_func, function shen_user_lambda6107(Arg5952) {
  if (Arg5952.length < 0) return [Shen.type_func, shen_user_lambda6107, 0, Arg5952];
  var R0, R1, R2;
  return (Shen.globals["*release*"])}, 0, [], "release"];

Shen.fns["package?"] = [Shen.type_func, function shen_user_lambda6108(Arg5952) {
  if (Arg5952.length < 1) return [Shen.type_func, shen_user_lambda6108, 1, Arg5952];
  var Arg5952_0 = Arg5952[0];
  var R0, R1, R2;
  return ((R0 = [Shen.type_func, function shen_user_lambda6110(Arg6109) {
  if (Arg6109.length < 1) return [Shen.type_func, shen_user_lambda6110, 1, Arg6109];
  var Arg6109_0 = Arg6109[0];
  return (Shen.call(Shen.fns["external"], [Arg6109_0]),
  true)}, 1, [Arg5952_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6112(Arg6111) {
  if (Arg6111.length < 1) return [Shen.type_func, shen_user_lambda6112, 1, Arg6111];
  var Arg6111_0 = Arg6111[0];
  return false}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "package?"];

Shen.call_toplevel(function js$dot$shen_js_toplevel6113(Arg5952) {
  if (Arg5952.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6113, 0, Arg5952];
  var R0, R1, R2;
  return []});


"Copyright (c) 2015, Mark Tarver\x0d\x0a\x0d\x0aAll rights reserved.\x0d\x0a\x0d\x0aRedistribution and use in source and binary forms, with or without\x0d\x0amodification, are permitted provided that the following conditions are met:\x0d\x0a1. Redistributions of source code must retain the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer.\x0d\x0a2. Redistributions in binary form must reproduce the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer in the\x0d\x0a   documentation and/or other materials provided with the distribution.\x0d\x0a3. The name of Mark Tarver may not be used to endorse or promote products\x0d\x0a   derived from this software without specific prior written permission.\x0d\x0a\x0d\x0aTHIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY\x0d\x0aEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\x0d\x0aWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\x0d\x0aDISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY\x0d\x0aDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\x0d\x0a(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\x0d\x0aLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\x0d\x0aON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0d\x0a(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\x0d\x0aSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";

Shen.fns["shen.datatype-error"] = [Shen.type_func, function shen_user_lambda6116(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6116, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  return (((Shen.is_type(Arg6115_0, Shen.type_cons) && (Shen.is_type(Arg6115_0[2], Shen.type_cons) && Shen.empty$question$(Arg6115_0[2][2]))))
  ? (function() {
  return Shen.simple_error(("datatype syntax error here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6115_0[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.datatype-error"]]);}))}, 1, [], "shen.datatype-error"];

Shen.fns["shen.<datatype-rules>"] = [Shen.type_func, function shen_user_lambda6117(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6117, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<datatype-rule>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<datatype-rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["<e>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], []]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<datatype-rules>"];

Shen.fns["shen.<datatype-rule>"] = [Shen.type_func, function shen_user_lambda6118(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6118, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<side-conditions>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<singleunderline>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<conclusion>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [[Shen.type_symbol, "shen.single"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), []]]]])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<side-conditions>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<doubleunderline>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<conclusion>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [[Shen.type_symbol, "shen.double"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R2]), []]]]])]);})
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<datatype-rule>"];

Shen.fns["shen.<side-conditions>"] = [Shen.type_func, function shen_user_lambda6119(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6119, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<side-condition>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<side-conditions>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["<e>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], []]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<side-conditions>"];

Shen.fns["shen.<side-condition>"] = [Shen.type_func, function shen_user_lambda6120(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6120, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((((Shen.is_type(Arg6115_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6115_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<expr>"], [Shen.call(Shen.fns["shen.pair"], [Arg6115_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6115_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((Shen.is_type(Arg6115_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6115_0[1][1]))))
  ? ((R0 = Shen.call(Shen.fns["shen.<variable?>"], [Shen.call(Shen.fns["shen.pair"], [Arg6115_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6115_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<expr>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]]);})
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)
  : R0))}, 1, [], "shen.<side-condition>"];

Shen.fns["shen.<variable?>"] = [Shen.type_func, function shen_user_lambda6121(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6121, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6115_0[1], Shen.type_cons))
  ? ((R0 = Arg6115_0[1][1]),
  ((Shen.call(Shen.fns["variable?"], [R0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6115_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6115_0])])[1], R0]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<variable?>"];

Shen.fns["shen.<expr>"] = [Shen.type_func, function shen_user_lambda6122(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6122, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6115_0[1], Shen.type_cons))
  ? ((R0 = Arg6115_0[1][1]),
  (((!(Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, [Shen.type_symbol, ">>"], [Shen.type_cons, [Shen.type_symbol, ";"], []]]]) || (Shen.call(Shen.fns["shen.singleunderline?"], [R0]) || Shen.call(Shen.fns["shen.doubleunderline?"], [R0])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6115_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6115_0])])[1], Shen.call(Shen.fns["shen.remove-bar"], [R0])]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<expr>"];

Shen.fns["shen.remove-bar"] = [Shen.type_func, function shen_user_lambda6123(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6123, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6115_0, Shen.type_cons) && (Shen.is_type(Arg6115_0[2], Shen.type_cons) && (Shen.is_type(Arg6115_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6115_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6115_0[2][1], [Shen.type_symbol, "bar!"])))))))
  ? [Shen.type_cons, Arg6115_0[1], Arg6115_0[2][2][1]]
  : ((Shen.is_type(Arg6115_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.remove-bar"], [Arg6115_0[1]]), Shen.call(Shen.fns["shen.remove-bar"], [Arg6115_0[2]])]
  : Arg6115_0))}, 1, [], "shen.remove-bar"];

Shen.fns["shen.<premises>"] = [Shen.type_func, function shen_user_lambda6124(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6124, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<premise>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<premises>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["<e>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], []]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<premises>"];

Shen.fns["shen.<semicolon-symbol>"] = [Shen.type_func, function shen_user_lambda6125(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6125, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6115_0[1], Shen.type_cons))
  ? ((R0 = Arg6115_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ";"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6115_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6115_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<semicolon-symbol>"];

Shen.fns["shen.<premise>"] = [Shen.type_func, function shen_user_lambda6126(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6126, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((((Shen.is_type(Arg6115_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6115_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6115_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6115_0])])[1], [Shen.type_symbol, "!"]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formulae>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ">>"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formula>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.sequent"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.sequent"], [[], Shen.call(Shen.fns["shen.hdtl"], [R0])])]);})
  : Shen.fail_obj))
  : R0))
  : R0))}, 1, [], "shen.<premise>"];

Shen.fns["shen.<conclusion>"] = [Shen.type_func, function shen_user_lambda6127(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6127, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<formulae>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ">>"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formula>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], Shen.call(Shen.fns["shen.sequent"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<semicolon-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.sequent"], [[], Shen.call(Shen.fns["shen.hdtl"], [R0])])]);})
  : Shen.fail_obj))
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<conclusion>"];

Shen.fns["shen.sequent"] = [Shen.type_func, function shen_user_lambda6128(Arg6115) {
  if (Arg6115.length < 2) return [Shen.type_func, shen_user_lambda6128, 2, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1];
  var R0, R1, R2;
  return [Shen.fns['shen.tuple'], Arg6115_0, Arg6115_1]}, 2, [], "shen.sequent"];

Shen.fns["shen.<formulae>"] = [Shen.type_func, function shen_user_lambda6129(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6129, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<comma-symbol>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<formulae>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<formula>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["<e>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], []]);})
  : Shen.fail_obj))
  : R0))
  : R0))}, 1, [], "shen.<formulae>"];

Shen.fns["shen.<comma-symbol>"] = [Shen.type_func, function shen_user_lambda6130(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6130, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6115_0[1], Shen.type_cons))
  ? ((R0 = Arg6115_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ","])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6115_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6115_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<comma-symbol>"];

Shen.fns["shen.<formula>"] = [Shen.type_func, function shen_user_lambda6131(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6131, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<type>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.hdtl"], [R1])]), []]]]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<formula>"];

Shen.fns["shen.<type>"] = [Shen.type_func, function shen_user_lambda6132(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6132, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.<expr>"], [Arg6115_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.curry-type"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]);})
  : Shen.fail_obj))}, 1, [], "shen.<type>"];

Shen.fns["shen.<doubleunderline>"] = [Shen.type_func, function shen_user_lambda6133(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6133, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6115_0[1], Shen.type_cons))
  ? ((R0 = Arg6115_0[1][1]),
  ((Shen.call(Shen.fns["shen.doubleunderline?"], [R0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6115_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6115_0])])[1], R0]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<doubleunderline>"];

Shen.fns["shen.<singleunderline>"] = [Shen.type_func, function shen_user_lambda6134(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6134, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6115_0[1], Shen.type_cons))
  ? ((R0 = Arg6115_0[1][1]),
  ((Shen.call(Shen.fns["shen.singleunderline?"], [R0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6115_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6115_0])])[1], R0]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<singleunderline>"];

Shen.fns["shen.singleunderline?"] = [Shen.type_func, function shen_user_lambda6135(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6135, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (Shen.is_type(Arg6115_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.sh?"], [Shen.str(Arg6115_0)]))}, 1, [], "shen.singleunderline?"];

Shen.fns["shen.sh?"] = [Shen.type_func, function shen_user_lambda6136(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6136, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$("_", Arg6115_0)))
  ? true
  : (Shen.unwind_tail(Shen.$eq$(Arg6115_0[0], "_")) && Shen.call(Shen.fns["shen.sh?"], [Shen.tlstr(Arg6115_0)])))}, 1, [], "shen.sh?"];

Shen.fns["shen.doubleunderline?"] = [Shen.type_func, function shen_user_lambda6137(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6137, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (Shen.is_type(Arg6115_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.dh?"], [Shen.str(Arg6115_0)]))}, 1, [], "shen.doubleunderline?"];

Shen.fns["shen.dh?"] = [Shen.type_func, function shen_user_lambda6138(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6138, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$("=", Arg6115_0)))
  ? true
  : (Shen.unwind_tail(Shen.$eq$(Arg6115_0[0], "=")) && Shen.call(Shen.fns["shen.dh?"], [Shen.tlstr(Arg6115_0)])))}, 1, [], "shen.dh?"];

Shen.fns["shen.process-datatype"] = [Shen.type_func, function shen_user_lambda6139(Arg6115) {
  if (Arg6115.length < 2) return [Shen.type_func, shen_user_lambda6139, 2, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remember-datatype"], [Shen.call(Shen.fns["shen.s-prolog"], [Shen.call(Shen.fns["shen.rules->horn-clauses"], [Arg6115_0, Arg6115_1])])]);})}, 2, [], "shen.process-datatype"];

Shen.fns["shen.remember-datatype"] = [Shen.type_func, function shen_user_lambda6140(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6140, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6115_0, Shen.type_cons))
  ? ((Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["adjoin"], [Arg6115_0[1], (Shen.globals["shen.*datatypes*"])])),
  (Shen.globals["shen.*alldatatypes*"] = Shen.call(Shen.fns["adjoin"], [Arg6115_0[1], (Shen.globals["shen.*alldatatypes*"])])),
  Arg6115_0[1])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.remember-datatype"]]);}))}, 1, [], "shen.remember-datatype"];

Shen.fns["shen.rules->horn-clauses"] = [Shen.type_func, function shen_user_lambda6141(Arg6115) {
  if (Arg6115.length < 2) return [Shen.type_func, shen_user_lambda6141, 2, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6115_1))
  ? []
  : (((Shen.is_type(Arg6115_1, Shen.type_cons) && (Shen.is_type(Arg6115_1[1], Shen.fns['shen.tuple']) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.single"], Shen.call(Shen.fns["fst"], [Arg6115_1[1]]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause"], [Arg6115_0, Shen.call(Shen.fns["snd"], [Arg6115_1[1]])]), Shen.call(Shen.fns["shen.rules->horn-clauses"], [Arg6115_0, Arg6115_1[2]])]
  : (((Shen.is_type(Arg6115_1, Shen.type_cons) && (Shen.is_type(Arg6115_1[1], Shen.fns['shen.tuple']) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.double"], Shen.call(Shen.fns["fst"], [Arg6115_1[1]]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.rules->horn-clauses"], [Arg6115_0, Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.double->singles"], [Shen.call(Shen.fns["snd"], [Arg6115_1[1]])]), Arg6115_1[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.rules->horn-clauses"]]);}))))}, 2, [], "shen.rules->horn-clauses"];

Shen.fns["shen.double->singles"] = [Shen.type_func, function shen_user_lambda6142(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6142, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return [Shen.type_cons, Shen.call(Shen.fns["shen.right-rule"], [Arg6115_0]), [Shen.type_cons, Shen.call(Shen.fns["shen.left-rule"], [Arg6115_0]), []]]}, 1, [], "shen.double->singles"];

Shen.fns["shen.right-rule"] = [Shen.type_func, function shen_user_lambda6143(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6143, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return [Shen.fns['shen.tuple'], [Shen.type_symbol, "shen.single"], Arg6115_0]}, 1, [], "shen.right-rule"];

Shen.fns["shen.left-rule"] = [Shen.type_func, function shen_user_lambda6144(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6144, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6115_0, Shen.type_cons) && (Shen.is_type(Arg6115_0[2], Shen.type_cons) && (Shen.is_type(Arg6115_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6115_0[2][2][1], Shen.fns['shen.tuple']) && (Shen.empty$question$(Shen.call(Shen.fns["fst"], [Arg6115_0[2][2][1]])) && Shen.empty$question$(Arg6115_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Qv"]])),
  (R1 = [Shen.fns['shen.tuple'], [Shen.type_cons, Shen.call(Shen.fns["snd"], [Arg6115_0[2][2][1]]), []], R0]),
  (R0 = [Shen.type_cons, [Shen.fns['shen.tuple'], Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6146(Arg6145) {
  if (Arg6145.length < 1) return [Shen.type_func, shen_user_lambda6146, 1, Arg6145];
  var Arg6145_0 = Arg6145[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.right->left"], [Arg6145_0]);})}, 1, [], undefined], Arg6115_0[2][1]]), R0], []]),
  [Shen.fns['shen.tuple'], [Shen.type_symbol, "shen.single"], [Shen.type_cons, Arg6115_0[1], [Shen.type_cons, R0, [Shen.type_cons, R1, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.left-rule"]]);}))}, 1, [], "shen.left-rule"];

Shen.fns["shen.right->left"] = [Shen.type_func, function shen_user_lambda6147(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6147, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6115_0, Shen.fns['shen.tuple']) && Shen.empty$question$(Shen.call(Shen.fns["fst"], [Arg6115_0]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["snd"], [Arg6115_0]);})
  : (function() {
  return Shen.simple_error("syntax error with ==========\x0a");}))}, 1, [], "shen.right->left"];

Shen.fns["shen.rule->horn-clause"] = [Shen.type_func, function shen_user_lambda6148(Arg6115) {
  if (Arg6115.length < 2) return [Shen.type_func, shen_user_lambda6148, 2, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6115_1, Shen.type_cons) && (Shen.is_type(Arg6115_1[2], Shen.type_cons) && (Shen.is_type(Arg6115_1[2][2], Shen.type_cons) && (Shen.is_type(Arg6115_1[2][2][1], Shen.fns['shen.tuple']) && Shen.empty$question$(Arg6115_1[2][2][2]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause-head"], [Arg6115_0, Shen.call(Shen.fns["snd"], [Arg6115_1[2][2][1]])]), [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["shen.rule->horn-clause-body"], [Arg6115_1[1], Arg6115_1[2][1], Shen.call(Shen.fns["fst"], [Arg6115_1[2][2][1]])]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.rule->horn-clause"]]);}))}, 2, [], "shen.rule->horn-clause"];

Shen.fns["shen.rule->horn-clause-head"] = [Shen.type_func, function shen_user_lambda6149(Arg6115) {
  if (Arg6115.length < 2) return [Shen.type_func, shen_user_lambda6149, 2, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1];
  var R0, R1, R2;
  return [Shen.type_cons, Arg6115_0, [Shen.type_cons, Shen.call(Shen.fns["shen.mode-ify"], [Arg6115_1]), [Shen.type_cons, [Shen.type_symbol, "Context_1957"], []]]]}, 2, [], "shen.rule->horn-clause-head"];

Shen.fns["shen.mode-ify"] = [Shen.type_func, function shen_user_lambda6150(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6150, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6115_0, Shen.type_cons) && (Shen.is_type(Arg6115_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6115_0[2][1])) && (Shen.is_type(Arg6115_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6115_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, [Shen.type_cons, Arg6115_0[1], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6115_0[2][2][1], [Shen.type_cons, [Shen.type_symbol, "+"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "-"], []]]]
  : Arg6115_0)}, 1, [], "shen.mode-ify"];

Shen.fns["shen.rule->horn-clause-body"] = [Shen.type_func, function shen_user_lambda6151(Arg6115) {
  if (Arg6115.length < 3) return [Shen.type_func, shen_user_lambda6151, 3, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1], Arg6115_2 = Arg6115[2];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6153(Arg6152) {
  if (Arg6152.length < 1) return [Shen.type_func, shen_user_lambda6153, 1, Arg6152];
  var Arg6152_0 = Arg6152[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.extract_vars"], [Arg6152_0]);})}, 1, [], undefined], Arg6115_2])),
  (R1 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6155(Arg6154) {
  if (Arg6154.length < 1) return [Shen.type_func, shen_user_lambda6155, 1, Arg6154];
  var Arg6154_0 = Arg6154[0];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "shen.cl"]]);})}, 1, [], undefined], Arg6115_2])),
  (R2 = Shen.call(Shen.fns["shen.construct-search-literals"], [R1, R0, [Shen.type_symbol, "Context_1957"], [Shen.type_symbol, "Context1_1957"]])),
  Shen.call(Shen.fns["shen.construct-search-clauses"], [R1, Arg6115_2, R0]),
  (R1 = Shen.call(Shen.fns["shen.construct-side-literals"], [Arg6115_0])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6157(Arg6156) {
  if (Arg6156.length < 2) return [Shen.type_func, shen_user_lambda6157, 2, Arg6156];
  var Arg6156_0 = Arg6156[0], Arg6156_1 = Arg6156[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.construct-premiss-literal"], [Arg6156_1, Shen.empty$question$(Arg6156_0)]);})}, 2, [Arg6115_2], undefined], Arg6115_1])),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [R2, Shen.call(Shen.fns["append"], [R1, R0])]);}))}, 3, [], "shen.rule->horn-clause-body"];

Shen.fns["shen.construct-search-literals"] = [Shen.type_func, function shen_user_lambda6158(Arg6115) {
  if (Arg6115.length < 4) return [Shen.type_func, shen_user_lambda6158, 4, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1], Arg6115_2 = Arg6115[2], Arg6115_3 = Arg6115[3];
  var R0, R1, R2;
  return (((Shen.empty$question$(Arg6115_0) && Shen.empty$question$(Arg6115_1)))
  ? []
  : (function() {
  return Shen.call_tail(Shen.fns["shen.csl-help"], [Arg6115_0, Arg6115_1, Arg6115_2, Arg6115_3]);}))}, 4, [], "shen.construct-search-literals"];

Shen.fns["shen.csl-help"] = [Shen.type_func, function shen_user_lambda6159(Arg6115) {
  if (Arg6115.length < 4) return [Shen.type_func, shen_user_lambda6159, 4, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1], Arg6115_2 = Arg6115[2], Arg6115_3 = Arg6115[3];
  var R0, R1, R2;
  return (((Shen.empty$question$(Arg6115_0) && Shen.empty$question$(Arg6115_1)))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, [Shen.type_symbol, "ContextOut_1957"], [Shen.type_cons, Arg6115_2, []]]], []]
  : (((Shen.is_type(Arg6115_0, Shen.type_cons) && Shen.is_type(Arg6115_1, Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_cons, Arg6115_0[1], [Shen.type_cons, Arg6115_2, [Shen.type_cons, Arg6115_3, Arg6115_1[1]]]], Shen.call(Shen.fns["shen.csl-help"], [Arg6115_0[2], Arg6115_1[2], Arg6115_3, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "Context"]])])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.csl-help"]]);})))}, 4, [], "shen.csl-help"];

Shen.fns["shen.construct-search-clauses"] = [Shen.type_func, function shen_user_lambda6160(Arg6115) {
  if (Arg6115.length < 3) return [Shen.type_func, shen_user_lambda6160, 3, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1], Arg6115_2 = Arg6115[2];
  var R0, R1, R2;
  return (((Shen.empty$question$(Arg6115_0) && (Shen.empty$question$(Arg6115_1) && Shen.empty$question$(Arg6115_2))))
  ? [Shen.type_symbol, "shen.skip"]
  : (((Shen.is_type(Arg6115_0, Shen.type_cons) && (Shen.is_type(Arg6115_1, Shen.type_cons) && Shen.is_type(Arg6115_2, Shen.type_cons))))
  ? (Shen.call(Shen.fns["shen.construct-search-clause"], [Arg6115_0[1], Arg6115_1[1], Arg6115_2[1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.construct-search-clauses"], [Arg6115_0[2], Arg6115_1[2], Arg6115_2[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.construct-search-clauses"]]);})))}, 3, [], "shen.construct-search-clauses"];

Shen.fns["shen.construct-search-clause"] = [Shen.type_func, function shen_user_lambda6161(Arg6115) {
  if (Arg6115.length < 3) return [Shen.type_func, shen_user_lambda6161, 3, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1], Arg6115_2 = Arg6115[2];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.s-prolog"], [[Shen.type_cons, Shen.call(Shen.fns["shen.construct-base-search-clause"], [Arg6115_0, Arg6115_1, Arg6115_2]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-recursive-search-clause"], [Arg6115_0, Arg6115_1, Arg6115_2]), []]]]);})}, 3, [], "shen.construct-search-clause"];

Shen.fns["shen.construct-base-search-clause"] = [Shen.type_func, function shen_user_lambda6162(Arg6115) {
  if (Arg6115.length < 3) return [Shen.type_func, shen_user_lambda6162, 3, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1], Arg6115_2 = Arg6115[2];
  var R0, R1, R2;
  return [Shen.type_cons, [Shen.type_cons, Arg6115_0, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.mode-ify"], [Arg6115_1]), [Shen.type_symbol, "In_1957"]], [Shen.type_cons, [Shen.type_symbol, "In_1957"], Arg6115_2]]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [], []]]]}, 3, [], "shen.construct-base-search-clause"];

Shen.fns["shen.construct-recursive-search-clause"] = [Shen.type_func, function shen_user_lambda6163(Arg6115) {
  if (Arg6115.length < 3) return [Shen.type_func, shen_user_lambda6163, 3, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1], Arg6115_2 = Arg6115[2];
  var R0, R1, R2;
  return [Shen.type_cons, [Shen.type_cons, Arg6115_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Assumption_1957"], [Shen.type_symbol, "Assumptions_1957"]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "Assumption_1957"], [Shen.type_symbol, "Out_1957"]], Arg6115_2]]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, Arg6115_0, [Shen.type_cons, [Shen.type_symbol, "Assumptions_1957"], [Shen.type_cons, [Shen.type_symbol, "Out_1957"], Arg6115_2]]], []], []]]]}, 3, [], "shen.construct-recursive-search-clause"];

Shen.fns["shen.construct-side-literals"] = [Shen.type_func, function shen_user_lambda6164(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6164, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6115_0))
  ? []
  : (((Shen.is_type(Arg6115_0, Shen.type_cons) && (Shen.is_type(Arg6115_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6115_0[1][1])) && (Shen.is_type(Arg6115_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6115_0[1][2][2]))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "when"], Arg6115_0[1][2]], Shen.call(Shen.fns["shen.construct-side-literals"], [Arg6115_0[2]])]
  : (((Shen.is_type(Arg6115_0, Shen.type_cons) && (Shen.is_type(Arg6115_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6115_0[1][1])) && (Shen.is_type(Arg6115_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6115_0[1][2][2], Shen.type_cons) && Shen.empty$question$(Arg6115_0[1][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "is"], Arg6115_0[1][2]], Shen.call(Shen.fns["shen.construct-side-literals"], [Arg6115_0[2]])]
  : ((Shen.is_type(Arg6115_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.construct-side-literals"], [Arg6115_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.construct-side-literals"]]);})))))}, 1, [], "shen.construct-side-literals"];

Shen.fns["shen.construct-premiss-literal"] = [Shen.type_func, function shen_user_lambda6165(Arg6115) {
  if (Arg6115.length < 2) return [Shen.type_func, shen_user_lambda6165, 2, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6115_0, Shen.fns['shen.tuple']))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.t*"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Shen.call(Shen.fns["snd"], [Arg6115_0])]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-context"], [Arg6115_1, Shen.call(Shen.fns["fst"], [Arg6115_0])]), []]]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6115_0)))
  ? [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.construct-premiss-literal"]]);})))}, 2, [], "shen.construct-premiss-literal"];

Shen.fns["shen.construct-context"] = [Shen.type_func, function shen_user_lambda6166(Arg6115) {
  if (Arg6115.length < 2) return [Shen.type_func, shen_user_lambda6166, 2, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1];
  var R0, R1, R2;
  return (((Shen.unwind_tail(Shen.$eq$(true, Arg6115_0)) && Shen.empty$question$(Arg6115_1)))
  ? [Shen.type_symbol, "Context_1957"]
  : (((Shen.unwind_tail(Shen.$eq$(false, Arg6115_0)) && Shen.empty$question$(Arg6115_1)))
  ? [Shen.type_symbol, "ContextOut_1957"]
  : ((Shen.is_type(Arg6115_1, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg6115_1[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.construct-context"], [Arg6115_0, Arg6115_1[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.construct-context"]]);}))))}, 2, [], "shen.construct-context"];

Shen.fns["shen.recursive_cons_form"] = [Shen.type_func, function shen_user_lambda6167(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6167, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6115_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg6115_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.recursive_cons_form"], [Arg6115_0[2]]), []]]]
  : Arg6115_0)}, 1, [], "shen.recursive_cons_form"];

Shen.fns["preclude"] = [Shen.type_func, function shen_user_lambda6168(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6168, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.preclude-h"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6170(Arg6169) {
  if (Arg6169.length < 1) return [Shen.type_func, shen_user_lambda6170, 1, Arg6169];
  var Arg6169_0 = Arg6169[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.intern-type"], [Arg6169_0]);})}, 1, [], undefined], Arg6115_0])]);})}, 1, [], "preclude"];

Shen.fns["shen.preclude-h"] = [Shen.type_func, function shen_user_lambda6171(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6171, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*datatypes*"]), Arg6115_0])),
  (Shen.globals["shen.*datatypes*"]))}, 1, [], "shen.preclude-h"];

Shen.fns["include"] = [Shen.type_func, function shen_user_lambda6172(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6172, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.include-h"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6174(Arg6173) {
  if (Arg6173.length < 1) return [Shen.type_func, shen_user_lambda6174, 1, Arg6173];
  var Arg6173_0 = Arg6173[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.intern-type"], [Arg6173_0]);})}, 1, [], undefined], Arg6115_0])]);})}, 1, [], "include"];

Shen.fns["shen.include-h"] = [Shen.type_func, function shen_user_lambda6175(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6175, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["intersection"], [Arg6115_0, (Shen.globals["shen.*alldatatypes*"])])),
  (Shen.globals["shen.*datatypes*"] = Shen.call(Shen.fns["union"], [R0, (Shen.globals["shen.*datatypes*"])])),
  (Shen.globals["shen.*datatypes*"]))}, 1, [], "shen.include-h"];

Shen.fns["preclude-all-but"] = [Shen.type_func, function shen_user_lambda6176(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6176, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.preclude-h"], [Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*alldatatypes*"]), Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6178(Arg6177) {
  if (Arg6177.length < 1) return [Shen.type_func, shen_user_lambda6178, 1, Arg6177];
  var Arg6177_0 = Arg6177[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.intern-type"], [Arg6177_0]);})}, 1, [], undefined], Arg6115_0])])]);})}, 1, [], "preclude-all-but"];

Shen.fns["include-all-but"] = [Shen.type_func, function shen_user_lambda6179(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6179, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.include-h"], [Shen.call(Shen.fns["difference"], [(Shen.globals["shen.*alldatatypes*"]), Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6181(Arg6180) {
  if (Arg6180.length < 1) return [Shen.type_func, shen_user_lambda6181, 1, Arg6180];
  var Arg6180_0 = Arg6180[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.intern-type"], [Arg6180_0]);})}, 1, [], undefined], Arg6115_0])])]);})}, 1, [], "include-all-but"];

Shen.fns["shen.synonyms-help"] = [Shen.type_func, function shen_user_lambda6182(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6182, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6115_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.demodulation-function"], [(Shen.globals["shen.*tc*"]), Shen.call(Shen.fns["mapcan"], [[Shen.type_func, function shen_user_lambda6184(Arg6183) {
  if (Arg6183.length < 1) return [Shen.type_func, shen_user_lambda6184, 1, Arg6183];
  var Arg6183_0 = Arg6183[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.demod-rule"], [Arg6183_0]);})}, 1, [], undefined], (Shen.globals["shen.*synonyms*"])])]);})
  : (((Shen.is_type(Arg6115_0, Shen.type_cons) && Shen.is_type(Arg6115_0[2], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["difference"], [Shen.call(Shen.fns["shen.extract_vars"], [Arg6115_0[2][1]]), Shen.call(Shen.fns["shen.extract_vars"], [Arg6115_0[1]])])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen.pushnew"], [[Shen.type_cons, Arg6115_0[1], [Shen.type_cons, Arg6115_0[2][1], []]], [Shen.type_symbol, "shen.*synonyms*"]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.synonyms-help"], [Arg6115_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.free_variable_warnings"], [Arg6115_0[2][1], R0]);})))
  : (function() {
  return Shen.simple_error("odd number of synonyms\x0a");})))}, 1, [], "shen.synonyms-help"];

Shen.fns["shen.pushnew"] = [Shen.type_func, function shen_user_lambda6185(Arg6115) {
  if (Arg6115.length < 2) return [Shen.type_func, shen_user_lambda6185, 2, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1];
  var R0, R1, R2;
  return ((Shen.call(Shen.fns["element?"], [Arg6115_0, (Shen.globals[Arg6115_1[1]])]))
  ? (Shen.globals[Arg6115_1[1]])
  : (Shen.globals[Arg6115_1[1]] = [Shen.type_cons, Arg6115_0, (Shen.globals[Arg6115_1[1]])]))}, 2, [], "shen.pushnew"];

Shen.fns["shen.demod-rule"] = [Shen.type_func, function shen_user_lambda6186(Arg6115) {
  if (Arg6115.length < 1) return [Shen.type_func, shen_user_lambda6186, 1, Arg6115];
  var Arg6115_0 = Arg6115[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6115_0, Shen.type_cons) && (Shen.is_type(Arg6115_0[2], Shen.type_cons) && Shen.empty$question$(Arg6115_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6115_0[1]]), [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6115_0[2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.demod-rule"]]);}))}, 1, [], "shen.demod-rule"];

Shen.fns["shen.demodulation-function"] = [Shen.type_func, function shen_user_lambda6187(Arg6115) {
  if (Arg6115.length < 2) return [Shen.type_func, shen_user_lambda6187, 2, Arg6115];
  var Arg6115_0 = Arg6115[0], Arg6115_1 = Arg6115[1];
  var R0, R1, R2;
  return (Shen.call(Shen.fns["tc"], [[Shen.type_symbol, "-"]]),
  Shen.call(Shen.fns["eval"], [[Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "shen.demod"], Shen.call(Shen.fns["append"], [Arg6115_1, Shen.call(Shen.fns["shen.default-rule"], [])])]]]),
  ((Arg6115_0)
  ? Shen.call(Shen.fns["tc"], [[Shen.type_symbol, "+"]])
  : [Shen.type_symbol, "shen.skip"]),
  [Shen.type_symbol, "synonyms"])}, 2, [], "shen.demodulation-function"];

Shen.fns["shen.default-rule"] = [Shen.type_func, function shen_user_lambda6188(Arg6115) {
  if (Arg6115.length < 0) return [Shen.type_func, shen_user_lambda6188, 0, Arg6115];
  var R0, R1, R2;
  return [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "X"], []]]]}, 0, [], "shen.default-rule"];

Shen.call_toplevel(function js$dot$shen_js_toplevel6189(Arg6115) {
  if (Arg6115.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6189, 0, Arg6115];
  var R0, R1, R2;
  return []});


"Copyright (c) 2015, Mark Tarver\x0d\x0a\x0d\x0aAll rights reserved.\x0d\x0a\x0d\x0aRedistribution and use in source and binary forms, with or without\x0d\x0amodification, are permitted provided that the following conditions are met:\x0d\x0a1. Redistributions of source code must retain the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer.\x0d\x0a2. Redistributions in binary form must reproduce the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer in the\x0d\x0a   documentation and/or other materials provided with the distribution.\x0d\x0a3. The name of Mark Tarver may not be used to endorse or promote products\x0d\x0a   derived from this software without specific prior written permission.\x0d\x0a\x0d\x0aTHIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY\x0d\x0aEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\x0d\x0aWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\x0d\x0aDISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY\x0d\x0aDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\x0d\x0a(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\x0d\x0aLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\x0d\x0aON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0d\x0a(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\x0d\x0aSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";

Shen.fns["shen.yacc"] = [Shen.type_func, function shen_user_lambda6192(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6192, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  return (((Shen.is_type(Arg6191_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defcc"], Arg6191_0[1])) && Shen.is_type(Arg6191_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.yacc->shen"], [Arg6191_0[2][1], Arg6191_0[2][2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.yacc"]]);}))}, 1, [], "shen.yacc"];

Shen.fns["shen.yacc->shen"] = [Shen.type_func, function shen_user_lambda6193(Arg6191) {
  if (Arg6191.length < 2) return [Shen.type_func, shen_user_lambda6193, 2, Arg6191];
  var Arg6191_0 = Arg6191[0], Arg6191_1 = Arg6191[1];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.split_cc_rules"], [true, Arg6191_1, []])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6195(Arg6194) {
  if (Arg6194.length < 1) return [Shen.type_func, shen_user_lambda6195, 1, Arg6194];
  var Arg6194_0 = Arg6194[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.cc_body"], [Arg6194_0]);})}, 1, [], undefined], R0])),
  (R0 = Shen.call(Shen.fns["shen.yacc_cases"], [R0])),
  [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg6191_0, [Shen.type_cons, [Shen.type_symbol, "Stream"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, Shen.call(Shen.fns["shen.kill-code"], [R0]), []]]]]])}, 2, [], "shen.yacc->shen"];

Shen.fns["shen.kill-code"] = [Shen.type_func, function shen_user_lambda6196(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6196, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0;
  return (((Shen.call(Shen.fns["occurrences"], [[Shen.type_symbol, "kill"], Arg6191_0]) > 0))
  ? [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, Arg6191_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.analyse-kill"], [Shen.type_cons, [Shen.type_symbol, "E"], []]], []]]], []]]]
  : Arg6191_0)}, 1, [], "shen.kill-code"];

Shen.fns["kill"] = [Shen.type_func, function shen_user_lambda6197(Arg6191) {
  if (Arg6191.length < 0) return [Shen.type_func, shen_user_lambda6197, 0, Arg6191];
  var R0;
  return (function() {
  return Shen.simple_error("yacc kill");})}, 0, [], "kill"];

Shen.fns["shen.analyse-kill"] = [Shen.type_func, function shen_user_lambda6198(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6198, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0;
  return ((R0 = Shen.error_to_string(Arg6191_0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, "yacc kill")))
  ? Shen.fail_obj
  : Arg6191_0))}, 1, [], "shen.analyse-kill"];

Shen.fns["shen.split_cc_rules"] = [Shen.type_func, function shen_user_lambda6199(Arg6191) {
  if (Arg6191.length < 3) return [Shen.type_func, shen_user_lambda6199, 3, Arg6191];
  var Arg6191_0 = Arg6191[0], Arg6191_1 = Arg6191[1], Arg6191_2 = Arg6191[2];
  var R0;
  return (((Shen.empty$question$(Arg6191_1) && Shen.empty$question$(Arg6191_2)))
  ? []
  : ((Shen.empty$question$(Arg6191_1))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.split_cc_rule"], [Arg6191_0, Shen.call(Shen.fns["reverse"], [Arg6191_2]), []]), []]
  : (((Shen.is_type(Arg6191_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ";"], Arg6191_1[1]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.split_cc_rule"], [Arg6191_0, Shen.call(Shen.fns["reverse"], [Arg6191_2]), []]), Shen.call(Shen.fns["shen.split_cc_rules"], [Arg6191_0, Arg6191_1[2], []])]
  : ((Shen.is_type(Arg6191_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rules"], [Arg6191_0, Arg6191_1[2], [Shen.type_cons, Arg6191_1[1], Arg6191_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.split_cc_rules"]]);})))))}, 3, [], "shen.split_cc_rules"];

Shen.fns["shen.split_cc_rule"] = [Shen.type_func, function shen_user_lambda6200(Arg6191) {
  if (Arg6191.length < 3) return [Shen.type_func, shen_user_lambda6200, 3, Arg6191];
  var Arg6191_0 = Arg6191[0], Arg6191_1 = Arg6191[1], Arg6191_2 = Arg6191[2];
  var R0;
  return (((Shen.is_type(Arg6191_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], Arg6191_1[1])) && (Shen.is_type(Arg6191_1[2], Shen.type_cons) && Shen.empty$question$(Arg6191_1[2][2])))))
  ? [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg6191_2]), Arg6191_1[2]]
  : (((Shen.is_type(Arg6191_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":="], Arg6191_1[1])) && (Shen.is_type(Arg6191_1[2], Shen.type_cons) && (Shen.is_type(Arg6191_1[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg6191_1[2][2][1])) && (Shen.is_type(Arg6191_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6191_1[2][2][2][2]))))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["reverse"], [Arg6191_2]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, Arg6191_1[2][2][2][1], [Shen.type_cons, Arg6191_1[2][1], []]]], []]]
  : ((Shen.empty$question$(Arg6191_1))
  ? (Shen.call(Shen.fns["shen.semantic-completion-warning"], [Arg6191_0, Arg6191_2]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rule"], [Arg6191_0, [Shen.type_cons, [Shen.type_symbol, ":="], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Shen.call(Shen.fns["reverse"], [Arg6191_2])]), []]], Arg6191_2]);}))
  : ((Shen.is_type(Arg6191_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.split_cc_rule"], [Arg6191_0, Arg6191_1[2], [Shen.type_cons, Arg6191_1[1], Arg6191_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.split_cc_rule"]]);})))))}, 3, [], "shen.split_cc_rule"];

Shen.fns["shen.semantic-completion-warning"] = [Shen.type_func, function shen_user_lambda6201(Arg6191) {
  if (Arg6191.length < 2) return [Shen.type_func, shen_user_lambda6201, 2, Arg6191];
  var Arg6191_0 = Arg6191[0], Arg6191_1 = Arg6191[1];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg6191_0)))
  ? (Shen.call(Shen.fns["shen.prhush"], ["warning: ", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6203(Arg6202) {
  if (Arg6202.length < 1) return [Shen.type_func, shen_user_lambda6203, 1, Arg6202];
  var Arg6202_0 = Arg6202[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg6202_0, " ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], undefined], Shen.call(Shen.fns["reverse"], [Arg6191_1])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], ["has no semantics.\x0a", Shen.call(Shen.fns["stoutput"], [])]);}))
  : [Shen.type_symbol, "shen.skip"])}, 2, [], "shen.semantic-completion-warning"];

Shen.fns["shen.default_semantics"] = [Shen.type_func, function shen_user_lambda6204(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6204, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0;
  return ((Shen.empty$question$(Arg6191_0))
  ? []
  : (((Shen.is_type(Arg6191_0, Shen.type_cons) && (Shen.empty$question$(Arg6191_0[2]) && Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg6191_0[1]]))))
  ? Arg6191_0[1]
  : (((Shen.is_type(Arg6191_0, Shen.type_cons) && Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg6191_0[1]])))
  ? [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, Arg6191_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Arg6191_0[2]]), []]]]
  : ((Shen.is_type(Arg6191_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg6191_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.default_semantics"], [Arg6191_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.default_semantics"]]);})))))}, 1, [], "shen.default_semantics"];

Shen.fns["shen.grammar_symbol?"] = [Shen.type_func, function shen_user_lambda6205(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6205, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0;
  return (Shen.is_type(Arg6191_0, Shen.type_symbol) && ((R0 = Shen.call(Shen.fns["shen.strip-pathname"], [Shen.call(Shen.fns["explode"], [Arg6191_0])])),
  (Shen.unwind_tail(Shen.$eq$(R0[1], "<")) && Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["reverse"], [R0])[1], ">")))))}, 1, [], "shen.grammar_symbol?"];

Shen.fns["shen.yacc_cases"] = [Shen.type_func, function shen_user_lambda6206(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6206, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0;
  return (((Shen.is_type(Arg6191_0, Shen.type_cons) && Shen.empty$question$(Arg6191_0[2])))
  ? Arg6191_0[1]
  : ((Shen.is_type(Arg6191_0, Shen.type_cons))
  ? ((R0 = [Shen.type_symbol, "YaccParse"]),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, Arg6191_0[1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]], [Shen.type_cons, Shen.call(Shen.fns["shen.yacc_cases"], [Arg6191_0[2]]), [Shen.type_cons, R0, []]]]], []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.yacc_cases"]]);})))}, 1, [], "shen.yacc_cases"];

Shen.fns["shen.cc_body"] = [Shen.type_func, function shen_user_lambda6207(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6207, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0;
  return (((Shen.is_type(Arg6191_0, Shen.type_cons) && (Shen.is_type(Arg6191_0[2], Shen.type_cons) && Shen.empty$question$(Arg6191_0[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.syntax"], [Arg6191_0[1], [Shen.type_symbol, "Stream"], Arg6191_0[2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.cc_body"]]);}))}, 1, [], "shen.cc_body"];

Shen.fns["shen.syntax"] = [Shen.type_func, function shen_user_lambda6208(Arg6191) {
  if (Arg6191.length < 3) return [Shen.type_func, shen_user_lambda6208, 3, Arg6191];
  var Arg6191_0 = Arg6191[0], Arg6191_1 = Arg6191[1], Arg6191_2 = Arg6191[2];
  var R0;
  return (((Shen.empty$question$(Arg6191_0) && (Shen.is_type(Arg6191_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg6191_2[1])) && (Shen.is_type(Arg6191_2[2], Shen.type_cons) && (Shen.is_type(Arg6191_2[2][2], Shen.type_cons) && Shen.empty$question$(Arg6191_2[2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg6191_2[2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg6191_1, []]], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg6191_2[2][2][1]]), []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]]]
  : ((Shen.empty$question$(Arg6191_0))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg6191_1, []]], [Shen.type_cons, Shen.call(Shen.fns["shen.semantics"], [Arg6191_2]), []]]]
  : ((Shen.is_type(Arg6191_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg6191_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.recursive_descent"], [Arg6191_0, Arg6191_1, Arg6191_2]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg6191_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variable-match"], [Arg6191_0, Arg6191_1, Arg6191_2]);})
  : ((Shen.call(Shen.fns["shen.jump_stream?"], [Arg6191_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.jump_stream"], [Arg6191_0, Arg6191_1, Arg6191_2]);})
  : ((Shen.call(Shen.fns["shen.terminal?"], [Arg6191_0[1]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.check_stream"], [Arg6191_0, Arg6191_1, Arg6191_2]);})
  : ((Shen.is_type(Arg6191_0[1], Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.list-stream"], [Shen.call(Shen.fns["shen.decons"], [Arg6191_0[1]]), Arg6191_0[2], Arg6191_1, Arg6191_2]);})
  : (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6191_0[1], " is not legal syntax\x0a", [Shen.type_symbol, "shen.a"]]));}))))))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.syntax"]]);}))))}, 3, [], "shen.syntax"];

Shen.fns["shen.list-stream"] = [Shen.type_func, function shen_user_lambda6209(Arg6191) {
  if (Arg6191.length < 4) return [Shen.type_func, shen_user_lambda6209, 4, Arg6191];
  var Arg6191_0 = Arg6191[0], Arg6191_1 = Arg6191[1], Arg6191_2 = Arg6191[2], Arg6191_3 = Arg6191[3];
  var R0, R1, R2;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg6191_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg6191_2, []]], []]], []]], []]]]),
  (R1 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.place"]])),
  (R2 = Shen.call(Shen.fns["shen.syntax"], [Arg6191_1, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg6191_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, Arg6191_2, []]], []]], []]]], Arg6191_3])),
  (R2 = Shen.call(Shen.fns["shen.insert-runon"], [R2, R1, Shen.call(Shen.fns["shen.syntax"], [Arg6191_0, [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg6191_2, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, Arg6191_2, []]], []]], []]]], R1])])),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]]]])}, 4, [], "shen.list-stream"];

Shen.fns["shen.decons"] = [Shen.type_func, function shen_user_lambda6210(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6210, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6191_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6191_0[1])) && (Shen.is_type(Arg6191_0[2], Shen.type_cons) && (Shen.is_type(Arg6191_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6191_0[2][2][1]) && Shen.empty$question$(Arg6191_0[2][2][2])))))))
  ? [Shen.type_cons, Arg6191_0[2][1], []]
  : (((Shen.is_type(Arg6191_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6191_0[1])) && (Shen.is_type(Arg6191_0[2], Shen.type_cons) && (Shen.is_type(Arg6191_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6191_0[2][2][2]))))))
  ? [Shen.type_cons, Arg6191_0[2][1], Shen.call(Shen.fns["shen.decons"], [Arg6191_0[2][2][1]])]
  : Arg6191_0))}, 1, [], "shen.decons"];

Shen.fns["shen.insert-runon"] = [Shen.type_func, function shen_user_lambda6211(Arg6191) {
  if (Arg6191.length < 3) return [Shen.type_func, shen_user_lambda6211, 3, Arg6191];
  var Arg6191_0 = Arg6191[0], Arg6191_1 = Arg6191[1], Arg6191_2 = Arg6191[2];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6191_2, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.pair"], Arg6191_2[1])) && (Shen.is_type(Arg6191_2[2], Shen.type_cons) && (Shen.is_type(Arg6191_2[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6191_2[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6191_2[2][2][1], Arg6191_1))))))))
  ? Arg6191_0
  : ((Shen.is_type(Arg6191_2, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6213(Arg6212) {
  if (Arg6212.length < 3) return [Shen.type_func, shen_user_lambda6213, 3, Arg6212];
  var Arg6212_0 = Arg6212[0], Arg6212_1 = Arg6212[1], Arg6212_2 = Arg6212[2];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-runon"], [Arg6212_0, Arg6212_1, Arg6212_2]);})}, 3, [Arg6191_0, Arg6191_1], undefined], Arg6191_2]);})
  : Arg6191_2))}, 3, [], "shen.insert-runon"];

Shen.fns["shen.strip-pathname"] = [Shen.type_func, function shen_user_lambda6214(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6214, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0, R1, R2;
  return (((!Shen.call(Shen.fns["element?"], [".", Arg6191_0])))
  ? Arg6191_0
  : ((Shen.is_type(Arg6191_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.strip-pathname"], [Arg6191_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.strip-pathname"]]);})))}, 1, [], "shen.strip-pathname"];

Shen.fns["shen.recursive_descent"] = [Shen.type_func, function shen_user_lambda6215(Arg6191) {
  if (Arg6191.length < 3) return [Shen.type_func, shen_user_lambda6215, 3, Arg6191];
  var Arg6191_0 = Arg6191[0], Arg6191_1 = Arg6191[1], Arg6191_2 = Arg6191[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6191_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, Arg6191_0[1], [Shen.type_cons, Arg6191_1, []]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg6191_0[2], Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg6191_0[1]]), Arg6191_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg6191_0[1]]), [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg6191_0[1]]), []]]], []]], [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]], []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.recursive_descent"]]);}))}, 3, [], "shen.recursive_descent"];

Shen.fns["shen.variable-match"] = [Shen.type_func, function shen_user_lambda6216(Arg6191) {
  if (Arg6191.length < 3) return [Shen.type_func, shen_user_lambda6216, 3, Arg6191];
  var Arg6191_0 = Arg6191[0], Arg6191_1 = Arg6191[1], Arg6191_2 = Arg6191[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6191_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg6191_1, []]], []]]),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg6191_0[1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg6191_1, []]], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.syntax"], [Arg6191_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg6191_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg6191_1, []]], []]]], Arg6191_2]), []]]]]),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.variable-match"]]);}))}, 3, [], "shen.variable-match"];

Shen.fns["shen.terminal?"] = [Shen.type_func, function shen_user_lambda6217(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6217, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6191_0, Shen.type_cons))
  ? false
  : ((Shen.call(Shen.fns["variable?"], [Arg6191_0]))
  ? false
  : true))}, 1, [], "shen.terminal?"];

Shen.fns["shen.jump_stream?"] = [Shen.type_func, function shen_user_lambda6218(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6218, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6191_0, [Shen.type_symbol, "_"])))
  ? true
  : false)}, 1, [], "shen.jump_stream?"];

Shen.fns["shen.check_stream"] = [Shen.type_func, function shen_user_lambda6219(Arg6191) {
  if (Arg6191.length < 3) return [Shen.type_func, shen_user_lambda6219, 3, Arg6191];
  var Arg6191_0 = Arg6191[0], Arg6191_1 = Arg6191[1], Arg6191_2 = Arg6191[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6191_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg6191_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6191_0[1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg6191_1, []]], []]], []]]], []]]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg6191_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg6191_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg6191_1, []]], []]]], Arg6191_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.check_stream"]]);}))}, 3, [], "shen.check_stream"];

Shen.fns["shen.jump_stream"] = [Shen.type_func, function shen_user_lambda6220(Arg6191) {
  if (Arg6191.length < 3) return [Shen.type_func, shen_user_lambda6220, 3, Arg6191];
  var Arg6191_0 = Arg6191[0], Arg6191_1 = Arg6191[1], Arg6191_2 = Arg6191[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6191_0, Shen.type_cons))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg6191_1, []]], []]]),
  (R1 = Shen.call(Shen.fns["shen.syntax"], [Arg6191_0[2], [Shen.type_cons, [Shen.type_symbol, "shen.pair"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, Arg6191_1, []]], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Arg6191_1, []]], []]]], Arg6191_2])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "fail"], []]),
  [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, R0, [Shen.type_cons, R1, [Shen.type_cons, R2, []]]]])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.jump_stream"]]);}))}, 3, [], "shen.jump_stream"];

Shen.fns["shen.semantics"] = [Shen.type_func, function shen_user_lambda6221(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6221, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6191_0))
  ? []
  : ((Shen.call(Shen.fns["shen.grammar_symbol?"], [Arg6191_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.hdtl"], [Shen.type_cons, Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg6191_0]), []]]
  : ((Shen.call(Shen.fns["variable?"], [Arg6191_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "Parse_"], Arg6191_0]);})
  : ((Shen.is_type(Arg6191_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6223(Arg6222) {
  if (Arg6222.length < 1) return [Shen.type_func, shen_user_lambda6223, 1, Arg6222];
  var Arg6222_0 = Arg6222[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.semantics"], [Arg6222_0]);})}, 1, [], undefined], Arg6191_0]);})
  : Arg6191_0))))}, 1, [], "shen.semantics"];

Shen.fns["shen.snd-or-fail"] = [Shen.type_func, function shen_user_lambda6224(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6224, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6191_0, Shen.type_cons) && (Shen.is_type(Arg6191_0[2], Shen.type_cons) && Shen.empty$question$(Arg6191_0[2][2]))))
  ? Arg6191_0[2][1]
  : Shen.fail_obj)}, 1, [], "shen.snd-or-fail"];

Shen.fns["shen.pair"] = [Shen.type_func, function shen_user_lambda6225(Arg6191) {
  if (Arg6191.length < 2) return [Shen.type_func, shen_user_lambda6225, 2, Arg6191];
  var Arg6191_0 = Arg6191[0], Arg6191_1 = Arg6191[1];
  var R0, R1, R2;
  return [Shen.type_cons, Arg6191_0, [Shen.type_cons, Arg6191_1, []]]}, 2, [], "shen.pair"];

Shen.fns["shen.hdtl"] = [Shen.type_func, function shen_user_lambda6226(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6226, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0, R1, R2;
  return Arg6191_0[2][1]}, 1, [], "shen.hdtl"];

Shen.fns["shen.<!>"] = [Shen.type_func, function shen_user_lambda6227(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6227, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6191_0, Shen.type_cons) && (Shen.is_type(Arg6191_0[2], Shen.type_cons) && Shen.empty$question$(Arg6191_0[2][2]))))
  ? [Shen.type_cons, [], [Shen.type_cons, Arg6191_0[1], []]]
  : Shen.fail_obj)}, 1, [], "shen.<!>"];

Shen.fns["<e>"] = [Shen.type_func, function shen_user_lambda6228(Arg6191) {
  if (Arg6191.length < 1) return [Shen.type_func, shen_user_lambda6228, 1, Arg6191];
  var Arg6191_0 = Arg6191[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6191_0, Shen.type_cons) && (Shen.is_type(Arg6191_0[2], Shen.type_cons) && Shen.empty$question$(Arg6191_0[2][2]))))
  ? [Shen.type_cons, Arg6191_0[1], [Shen.type_cons, [], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "<e>"]]);}))}, 1, [], "<e>"];

Shen.call_toplevel(function js$dot$shen_js_toplevel6229(Arg6191) {
  if (Arg6191.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6229, 0, Arg6191];
  var R0, R1, R2;
  return []});


"Copyright (c) 2015, Mark Tarver\x0d\x0a\x0d\x0aAll rights reserved.\x0d\x0a\x0d\x0aRedistribution and use in source and binary forms, with or without\x0d\x0amodification, are permitted provided that the following conditions are met:\x0d\x0a1. Redistributions of source code must retain the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer.\x0d\x0a2. Redistributions in binary form must reproduce the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer in the\x0d\x0a   documentation and/or other materials provided with the distribution.\x0d\x0a3. The name of Mark Tarver may not be used to endorse or promote products\x0d\x0a   derived from this software without specific prior written permission.\x0d\x0a\x0d\x0aTHIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY\x0d\x0aEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\x0d\x0aWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\x0d\x0aDISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY\x0d\x0aDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\x0d\x0a(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\x0d\x0aLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\x0d\x0aON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0d\x0a(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\x0d\x0aSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";

Shen.fns["read-file-as-bytelist"] = [Shen.type_func, function shen_user_lambda6234(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6234, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((R0 = Shen.open(Arg6233_0, [Shen.type_symbol, "in"])),
  (R1 = Shen.read_byte(R0)),
  (R1 = Shen.call(Shen.fns["shen.read-file-as-bytelist-help"], [R0, R1, []])),
  Shen.close(R0),
  (function() {
  return Shen.call_tail(Shen.fns["reverse"], [R1]);}))}, 1, [], "read-file-as-bytelist"];

Shen.fns["shen.read-file-as-bytelist-help"] = [Shen.type_func, function shen_user_lambda6235(Arg6233) {
  if (Arg6233.length < 3) return [Shen.type_func, shen_user_lambda6235, 3, Arg6233];
  var Arg6233_0 = Arg6233[0], Arg6233_1 = Arg6233[1], Arg6233_2 = Arg6233[2];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg6233_1)))
  ? Arg6233_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.read-file-as-bytelist-help"], [Arg6233_0, Shen.read_byte(Arg6233_0), [Shen.type_cons, Arg6233_1, Arg6233_2]]);}))}, 3, [], "shen.read-file-as-bytelist-help"];

Shen.fns["read-file-as-string"] = [Shen.type_func, function shen_user_lambda6236(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6236, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((R0 = Shen.open(Arg6233_0, [Shen.type_symbol, "in"])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.rfas-h"], [R0, Shen.read_byte(R0), ""]);}))}, 1, [], "read-file-as-string"];

Shen.fns["shen.rfas-h"] = [Shen.type_func, function shen_user_lambda6237(Arg6233) {
  if (Arg6233.length < 3) return [Shen.type_func, shen_user_lambda6237, 3, Arg6233];
  var Arg6233_0 = Arg6233[0], Arg6233_1 = Arg6233[1], Arg6233_2 = Arg6233[2];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg6233_1)))
  ? (Shen.close(Arg6233_0),
  Arg6233_2)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.rfas-h"], [Arg6233_0, Shen.read_byte(Arg6233_0), (Arg6233_2 + Shen.n_$gt$string(Arg6233_1))]);}))}, 3, [], "shen.rfas-h"];

Shen.fns["input"] = [Shen.type_func, function shen_user_lambda6238(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6238, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (function() {
  return Shen.eval_kl(Shen.call(Shen.fns["read"], [Arg6233_0]));})}, 1, [], "input"];

Shen.fns["input+"] = [Shen.type_func, function shen_user_lambda6239(Arg6233) {
  if (Arg6233.length < 2) return [Shen.type_func, shen_user_lambda6239, 2, Arg6233];
  var Arg6233_0 = Arg6233[0], Arg6233_1 = Arg6233[1];
  var R0, R1;
  return (Shen.call(Shen.fns["shen.monotype"], [Arg6233_0]),
  (R0 = Shen.call(Shen.fns["read"], [Arg6233_1])),
  ((Shen.unwind_tail(Shen.$eq$(false, Shen.call(Shen.fns["shen.typecheck"], [R0, Shen.call(Shen.fns["shen.demodulate"], [Arg6233_0])]))))
  ? (function() {
  return Shen.simple_error(("type error: " + Shen.call(Shen.fns["shen.app"], [R0, (" is not of type " + Shen.call(Shen.fns["shen.app"], [Arg6233_0, "\x0a", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]])));})
  : (function() {
  return Shen.eval_kl(R0);})))}, 2, [], "input+"];

Shen.fns["shen.monotype"] = [Shen.type_func, function shen_user_lambda6240(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6240, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((Shen.is_type(Arg6233_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6242(Arg6241) {
  if (Arg6241.length < 1) return [Shen.type_func, shen_user_lambda6242, 1, Arg6241];
  var Arg6241_0 = Arg6241[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.monotype"], [Arg6241_0]);})}, 1, [], undefined], Arg6233_0]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg6233_0]))
  ? (function() {
  return Shen.simple_error(("input+ expects a monotype: not " + Shen.call(Shen.fns["shen.app"], [Arg6233_0, "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : Arg6233_0))}, 1, [], "shen.monotype"];

Shen.fns["read"] = [Shen.type_func, function shen_user_lambda6243(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6243, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return Shen.call(Shen.fns["shen.read-loop"], [Arg6233_0, Shen.read_byte(Arg6233_0), []])[1]}, 1, [], "read"];

Shen.fns["it"] = [Shen.type_func, function shen_user_lambda6244(Arg6233) {
  if (Arg6233.length < 0) return [Shen.type_func, shen_user_lambda6244, 0, Arg6233];
  var R0, R1;
  return (Shen.globals["shen.*it*"])}, 0, [], "it"];

Shen.fns["shen.read-loop"] = [Shen.type_func, function shen_user_lambda6245(Arg6233) {
  if (Arg6233.length < 3) return [Shen.type_func, shen_user_lambda6245, 3, Arg6233];
  var Arg6233_0 = Arg6233[0], Arg6233_1 = Arg6233[1], Arg6233_2 = Arg6233[2];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(94, Arg6233_1)))
  ? (function() {
  return Shen.simple_error("read aborted");})
  : ((Shen.unwind_tail(Shen.$eq$(-1, Arg6233_1)))
  ? ((Shen.empty$question$(Arg6233_2))
  ? (function() {
  return Shen.simple_error("error: empty stream");})
  : (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda6247(Arg6246) {
  if (Arg6246.length < 1) return [Shen.type_func, shen_user_lambda6247, 1, Arg6246];
  var Arg6246_0 = Arg6246[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg6246_0]);})}, 1, [], undefined], Arg6233_2, [Shen.type_func, function shen_user_lambda6249(Arg6248) {
  if (Arg6248.length < 1) return [Shen.type_func, shen_user_lambda6249, 1, Arg6248];
  var Arg6248_0 = Arg6248[0];
  return Arg6248_0}, 1, [], undefined]]);}))
  : ((Shen.call(Shen.fns["shen.terminator?"], [Arg6233_1]))
  ? ((R0 = Shen.call(Shen.fns["append"], [Arg6233_2, [Shen.type_cons, Arg6233_1, []]])),
  Shen.call(Shen.fns["shen.record-it"], [R0]),
  (R1 = Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda6251(Arg6250) {
  if (Arg6250.length < 1) return [Shen.type_func, shen_user_lambda6251, 1, Arg6250];
  var Arg6250_0 = Arg6250[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg6250_0]);})}, 1, [], undefined], R0, [Shen.type_func, function shen_user_lambda6253(Arg6252) {
  if (Arg6252.length < 1) return [Shen.type_func, shen_user_lambda6253, 1, Arg6252];
  var Arg6252_0 = Arg6252[0];
  return [Shen.type_symbol, "shen.nextbyte"]}, 1, [], undefined]])),
  (((Shen.unwind_tail(Shen.$eq$(R1, [Shen.type_symbol, "shen.nextbyte"])) || Shen.empty$question$(R1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.read-loop"], [Arg6233_0, Shen.read_byte(Arg6233_0), R0]);})
  : R1))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.read-loop"], [Arg6233_0, Shen.read_byte(Arg6233_0), Shen.call(Shen.fns["append"], [Arg6233_2, [Shen.type_cons, Arg6233_1, []]])]);}))))}, 3, [], "shen.read-loop"];

Shen.fns["shen.terminator?"] = [Shen.type_func, function shen_user_lambda6254(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6254, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6233_0, [Shen.type_cons, 9, [Shen.type_cons, 10, [Shen.type_cons, 13, [Shen.type_cons, 32, [Shen.type_cons, 34, [Shen.type_cons, 41, [Shen.type_cons, 93, []]]]]]]]]);})}, 1, [], "shen.terminator?"];

Shen.fns["lineread"] = [Shen.type_func, function shen_user_lambda6255(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6255, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Arg6233_0), [], Arg6233_0]);})}, 1, [], "lineread"];

Shen.fns["shen.lineread-loop"] = [Shen.type_func, function shen_user_lambda6256(Arg6233) {
  if (Arg6233.length < 3) return [Shen.type_func, shen_user_lambda6256, 3, Arg6233];
  var Arg6233_0 = Arg6233[0], Arg6233_1 = Arg6233[1], Arg6233_2 = Arg6233[2];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(-1, Arg6233_0)))
  ? ((Shen.empty$question$(Arg6233_1))
  ? (function() {
  return Shen.simple_error("empty stream");})
  : (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda6258(Arg6257) {
  if (Arg6257.length < 1) return [Shen.type_func, shen_user_lambda6258, 1, Arg6257];
  var Arg6257_0 = Arg6257[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg6257_0]);})}, 1, [], undefined], Arg6233_1, [Shen.type_func, function shen_user_lambda6260(Arg6259) {
  if (Arg6259.length < 1) return [Shen.type_func, shen_user_lambda6260, 1, Arg6259];
  var Arg6259_0 = Arg6259[0];
  return Arg6259_0}, 1, [], undefined]]);}))
  : ((Shen.unwind_tail(Shen.$eq$(Arg6233_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("line read aborted");})
  : ((Shen.call(Shen.fns["element?"], [Arg6233_0, [Shen.type_cons, Shen.call(Shen.fns["shen.newline"], []), [Shen.type_cons, Shen.call(Shen.fns["shen.carriage-return"], []), []]]]))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda6262(Arg6261) {
  if (Arg6261.length < 1) return [Shen.type_func, shen_user_lambda6262, 1, Arg6261];
  var Arg6261_0 = Arg6261[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg6261_0]);})}, 1, [], undefined], Arg6233_1, [Shen.type_func, function shen_user_lambda6264(Arg6263) {
  if (Arg6263.length < 1) return [Shen.type_func, shen_user_lambda6264, 1, Arg6263];
  var Arg6263_0 = Arg6263[0];
  return [Shen.type_symbol, "shen.nextline"]}, 1, [], undefined]])),
  Shen.call(Shen.fns["shen.record-it"], [Arg6233_1]),
  (((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.nextline"])) || Shen.empty$question$(R0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Arg6233_2), Shen.call(Shen.fns["append"], [Arg6233_1, [Shen.type_cons, Arg6233_0, []]]), Arg6233_2]);})
  : R0))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.lineread-loop"], [Shen.read_byte(Arg6233_2), Shen.call(Shen.fns["append"], [Arg6233_1, [Shen.type_cons, Arg6233_0, []]]), Arg6233_2]);}))))}, 3, [], "shen.lineread-loop"];

Shen.fns["shen.record-it"] = [Shen.type_func, function shen_user_lambda6265(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6265, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.trim-whitespace"], [Arg6233_0])),
  (R0 = Shen.call(Shen.fns["shen.trim-whitespace"], [Shen.call(Shen.fns["reverse"], [R0])])),
  (R0 = Shen.call(Shen.fns["reverse"], [R0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.record-it-h"], [R0]);}))}, 1, [], "shen.record-it"];

Shen.fns["shen.trim-whitespace"] = [Shen.type_func, function shen_user_lambda6266(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6266, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0, Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg6233_0[1], [Shen.type_cons, 9, [Shen.type_cons, 10, [Shen.type_cons, 13, [Shen.type_cons, 32, []]]]]])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.trim-whitespace"], [Arg6233_0[2]]);})
  : Arg6233_0)}, 1, [], "shen.trim-whitespace"];

Shen.fns["shen.record-it-h"] = [Shen.type_func, function shen_user_lambda6267(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6267, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((Shen.globals["shen.*it*"] = Shen.call(Shen.fns["shen.cn-all"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6269(Arg6268) {
  if (Arg6268.length < 1) return [Shen.type_func, shen_user_lambda6269, 1, Arg6268];
  var Arg6268_0 = Arg6268[0];
  return (function() {
  return Shen.n_$gt$string(Arg6268_0);})}, 1, [], undefined], Arg6233_0])])),
  Arg6233_0)}, 1, [], "shen.record-it-h"];

Shen.fns["shen.cn-all"] = [Shen.type_func, function shen_user_lambda6270(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6270, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6233_0))
  ? ""
  : ((Shen.is_type(Arg6233_0, Shen.type_cons))
  ? (Arg6233_0[1] + Shen.call(Shen.fns["shen.cn-all"], [Arg6233_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.cn-all"]]);})))}, 1, [], "shen.cn-all"];

Shen.fns["read-file"] = [Shen.type_func, function shen_user_lambda6271(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6271, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["read-file-as-bytelist"], [Arg6233_0])),
  (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda6273(Arg6272) {
  if (Arg6272.length < 1) return [Shen.type_func, shen_user_lambda6273, 1, Arg6272];
  var Arg6272_0 = Arg6272[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg6272_0]);})}, 1, [], undefined], R0, [Shen.type_func, function shen_user_lambda6275(Arg6274) {
  if (Arg6274.length < 1) return [Shen.type_func, shen_user_lambda6275, 1, Arg6274];
  var Arg6274_0 = Arg6274[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.read-error"], [Arg6274_0]);})}, 1, [], undefined]]);}))}, 1, [], "read-file"];

Shen.fns["read-from-string"] = [Shen.type_func, function shen_user_lambda6276(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6276, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6278(Arg6277) {
  if (Arg6277.length < 1) return [Shen.type_func, shen_user_lambda6278, 1, Arg6277];
  var Arg6277_0 = Arg6277[0];
  return (function() {
  return Shen.string_$gt$n(Arg6277_0);})}, 1, [], undefined], Shen.call(Shen.fns["explode"], [Arg6233_0])])),
  (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda6280(Arg6279) {
  if (Arg6279.length < 1) return [Shen.type_func, shen_user_lambda6280, 1, Arg6279];
  var Arg6279_0 = Arg6279[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<st_input>"], [Arg6279_0]);})}, 1, [], undefined], R0, [Shen.type_func, function shen_user_lambda6282(Arg6281) {
  if (Arg6281.length < 1) return [Shen.type_func, shen_user_lambda6282, 1, Arg6281];
  var Arg6281_0 = Arg6281[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.read-error"], [Arg6281_0]);})}, 1, [], undefined]]);}))}, 1, [], "read-from-string"];

Shen.fns["shen.read-error"] = [Shen.type_func, function shen_user_lambda6283(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6283, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0, Shen.type_cons) && (Shen.is_type(Arg6233_0[1], Shen.type_cons) && (Shen.is_type(Arg6233_0[2], Shen.type_cons) && Shen.empty$question$(Arg6233_0[2][2])))))
  ? (function() {
  return Shen.simple_error(("read error here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.compress-50"], [50, Arg6233_0[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.simple_error("read error\x0a");}))}, 1, [], "shen.read-error"];

Shen.fns["shen.compress-50"] = [Shen.type_func, function shen_user_lambda6284(Arg6233) {
  if (Arg6233.length < 2) return [Shen.type_func, shen_user_lambda6284, 2, Arg6233];
  var Arg6233_0 = Arg6233[0], Arg6233_1 = Arg6233[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg6233_1))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg6233_0)))
  ? ""
  : ((Shen.is_type(Arg6233_1, Shen.type_cons))
  ? (Shen.n_$gt$string(Arg6233_1[1]) + Shen.call(Shen.fns["shen.compress-50"], [(Arg6233_0 - 1), Arg6233_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.compress-50"]]);}))))}, 2, [], "shen.compress-50"];

Shen.fns["shen.<st_input>"] = [Shen.type_func, function shen_user_lambda6285(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6285, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<lsb>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input1>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rsb>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input2>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.cons_form"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<lrb>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input1>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<rrb>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input2>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.package-macro"], [Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<lcurly>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "{"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<rcurly>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "}"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<bar>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, "bar!"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<semicolon>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ";"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<equal>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":="], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<minus>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":-"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<colon>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ":"], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<comma>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, [Shen.type_symbol, ","], Shen.call(Shen.fns["shen.hdtl"], [R0])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<comment>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<atom>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["macroexpand"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<whitespaces>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["<e>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], []]);})
  : Shen.fail_obj))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<st_input>"];

Shen.fns["shen.<lsb>"] = [Shen.type_func, function shen_user_lambda6286(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6286, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(91, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<lsb>"];

Shen.fns["shen.<rsb>"] = [Shen.type_func, function shen_user_lambda6287(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6287, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(93, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<rsb>"];

Shen.fns["shen.<lcurly>"] = [Shen.type_func, function shen_user_lambda6288(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6288, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(123, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<lcurly>"];

Shen.fns["shen.<rcurly>"] = [Shen.type_func, function shen_user_lambda6289(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6289, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(125, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<rcurly>"];

Shen.fns["shen.<bar>"] = [Shen.type_func, function shen_user_lambda6290(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6290, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(124, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<bar>"];

Shen.fns["shen.<semicolon>"] = [Shen.type_func, function shen_user_lambda6291(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6291, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(59, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<semicolon>"];

Shen.fns["shen.<colon>"] = [Shen.type_func, function shen_user_lambda6292(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6292, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(58, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<colon>"];

Shen.fns["shen.<comma>"] = [Shen.type_func, function shen_user_lambda6293(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6293, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(44, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<comma>"];

Shen.fns["shen.<equal>"] = [Shen.type_func, function shen_user_lambda6294(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6294, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(61, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<equal>"];

Shen.fns["shen.<minus>"] = [Shen.type_func, function shen_user_lambda6295(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6295, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(45, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<minus>"];

Shen.fns["shen.<lrb>"] = [Shen.type_func, function shen_user_lambda6296(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6296, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(40, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<lrb>"];

Shen.fns["shen.<rrb>"] = [Shen.type_func, function shen_user_lambda6297(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6297, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(41, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<rrb>"];

Shen.fns["shen.<atom>"] = [Shen.type_func, function shen_user_lambda6298(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6298, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<str>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.control-chars"], [Shen.call(Shen.fns["shen.hdtl"], [R0])])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<number>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<sym>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["shen.hdtl"], [R0]), "<>")))
  ? [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 0, []]]
  : Shen.intern(Shen.call(Shen.fns["shen.hdtl"], [R0])))]);})
  : Shen.fail_obj))
  : R0))
  : R0))}, 1, [], "shen.<atom>"];

Shen.fns["shen.control-chars"] = [Shen.type_func, function shen_user_lambda6299(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6299, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6233_0))
  ? ""
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$("c", Arg6233_0[1])) && (Shen.is_type(Arg6233_0[2], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("#", Arg6233_0[2][1]))))))
  ? ((R0 = Shen.call(Shen.fns["shen.code-point"], [Arg6233_0[2][2]])),
  (R1 = Shen.call(Shen.fns["shen.after-codepoint"], [Arg6233_0[2][2]])),
  (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.n_$gt$string(Shen.call(Shen.fns["shen.decimalise"], [R0])), Shen.call(Shen.fns["shen.control-chars"], [R1])]);}))
  : ((Shen.is_type(Arg6233_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Arg6233_0[1], Shen.call(Shen.fns["shen.control-chars"], [Arg6233_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.control-chars"]]);}))))}, 1, [], "shen.control-chars"];

Shen.fns["shen.code-point"] = [Shen.type_func, function shen_user_lambda6300(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6300, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(";", Arg6233_0[1]))))
  ? ""
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg6233_0[1], [Shen.type_cons, "0", [Shen.type_cons, "1", [Shen.type_cons, "2", [Shen.type_cons, "3", [Shen.type_cons, "4", [Shen.type_cons, "5", [Shen.type_cons, "6", [Shen.type_cons, "7", [Shen.type_cons, "8", [Shen.type_cons, "9", [Shen.type_cons, "0", []]]]]]]]]]]]])))
  ? [Shen.type_cons, Arg6233_0[1], Shen.call(Shen.fns["shen.code-point"], [Arg6233_0[2]])]
  : (function() {
  return Shen.simple_error(("code point parse error " + Shen.call(Shen.fns["shen.app"], [Arg6233_0, "\x0a", [Shen.type_symbol, "shen.a"]])));})))}, 1, [], "shen.code-point"];

Shen.fns["shen.after-codepoint"] = [Shen.type_func, function shen_user_lambda6301(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6301, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6233_0))
  ? []
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(";", Arg6233_0[1]))))
  ? Arg6233_0[2]
  : ((Shen.is_type(Arg6233_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.after-codepoint"], [Arg6233_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.after-codepoint"]]);}))))}, 1, [], "shen.after-codepoint"];

Shen.fns["shen.decimalise"] = [Shen.type_func, function shen_user_lambda6302(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6302, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.digits->integers"], [Arg6233_0])]), 0]);})}, 1, [], "shen.decimalise"];

Shen.fns["shen.digits->integers"] = [Shen.type_func, function shen_user_lambda6303(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6303, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((Shen.is_type(Arg6233_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("0", Arg6233_0[1]))))
  ? [Shen.type_cons, 0, Shen.call(Shen.fns["shen.digits->integers"], [Arg6233_0[2]])]
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("1", Arg6233_0[1]))))
  ? [Shen.type_cons, 1, Shen.call(Shen.fns["shen.digits->integers"], [Arg6233_0[2]])]
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("2", Arg6233_0[1]))))
  ? [Shen.type_cons, 2, Shen.call(Shen.fns["shen.digits->integers"], [Arg6233_0[2]])]
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("3", Arg6233_0[1]))))
  ? [Shen.type_cons, 3, Shen.call(Shen.fns["shen.digits->integers"], [Arg6233_0[2]])]
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("4", Arg6233_0[1]))))
  ? [Shen.type_cons, 4, Shen.call(Shen.fns["shen.digits->integers"], [Arg6233_0[2]])]
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("5", Arg6233_0[1]))))
  ? [Shen.type_cons, 5, Shen.call(Shen.fns["shen.digits->integers"], [Arg6233_0[2]])]
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("6", Arg6233_0[1]))))
  ? [Shen.type_cons, 6, Shen.call(Shen.fns["shen.digits->integers"], [Arg6233_0[2]])]
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("7", Arg6233_0[1]))))
  ? [Shen.type_cons, 7, Shen.call(Shen.fns["shen.digits->integers"], [Arg6233_0[2]])]
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("8", Arg6233_0[1]))))
  ? [Shen.type_cons, 8, Shen.call(Shen.fns["shen.digits->integers"], [Arg6233_0[2]])]
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$("9", Arg6233_0[1]))))
  ? [Shen.type_cons, 9, Shen.call(Shen.fns["shen.digits->integers"], [Arg6233_0[2]])]
  : []))))))))))}, 1, [], "shen.digits->integers"];

Shen.fns["shen.<sym>"] = [Shen.type_func, function shen_user_lambda6304(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6304, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.<alpha>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<alphanums>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]);})
  : Shen.fail_obj))
  : Shen.fail_obj))}, 1, [], "shen.<sym>"];

Shen.fns["shen.<alphanums>"] = [Shen.type_func, function shen_user_lambda6305(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6305, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<alphanum>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<alphanums>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["<e>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], ""]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<alphanums>"];

Shen.fns["shen.<alphanum>"] = [Shen.type_func, function shen_user_lambda6306(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6306, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<alpha>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<num>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<alphanum>"];

Shen.fns["shen.<num>"] = [Shen.type_func, function shen_user_lambda6307(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6307, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((Shen.is_type(Arg6233_0[1], Shen.type_cons))
  ? ((R0 = Arg6233_0[1][1]),
  ((Shen.call(Shen.fns["shen.numbyte?"], [R0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], Shen.n_$gt$string(R0)]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<num>"];

Shen.fns["shen.numbyte?"] = [Shen.type_func, function shen_user_lambda6308(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6308, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(48, Arg6233_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(49, Arg6233_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(50, Arg6233_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(51, Arg6233_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(52, Arg6233_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(53, Arg6233_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(54, Arg6233_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(55, Arg6233_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(56, Arg6233_0)))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(57, Arg6233_0)))
  ? true
  : false))))))))))}, 1, [], "shen.numbyte?"];

Shen.fns["shen.<alpha>"] = [Shen.type_func, function shen_user_lambda6309(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6309, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((Shen.is_type(Arg6233_0[1], Shen.type_cons))
  ? ((R0 = Arg6233_0[1][1]),
  ((Shen.call(Shen.fns["shen.symbol-code?"], [R0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], Shen.n_$gt$string(R0)]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<alpha>"];

Shen.fns["shen.symbol-code?"] = [Shen.type_func, function shen_user_lambda6310(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6310, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (Shen.unwind_tail(Shen.$eq$(Arg6233_0, 126)) || (((Arg6233_0 > 94) && (Arg6233_0 < 123)) || (((Arg6233_0 > 59) && (Arg6233_0 < 91)) || (((Arg6233_0 > 41) && ((Arg6233_0 < 58) && (!Shen.unwind_tail(Shen.$eq$(Arg6233_0, 44))))) || (((Arg6233_0 > 34) && (Arg6233_0 < 40)) || Shen.unwind_tail(Shen.$eq$(Arg6233_0, 33)))))))}, 1, [], "shen.symbol-code?"];

Shen.fns["shen.<str>"] = [Shen.type_func, function shen_user_lambda6311(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6311, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.<dbq>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<strcontents>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<dbq>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]);})
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj))}, 1, [], "shen.<str>"];

Shen.fns["shen.<dbq>"] = [Shen.type_func, function shen_user_lambda6312(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6312, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((Shen.is_type(Arg6233_0[1], Shen.type_cons))
  ? ((R0 = Arg6233_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 34)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], R0]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<dbq>"];

Shen.fns["shen.<strcontents>"] = [Shen.type_func, function shen_user_lambda6313(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6313, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<strc>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<strcontents>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["<e>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], []]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<strcontents>"];

Shen.fns["shen.<byte>"] = [Shen.type_func, function shen_user_lambda6314(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6314, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((Shen.is_type(Arg6233_0[1], Shen.type_cons))
  ? ((R0 = Arg6233_0[1][1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], Shen.n_$gt$string(R0)]);}))
  : Shen.fail_obj)}, 1, [], "shen.<byte>"];

Shen.fns["shen.<strc>"] = [Shen.type_func, function shen_user_lambda6315(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6315, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1;
  return ((Shen.is_type(Arg6233_0[1], Shen.type_cons))
  ? ((R0 = Arg6233_0[1][1]),
  (((!Shen.unwind_tail(Shen.$eq$(R0, 34))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], Shen.n_$gt$string(R0)]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<strc>"];

Shen.fns["shen.<number>"] = [Shen.type_func, function shen_user_lambda6316(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6316, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<minus>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<number>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], (0 - Shen.call(Shen.fns["shen.hdtl"], [R0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<plus>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<number>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<predigits>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<stop>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<postdigits>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<E>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? ((R2 = Shen.call(Shen.fns["shen.<log10>"], [R2])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R2[1], (Shen.call(Shen.fns["shen.expt"], [10, Shen.call(Shen.fns["shen.hdtl"], [R2])]) * (Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]) + Shen.call(Shen.fns["shen.post"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), 1])))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<E>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<log10>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], (Shen.call(Shen.fns["shen.expt"], [10, Shen.call(Shen.fns["shen.hdtl"], [R1])]) * Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<predigits>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<stop>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R1 = Shen.call(Shen.fns["shen.<postdigits>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], (Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]) + Shen.call(Shen.fns["shen.post"], [Shen.call(Shen.fns["shen.hdtl"], [R1]), 1]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0])]);})
  : Shen.fail_obj))
  : R0))
  : R0))
  : R0))
  : R0))
  : R0))}, 1, [], "shen.<number>"];

Shen.fns["shen.<E>"] = [Shen.type_func, function shen_user_lambda6317(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6317, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(101, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<E>"];

Shen.fns["shen.<log10>"] = [Shen.type_func, function shen_user_lambda6318(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6318, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<minus>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<digits>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], (0 - Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0]))]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.pre"], [Shen.call(Shen.fns["reverse"], [Shen.call(Shen.fns["shen.hdtl"], [R0])]), 0])]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<log10>"];

Shen.fns["shen.<plus>"] = [Shen.type_func, function shen_user_lambda6319(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6319, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6233_0[1], Shen.type_cons))
  ? ((R0 = Arg6233_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 43)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], R0]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<plus>"];

Shen.fns["shen.<stop>"] = [Shen.type_func, function shen_user_lambda6320(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6320, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6233_0[1], Shen.type_cons))
  ? ((R0 = Arg6233_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, 46)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], R0]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<stop>"];

Shen.fns["shen.<predigits>"] = [Shen.type_func, function shen_user_lambda6321(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6321, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["<e>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], []]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<predigits>"];

Shen.fns["shen.<postdigits>"] = [Shen.type_func, function shen_user_lambda6322(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6322, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.<digits>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]);})
  : Shen.fail_obj))}, 1, [], "shen.<postdigits>"];

Shen.fns["shen.<digits>"] = [Shen.type_func, function shen_user_lambda6323(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6323, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<digit>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<digits>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<digit>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<digits>"];

Shen.fns["shen.<digit>"] = [Shen.type_func, function shen_user_lambda6324(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6324, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6233_0[1], Shen.type_cons))
  ? ((R0 = Arg6233_0[1][1]),
  ((Shen.call(Shen.fns["shen.numbyte?"], [R0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], Shen.call(Shen.fns["shen.byte->digit"], [R0])]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<digit>"];

Shen.fns["shen.byte->digit"] = [Shen.type_func, function shen_user_lambda6325(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6325, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(48, Arg6233_0)))
  ? 0
  : ((Shen.unwind_tail(Shen.$eq$(49, Arg6233_0)))
  ? 1
  : ((Shen.unwind_tail(Shen.$eq$(50, Arg6233_0)))
  ? 2
  : ((Shen.unwind_tail(Shen.$eq$(51, Arg6233_0)))
  ? 3
  : ((Shen.unwind_tail(Shen.$eq$(52, Arg6233_0)))
  ? 4
  : ((Shen.unwind_tail(Shen.$eq$(53, Arg6233_0)))
  ? 5
  : ((Shen.unwind_tail(Shen.$eq$(54, Arg6233_0)))
  ? 6
  : ((Shen.unwind_tail(Shen.$eq$(55, Arg6233_0)))
  ? 7
  : ((Shen.unwind_tail(Shen.$eq$(56, Arg6233_0)))
  ? 8
  : ((Shen.unwind_tail(Shen.$eq$(57, Arg6233_0)))
  ? 9
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.byte->digit"]]);})))))))))))}, 1, [], "shen.byte->digit"];

Shen.fns["shen.pre"] = [Shen.type_func, function shen_user_lambda6326(Arg6233) {
  if (Arg6233.length < 2) return [Shen.type_func, shen_user_lambda6326, 2, Arg6233];
  var Arg6233_0 = Arg6233[0], Arg6233_1 = Arg6233[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6233_0))
  ? 0
  : ((Shen.is_type(Arg6233_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.expt"], [10, Arg6233_1]) * Arg6233_0[1]) + Shen.call(Shen.fns["shen.pre"], [Arg6233_0[2], (Arg6233_1 + 1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.pre"]]);})))}, 2, [], "shen.pre"];

Shen.fns["shen.post"] = [Shen.type_func, function shen_user_lambda6327(Arg6233) {
  if (Arg6233.length < 2) return [Shen.type_func, shen_user_lambda6327, 2, Arg6233];
  var Arg6233_0 = Arg6233[0], Arg6233_1 = Arg6233[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6233_0))
  ? 0
  : ((Shen.is_type(Arg6233_0, Shen.type_cons))
  ? ((Shen.call(Shen.fns["shen.expt"], [10, (0 - Arg6233_1)]) * Arg6233_0[1]) + Shen.call(Shen.fns["shen.post"], [Arg6233_0[2], (Arg6233_1 + 1)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.post"]]);})))}, 2, [], "shen.post"];

Shen.fns["shen.expt"] = [Shen.type_func, function shen_user_lambda6328(Arg6233) {
  if (Arg6233.length < 2) return [Shen.type_func, shen_user_lambda6328, 2, Arg6233];
  var Arg6233_0 = Arg6233[0], Arg6233_1 = Arg6233[1];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6233_1)))
  ? 1
  : (((Arg6233_1 > 0))
  ? (Arg6233_0 * Shen.call(Shen.fns["shen.expt"], [Arg6233_0, (Arg6233_1 - 1)]))
  : (1.0 * (Shen.call(Shen.fns["shen.expt"], [Arg6233_0, (Arg6233_1 + 1)]) / Arg6233_0))))}, 2, [], "shen.expt"];

Shen.fns["shen.<st_input1>"] = [Shen.type_func, function shen_user_lambda6329(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6329, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]);})
  : Shen.fail_obj))}, 1, [], "shen.<st_input1>"];

Shen.fns["shen.<st_input2>"] = [Shen.type_func, function shen_user_lambda6330(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6330, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.<st_input>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]);})
  : Shen.fail_obj))}, 1, [], "shen.<st_input2>"];

Shen.fns["shen.<comment>"] = [Shen.type_func, function shen_user_lambda6331(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6331, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<singleline>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<multiline>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<comment>"];

Shen.fns["shen.<singleline>"] = [Shen.type_func, function shen_user_lambda6332(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6332, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.<backslash>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<backslash>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anysingle>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<return>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj))}, 1, [], "shen.<singleline>"];

Shen.fns["shen.<backslash>"] = [Shen.type_func, function shen_user_lambda6333(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6333, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(92, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<backslash>"];

Shen.fns["shen.<anysingle>"] = [Shen.type_func, function shen_user_lambda6334(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6334, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<non-return>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anysingle>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["<e>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<anysingle>"];

Shen.fns["shen.<non-return>"] = [Shen.type_func, function shen_user_lambda6335(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6335, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6233_0[1], Shen.type_cons))
  ? ((R0 = Arg6233_0[1][1]),
  (((!Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, 10, [Shen.type_cons, 13, []]]])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<non-return>"];

Shen.fns["shen.<return>"] = [Shen.type_func, function shen_user_lambda6336(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6336, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6233_0[1], Shen.type_cons))
  ? ((R0 = Arg6233_0[1][1]),
  ((Shen.call(Shen.fns["element?"], [R0, [Shen.type_cons, 10, [Shen.type_cons, 13, []]]]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<return>"];

Shen.fns["shen.<multiline>"] = [Shen.type_func, function shen_user_lambda6337(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6337, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.<backslash>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<times>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anymulti>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj))}, 1, [], "shen.<multiline>"];

Shen.fns["shen.<times>"] = [Shen.type_func, function shen_user_lambda6338(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6338, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6233_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(42, Arg6233_0[1][1]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj)}, 1, [], "shen.<times>"];

Shen.fns["shen.<anymulti>"] = [Shen.type_func, function shen_user_lambda6339(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6339, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<comment>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<anymulti>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? (((R0 = Shen.call(Shen.fns["shen.<times>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<backslash>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((Shen.is_type(Arg6233_0[1], Shen.type_cons))
  ? (Arg6233_0[1][1],
  (R0 = Shen.call(Shen.fns["shen.<anymulti>"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj))
  : Shen.fail_obj)
  : R0))
  : R0))}, 1, [], "shen.<anymulti>"];

Shen.fns["shen.<whitespaces>"] = [Shen.type_func, function shen_user_lambda6340(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6340, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<whitespace>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R0 = Shen.call(Shen.fns["shen.<whitespaces>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<whitespace>"], [Arg6233_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<whitespaces>"];

Shen.fns["shen.<whitespace>"] = [Shen.type_func, function shen_user_lambda6341(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6341, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6233_0[1], Shen.type_cons))
  ? ((R0 = Arg6233_0[1][1]),
  ((((R0 = R0),
  (Shen.unwind_tail(Shen.$eq$(R0, 32)) || (Shen.unwind_tail(Shen.$eq$(R0, 13)) || (Shen.unwind_tail(Shen.$eq$(R0, 10)) || Shen.unwind_tail(Shen.$eq$(R0, 9)))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6233_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6233_0])])[1], [Shen.type_symbol, "shen.skip"]]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<whitespace>"];

Shen.fns["shen.cons_form"] = [Shen.type_func, function shen_user_lambda6342(Arg6233) {
  if (Arg6233.length < 1) return [Shen.type_func, shen_user_lambda6342, 1, Arg6233];
  var Arg6233_0 = Arg6233[0];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6233_0))
  ? []
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && (Shen.is_type(Arg6233_0[2], Shen.type_cons) && (Shen.is_type(Arg6233_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6233_0[2][2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6233_0[2][1], [Shen.type_symbol, "bar!"])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg6233_0[1], Arg6233_0[2][2]]]
  : ((Shen.is_type(Arg6233_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Arg6233_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [Arg6233_0[2]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.cons_form"]]);}))))}, 1, [], "shen.cons_form"];

Shen.fns["shen.package-macro"] = [Shen.type_func, function shen_user_lambda6343(Arg6233) {
  if (Arg6233.length < 2) return [Shen.type_func, shen_user_lambda6343, 2, Arg6233];
  var Arg6233_0 = Arg6233[0], Arg6233_1 = Arg6233[1];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6233_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "$"], Arg6233_0[1])) && (Shen.is_type(Arg6233_0[2], Shen.type_cons) && Shen.empty$question$(Arg6233_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["explode"], [Arg6233_0[2][1]]), Arg6233_1]);})
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6233_0[1])) && (Shen.is_type(Arg6233_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "null"], Arg6233_0[2][1])) && Shen.is_type(Arg6233_0[2][2], Shen.type_cons))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["append"], [Arg6233_0[2][2][2], Arg6233_1]);})
  : (((Shen.is_type(Arg6233_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "package"], Arg6233_0[1])) && (Shen.is_type(Arg6233_0[2], Shen.type_cons) && Shen.is_type(Arg6233_0[2][2], Shen.type_cons)))))
  ? ((R0 = Shen.call(Shen.fns["shen.eval-without-macros"], [Arg6233_0[2][2][1]])),
  Shen.call(Shen.fns["shen.record-exceptions"], [R0, Arg6233_0[2][1]]),
  (R1 = Shen.intern((Shen.str(Arg6233_0[2][1]) + "."))),
  (function() {
  return Shen.call_tail(Shen.fns["append"], [Shen.call(Shen.fns["shen.packageh"], [R1, R0, Arg6233_0[2][2][2]]), Arg6233_1]);}))
  : [Shen.type_cons, Arg6233_0, Arg6233_1])))}, 2, [], "shen.package-macro"];

Shen.fns["shen.record-exceptions"] = [Shen.type_func, function shen_user_lambda6344(Arg6233) {
  if (Arg6233.length < 2) return [Shen.type_func, shen_user_lambda6344, 2, Arg6233];
  var Arg6233_0 = Arg6233[0], Arg6233_1 = Arg6233[1];
  var R0, R1, R2;
  return (((R0 = [Shen.type_func, function shen_user_lambda6346(Arg6345) {
  if (Arg6345.length < 2) return [Shen.type_func, shen_user_lambda6346, 2, Arg6345];
  var Arg6345_0 = Arg6345[0], Arg6345_1 = Arg6345[1];
  return (function() {
  return Shen.call_tail(Shen.fns["get"], [Arg6345_1, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])]);})}, 2, [Arg6233_0, Arg6233_1], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6348(Arg6347) {
  if (Arg6347.length < 1) return [Shen.type_func, shen_user_lambda6348, 1, Arg6347];
  var Arg6347_0 = Arg6347[0];
  return []}, 1, [], undefined]),
  (R0 = Shen.trap_error(R0, R1))),
  (R0 = Shen.call(Shen.fns["union"], [Arg6233_0, R0])),
  (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6233_1, [Shen.type_symbol, "shen.external-symbols"], R0, (Shen.globals["*property-vector*"])]);}))}, 2, [], "shen.record-exceptions"];

Shen.fns["shen.packageh"] = [Shen.type_func, function shen_user_lambda6349(Arg6233) {
  if (Arg6233.length < 3) return [Shen.type_func, shen_user_lambda6349, 3, Arg6233];
  var Arg6233_0 = Arg6233[0], Arg6233_1 = Arg6233[1], Arg6233_2 = Arg6233[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6233_2, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.packageh"], [Arg6233_0, Arg6233_1, Arg6233_2[1]]), Shen.call(Shen.fns["shen.packageh"], [Arg6233_0, Arg6233_1, Arg6233_2[2]])]
  : (((Shen.call(Shen.fns["shen.sysfunc?"], [Arg6233_2]) || (Shen.call(Shen.fns["variable?"], [Arg6233_2]) || (Shen.call(Shen.fns["element?"], [Arg6233_2, Arg6233_1]) || (Shen.call(Shen.fns["shen.doubleunderline?"], [Arg6233_2]) || Shen.call(Shen.fns["shen.singleunderline?"], [Arg6233_2]))))))
  ? Arg6233_2
  : (((Shen.is_type(Arg6233_2, Shen.type_symbol) && (!Shen.call(Shen.fns["shen.prefix?"], [[Shen.type_cons, "s", [Shen.type_cons, "h", [Shen.type_cons, "e", [Shen.type_cons, "n", [Shen.type_cons, ".", []]]]]], Shen.call(Shen.fns["explode"], [Arg6233_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [Arg6233_0, Arg6233_2]);})
  : Arg6233_2)))}, 3, [], "shen.packageh"];

Shen.call_toplevel(function js$dot$shen_js_toplevel6350(Arg6233) {
  if (Arg6233.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6350, 0, Arg6233];
  var R0, R1, R2;
  return []});


"Copyright (c) 2015, Mark Tarver\x0d\x0a\x0d\x0aAll rights reserved.\x0d\x0a\x0d\x0aRedistribution and use in source and binary forms, with or without\x0d\x0amodification, are permitted provided that the following conditions are met:\x0d\x0a1. Redistributions of source code must retain the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer.\x0d\x0a2. Redistributions in binary form must reproduce the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer in the\x0d\x0a   documentation and/or other materials provided with the distribution.\x0d\x0a3. The name of Mark Tarver may not be used to endorse or promote products\x0d\x0a   derived from this software without specific prior written permission.\x0d\x0a\x0d\x0aTHIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY\x0d\x0aEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\x0d\x0aWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\x0d\x0aDISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY\x0d\x0aDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\x0d\x0a(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\x0d\x0aLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\x0d\x0aON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0d\x0a(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\x0d\x0aSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";

Shen.fns["shen.<defprolog>"] = [Shen.type_func, function shen_user_lambda6355(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6355, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.<predicate*>"], [Arg6354_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<clauses*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.prolog->shen"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6357(Arg6356) {
  if (Arg6356.length < 2) return [Shen.type_func, shen_user_lambda6357, 2, Arg6356];
  var Arg6356_0 = Arg6356[0], Arg6356_1 = Arg6356[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-predicate"], [Shen.call(Shen.fns["shen.hdtl"], [Arg6356_0]), Arg6356_1]);})}, 2, [R0], undefined], Shen.call(Shen.fns["shen.hdtl"], [R1])])])[1]]);})
  : Shen.fail_obj))
  : Shen.fail_obj))}, 1, [], "shen.<defprolog>"];

Shen.fns["shen.prolog-error"] = [Shen.type_func, function shen_user_lambda6358(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6358, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1;
  return (((Shen.is_type(Arg6354_1, Shen.type_cons) && (Shen.is_type(Arg6354_1[2], Shen.type_cons) && Shen.empty$question$(Arg6354_1[2][2]))))
  ? (function() {
  return Shen.simple_error(("prolog syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6354_0, (" here:\x0a\x0a " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.next-50"], [50, Arg6354_1[1]]), "\x0a", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])));})
  : (function() {
  return Shen.simple_error(("prolog syntax error in " + Shen.call(Shen.fns["shen.app"], [Arg6354_0, "\x0a", [Shen.type_symbol, "shen.a"]])));}))}, 2, [], "shen.prolog-error"];

Shen.fns["shen.next-50"] = [Shen.type_func, function shen_user_lambda6359(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6359, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg6354_1))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg6354_0)))
  ? ""
  : ((Shen.is_type(Arg6354_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.decons-string"], [Arg6354_1[1]]) + Shen.call(Shen.fns["shen.next-50"], [(Arg6354_0 - 1), Arg6354_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.next-50"]]);}))))}, 2, [], "shen.next-50"];

Shen.fns["shen.decons-string"] = [Shen.type_func, function shen_user_lambda6360(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6360, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.eval-cons"], [Arg6354_0]), " ", [Shen.type_symbol, "shen.s"]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.app"], [Arg6354_0, " ", [Shen.type_symbol, "shen.r"]]);}))}, 1, [], "shen.decons-string"];

Shen.fns["shen.insert-predicate"] = [Shen.type_func, function shen_user_lambda6361(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6361, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1;
  return (((Shen.is_type(Arg6354_1, Shen.type_cons) && (Shen.is_type(Arg6354_1[2], Shen.type_cons) && Shen.empty$question$(Arg6354_1[2][2]))))
  ? [Shen.type_cons, [Shen.type_cons, Arg6354_0, Arg6354_1[1]], [Shen.type_cons, [Shen.type_symbol, ":-"], Arg6354_1[2]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.insert-predicate"]]);}))}, 2, [], "shen.insert-predicate"];

Shen.fns["shen.<predicate*>"] = [Shen.type_func, function shen_user_lambda6362(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6362, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1;
  return ((Shen.is_type(Arg6354_0[1], Shen.type_cons))
  ? ((R0 = Arg6354_0[1][1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6354_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6354_0])])[1], R0]);}))
  : Shen.fail_obj)}, 1, [], "shen.<predicate*>"];

Shen.fns["shen.<clauses*>"] = [Shen.type_func, function shen_user_lambda6363(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6363, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1;
  return (((R0 = Shen.call(Shen.fns["shen.<clause*>"], [Arg6354_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<clauses*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["<e>"], [Arg6354_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], []]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<clauses*>"];

Shen.fns["shen.<clause*>"] = [Shen.type_func, function shen_user_lambda6364(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6364, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.<head*>"], [Arg6354_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (((Shen.is_type(R0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<--"], R0[1][1]))))
  ? ((R1 = Shen.call(Shen.fns["shen.<body*>"], [Shen.call(Shen.fns["shen.pair"], [R0[1][2], Shen.call(Shen.fns["shen.hdtl"], [R0])])])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? ((R2 = Shen.call(Shen.fns["shen.<end*>"], [R1])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R2))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R2[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R1]), []]]]);})
  : Shen.fail_obj))
  : Shen.fail_obj))
  : Shen.fail_obj)
  : Shen.fail_obj))}, 1, [], "shen.<clause*>"];

Shen.fns["shen.<head*>"] = [Shen.type_func, function shen_user_lambda6365(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6365, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<term*>"], [Arg6354_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<head*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["<e>"], [Arg6354_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], []]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<head*>"];

Shen.fns["shen.<term*>"] = [Shen.type_func, function shen_user_lambda6366(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6366, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6354_0[1], Shen.type_cons))
  ? ((R0 = Arg6354_0[1][1]),
  ((((!Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "<--"], R0))) && Shen.call(Shen.fns["shen.legitimate-term?"], [R0])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6354_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6354_0])])[1], Shen.call(Shen.fns["shen.eval-cons"], [R0])]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<term*>"];

Shen.fns["shen.legitimate-term?"] = [Shen.type_func, function shen_user_lambda6367(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6367, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2]))))))
  ? (Shen.call(Shen.fns["shen.legitimate-term?"], [Arg6354_0[2][1]]) && Shen.call(Shen.fns["shen.legitimate-term?"], [Arg6354_0[2][2][1]]))
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6354_0[2][2][1])) && Shen.empty$question$(Arg6354_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.legitimate-term?"], [Arg6354_0[2][1]]);})
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6354_0[2][2][1])) && Shen.empty$question$(Arg6354_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.legitimate-term?"], [Arg6354_0[2][1]]);})
  : ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? false
  : true))))}, 1, [], "shen.legitimate-term?"];

Shen.fns["shen.eval-cons"] = [Shen.type_func, function shen_user_lambda6368(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6368, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2]))))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.eval-cons"], [Arg6354_0[2][1]]), Shen.call(Shen.fns["shen.eval-cons"], [Arg6354_0[2][2][1]])]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Shen.call(Shen.fns["shen.eval-cons"], [Arg6354_0[2][1]]), Arg6354_0[2][2]]]
  : Arg6354_0))}, 1, [], "shen.eval-cons"];

Shen.fns["shen.<body*>"] = [Shen.type_func, function shen_user_lambda6369(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6369, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((R0 = Shen.call(Shen.fns["shen.<literal*>"], [Arg6354_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<body*>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["<e>"], [Arg6354_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], []]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<body*>"];

Shen.fns["shen.<literal*>"] = [Shen.type_func, function shen_user_lambda6370(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6370, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((((Shen.is_type(Arg6354_0[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "!"], Arg6354_0[1][1]))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6354_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6354_0])])[1], [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], []]]]))
  : (R0 = Shen.fail_obj)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((Shen.is_type(Arg6354_0[1], Shen.type_cons))
  ? ((R0 = Arg6354_0[1][1]),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6354_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6354_0])])[1], R0]);})
  : Shen.fail_obj))
  : Shen.fail_obj)
  : R0))}, 1, [], "shen.<literal*>"];

Shen.fns["shen.<end*>"] = [Shen.type_func, function shen_user_lambda6371(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6371, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6354_0[1], Shen.type_cons))
  ? ((R0 = Arg6354_0[1][1]),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, ";"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [Shen.call(Shen.fns["shen.pair"], [Arg6354_0[1][2], Shen.call(Shen.fns["shen.hdtl"], [Arg6354_0])])[1], R0]);})
  : Shen.fail_obj))
  : Shen.fail_obj)}, 1, [], "shen.<end*>"];

Shen.fns["cut"] = [Shen.type_func, function shen_user_lambda6372(Arg6354) {
  if (Arg6354.length < 3) return [Shen.type_func, shen_user_lambda6372, 3, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2];
  var R0, R1, R2;
  return ((R0 = Shen.unwind_tail(Shen.thaw(Arg6354_2))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? Arg6354_0
  : R0))}, 3, [], "cut"];

Shen.fns["shen.insert_modes"] = [Shen.type_func, function shen_user_lambda6373(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6373, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2]))))))
  ? Arg6354_0
  : ((Shen.empty$question$(Arg6354_0))
  ? []
  : ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6354_0[1], [Shen.type_cons, [Shen.type_symbol, "+"], []]]], [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_modes"], [Arg6354_0[2]]), [Shen.type_cons, [Shen.type_symbol, "-"], []]]]]
  : Arg6354_0)))}, 1, [], "shen.insert_modes"];

Shen.fns["shen.s-prolog"] = [Shen.type_func, function shen_user_lambda6374(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6374, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6376(Arg6375) {
  if (Arg6375.length < 1) return [Shen.type_func, shen_user_lambda6376, 1, Arg6375];
  var Arg6375_0 = Arg6375[0];
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Arg6375_0]);})}, 1, [], undefined], Shen.call(Shen.fns["shen.prolog->shen"], [Arg6354_0])]);})}, 1, [], "shen.s-prolog"];

Shen.fns["shen.prolog->shen"] = [Shen.type_func, function shen_user_lambda6377(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6377, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6379(Arg6378) {
  if (Arg6378.length < 1) return [Shen.type_func, shen_user_lambda6379, 1, Arg6378];
  var Arg6378_0 = Arg6378[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.compile_prolog_procedure"], [Arg6378_0]);})}, 1, [], undefined], Shen.call(Shen.fns["shen.group_clauses"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6381(Arg6380) {
  if (Arg6380.length < 1) return [Shen.type_func, shen_user_lambda6381, 1, Arg6380];
  var Arg6380_0 = Arg6380[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.s-prolog_clause"], [Arg6380_0]);})}, 1, [], undefined], Shen.call(Shen.fns["mapcan"], [[Shen.type_func, function shen_user_lambda6383(Arg6382) {
  if (Arg6382.length < 1) return [Shen.type_func, shen_user_lambda6383, 1, Arg6382];
  var Arg6382_0 = Arg6382[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.head_abstraction"], [Arg6382_0]);})}, 1, [], undefined], Arg6354_0])])])]);})}, 1, [], "shen.prolog->shen"];

Shen.fns["shen.s-prolog_clause"] = [Shen.type_func, function shen_user_lambda6384(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6384, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2]))))))
  ? [Shen.type_cons, Arg6354_0[1], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6386(Arg6385) {
  if (Arg6385.length < 1) return [Shen.type_func, shen_user_lambda6386, 1, Arg6385];
  var Arg6385_0 = Arg6385[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.s-prolog_literal"], [Arg6385_0]);})}, 1, [], undefined], Arg6354_0[2][2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.s-prolog_clause"]]);}))}, 1, [], "shen.s-prolog_clause"];

Shen.fns["shen.head_abstraction"] = [Shen.type_func, function shen_user_lambda6387(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6387, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][2][2]) && (Shen.call(Shen.fns["shen.complexity_head"], [Arg6354_0[1]]) < (Shen.globals["shen.*maxcomplexity*"]))))))))
  ? [Shen.type_cons, Arg6354_0, []]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6389(Arg6388) {
  if (Arg6388.length < 1) return [Shen.type_func, shen_user_lambda6389, 1, Arg6388];
  var Arg6388_0 = Arg6388[0];
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "V"]]);})}, 1, [], undefined], Arg6354_0[1][2]])),
  (R1 = Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.remove_modes"], [Arg6354_0[1][2]])])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [R0]), [Shen.type_cons, R1, []]]]),
  (R1 = [Shen.type_cons, [Shen.type_cons, Arg6354_0[1][1], R0], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, R1, Arg6354_0[2][2][1]], []]]]),
  [Shen.type_cons, R1, []])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.head_abstraction"]]);})))}, 1, [], "shen.head_abstraction"];

Shen.fns["shen.complexity_head"] = [Shen.type_func, function shen_user_lambda6390(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6390, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.product"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6392(Arg6391) {
  if (Arg6391.length < 1) return [Shen.type_func, shen_user_lambda6392, 1, Arg6391];
  var Arg6391_0 = Arg6391[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.complexity"], [Arg6391_0]);})}, 1, [], undefined], Arg6354_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.complexity_head"]]);}))}, 1, [], "shen.complexity_head"];

Shen.fns["shen.complexity"] = [Shen.type_func, function shen_user_lambda6393(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6393, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[2][1][1])) && (Shen.is_type(Arg6354_0[2][1][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][1][2][2][2]) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2])))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.complexity"], [Arg6354_0[2][1]]);})
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6354_0[2][2][1])) && Shen.empty$question$(Arg6354_0[2][2][2]))))))))
  ? (2 * (Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6354_0[2][1][1], Arg6354_0[2][2]]]]) * Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6354_0[2][1][2], Arg6354_0[2][2]]]])))
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6354_0[2][2][1])) && Shen.empty$question$(Arg6354_0[2][2][2]))))))))
  ? (Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6354_0[2][1][1], Arg6354_0[2][2]]]]) * Shen.call(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6354_0[2][1][2], Arg6354_0[2][2]]]]))
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][2][2]) && Shen.call(Shen.fns["variable?"], [Arg6354_0[2][1]])))))))
  ? 1
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6354_0[2][2][1])) && Shen.empty$question$(Arg6354_0[2][2][2])))))))
  ? 2
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6354_0[2][2][1])) && Shen.empty$question$(Arg6354_0[2][2][2])))))))
  ? 1
  : (function() {
  return Shen.call_tail(Shen.fns["shen.complexity"], [[Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6354_0, [Shen.type_cons, [Shen.type_symbol, "+"], []]]]]);})))))))}, 1, [], "shen.complexity"];

Shen.fns["shen.product"] = [Shen.type_func, function shen_user_lambda6394(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6394, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6354_0))
  ? 1
  : ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? (Arg6354_0[1] * Shen.call(Shen.fns["shen.product"], [Arg6354_0[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.product"]]);})))}, 1, [], "shen.product"];

Shen.fns["shen.s-prolog_literal"] = [Shen.type_func, function shen_user_lambda6395(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6395, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, Arg6354_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6354_0[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "when"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6354_0[2][1]]), []]]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bind"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, Arg6354_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6354_0[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fwhen"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6354_0[2][1]]), []]]
  : ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? Arg6354_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.s-prolog_literal"]]);}))))))}, 1, [], "shen.s-prolog_literal"];

Shen.fns["shen.insert_deref"] = [Shen.type_func, function shen_user_lambda6396(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6396, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((Shen.call(Shen.fns["variable?"], [Arg6354_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.deref"], [Shen.type_cons, Arg6354_0, [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.insert_deref"], [Arg6354_0[1]]), Shen.call(Shen.fns["shen.insert_deref"], [Arg6354_0[2]])]
  : Arg6354_0))}, 1, [], "shen.insert_deref"];

Shen.fns["shen.insert_lazyderef"] = [Shen.type_func, function shen_user_lambda6397(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6397, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((Shen.call(Shen.fns["variable?"], [Arg6354_0]))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.lazyderef"], [Shen.type_cons, Arg6354_0, [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6354_0[1]]), Shen.call(Shen.fns["shen.insert_lazyderef"], [Arg6354_0[2]])]
  : Arg6354_0))}, 1, [], "shen.insert_lazyderef"];

Shen.fns["shen.m_prolog_to_s-prolog_predicate"] = [Shen.type_func, function shen_user_lambda6398(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6398, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg6354_0)))
  ? [Shen.type_symbol, "unify"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "=!"], Arg6354_0)))
  ? [Shen.type_symbol, "unify!"]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "=="], Arg6354_0)))
  ? [Shen.type_symbol, "identical"]
  : Arg6354_0)))}, 1, [], "shen.m_prolog_to_s-prolog_predicate"];

Shen.fns["shen.group_clauses"] = [Shen.type_func, function shen_user_lambda6399(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6399, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6354_0))
  ? []
  : ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.collect"], [[Shen.type_func, function shen_user_lambda6401(Arg6400) {
  if (Arg6400.length < 2) return [Shen.type_func, shen_user_lambda6401, 2, Arg6400];
  var Arg6400_0 = Arg6400[0], Arg6400_1 = Arg6400[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.same_predicate?"], [Arg6400_0[1], Arg6400_1]);})}, 2, [Arg6354_0], undefined], Arg6354_0])),
  (R1 = Shen.call(Shen.fns["difference"], [Arg6354_0, R0])),
  [Shen.type_cons, R0, Shen.call(Shen.fns["shen.group_clauses"], [R1])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.group_clauses"]]);})))}, 1, [], "shen.group_clauses"];

Shen.fns["shen.collect"] = [Shen.type_func, function shen_user_lambda6402(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6402, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6354_1))
  ? []
  : ((Shen.is_type(Arg6354_1, Shen.type_cons))
  ? ((Shen.call(Arg6354_0, [Arg6354_1[1]]))
  ? [Shen.type_cons, Arg6354_1[1], Shen.call(Shen.fns["shen.collect"], [Arg6354_0, Arg6354_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.collect"], [Arg6354_0, Arg6354_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.collect"]]);})))}, 2, [], "shen.collect"];

Shen.fns["shen.same_predicate?"] = [Shen.type_func, function shen_user_lambda6403(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6403, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && (Shen.is_type(Arg6354_1, Shen.type_cons) && Shen.is_type(Arg6354_1[1], Shen.type_cons)))))
  ? Shen.$eq$(Arg6354_0[1][1], Arg6354_1[1][1])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.same_predicate?"]]);}))}, 2, [], "shen.same_predicate?"];

Shen.fns["shen.compile_prolog_procedure"] = [Shen.type_func, function shen_user_lambda6404(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6404, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.procedure_name"], [Arg6354_0])),
  (R0 = Shen.call(Shen.fns["shen.clauses-to-shen"], [R0, Arg6354_0])),
  R0)}, 1, [], "shen.compile_prolog_procedure"];

Shen.fns["shen.procedure_name"] = [Shen.type_func, function shen_user_lambda6405(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6405, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && Shen.is_type(Arg6354_0[1][1], Shen.type_cons))))
  ? Arg6354_0[1][1][1]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.procedure_name"]]);}))}, 1, [], "shen.procedure_name"];

Shen.fns["shen.clauses-to-shen"] = [Shen.type_func, function shen_user_lambda6406(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6406, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6408(Arg6407) {
  if (Arg6407.length < 1) return [Shen.type_func, shen_user_lambda6408, 1, Arg6407];
  var Arg6407_0 = Arg6407[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.linearise-clause"], [Arg6407_0]);})}, 1, [], undefined], Arg6354_1])),
  (R1 = Shen.call(Shen.fns["shen.prolog-aritycheck"], [Arg6354_0, Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6410(Arg6409) {
  if (Arg6409.length < 1) return [Shen.type_func, shen_user_lambda6410, 1, Arg6409];
  var Arg6409_0 = Arg6409[0];
  return (function() {
  return Shen.call_tail(Shen.fns["head"], [Arg6409_0]);})}, 1, [], undefined], Arg6354_1])])),
  (R1 = Shen.call(Shen.fns["shen.parameters"], [R1])),
  (R0 = Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6412(Arg6411) {
  if (Arg6411.length < 2) return [Shen.type_func, shen_user_lambda6412, 2, Arg6411];
  var Arg6411_0 = Arg6411[0], Arg6411_1 = Arg6411[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.aum"], [Arg6411_1, Arg6411_0]);})}, 2, [R1], undefined], R0])),
  (R0 = Shen.call(Shen.fns["shen.catch-cut"], [Shen.call(Shen.fns["shen.nest-disjunct"], [Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6414(Arg6413) {
  if (Arg6413.length < 1) return [Shen.type_func, shen_user_lambda6414, 1, Arg6413];
  var Arg6413_0 = Arg6413[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.aum_to_shen"], [Arg6413_0]);})}, 1, [], undefined], R0])])])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg6354_0, Shen.call(Shen.fns["append"], [R1, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "ProcessN"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]])])]]),
  R1)}, 2, [], "shen.clauses-to-shen"];

Shen.fns["shen.catch-cut"] = [Shen.type_func, function shen_user_lambda6415(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6415, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((!Shen.call(Shen.fns["shen.occurs?"], [[Shen.type_symbol, "cut"], Arg6354_0])))
  ? Arg6354_0
  : [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.catchpoint"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.cutpoint"], [Shen.type_cons, [Shen.type_symbol, "Throwcontrol"], [Shen.type_cons, Arg6354_0, []]]], []]]]])}, 1, [], "shen.catch-cut"];

Shen.fns["shen.catchpoint"] = [Shen.type_func, function shen_user_lambda6416(Arg6354) {
  if (Arg6354.length < 0) return [Shen.type_func, shen_user_lambda6416, 0, Arg6354];
  var R0, R1, R2;
  return (Shen.globals["shen.*catch*"] = (1 + (Shen.globals["shen.*catch*"])))}, 0, [], "shen.catchpoint"];

Shen.fns["shen.cutpoint"] = [Shen.type_func, function shen_user_lambda6417(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6417, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6354_1, Arg6354_0)))
  ? false
  : Arg6354_1)}, 2, [], "shen.cutpoint"];

Shen.fns["shen.nest-disjunct"] = [Shen.type_func, function shen_user_lambda6418(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6418, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && Shen.empty$question$(Arg6354_0[2])))
  ? Arg6354_0[1]
  : ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lisp-or"], [Arg6354_0[1], Shen.call(Shen.fns["shen.nest-disjunct"], [Arg6354_0[2]])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.nest-disjunct"]]);})))}, 1, [], "shen.nest-disjunct"];

Shen.fns["shen.lisp-or"] = [Shen.type_func, function shen_user_lambda6419(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6419, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Case"], [Shen.type_cons, Arg6354_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "Case"], [Shen.type_cons, false, []]]], [Shen.type_cons, Arg6354_1, [Shen.type_cons, [Shen.type_symbol, "Case"], []]]]], []]]]]}, 2, [], "shen.lisp-or"];

Shen.fns["shen.prolog-aritycheck"] = [Shen.type_func, function shen_user_lambda6420(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6420, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_1, Shen.type_cons) && Shen.empty$question$(Arg6354_1[2])))
  ? (Shen.call(Shen.fns["length"], [Arg6354_1[1]]) - 1)
  : (((Shen.is_type(Arg6354_1, Shen.type_cons) && Shen.is_type(Arg6354_1[2], Shen.type_cons)))
  ? ((Shen.unwind_tail(Shen.$eq$(Shen.call(Shen.fns["length"], [Arg6354_1[1]]), Shen.call(Shen.fns["length"], [Arg6354_1[2][1]]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-aritycheck"], [Arg6354_0, Arg6354_1[2]]);})
  : (function() {
  return Shen.simple_error(("arity error in prolog procedure " + Shen.call(Shen.fns["shen.app"], [[Shen.type_cons, Arg6354_0, []], "\x0a", [Shen.type_symbol, "shen.a"]])));}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.prolog-aritycheck"]]);})))}, 2, [], "shen.prolog-aritycheck"];

Shen.fns["shen.linearise-clause"] = [Shen.type_func, function shen_user_lambda6421(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6421, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2]))))))
  ? ((R0 = Shen.call(Shen.fns["shen.linearise"], [[Shen.type_cons, Arg6354_0[1], Arg6354_0[2][2]]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.clause_form"], [R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.linearise-clause"]]);}))}, 1, [], "shen.linearise-clause"];

Shen.fns["shen.clause_form"] = [Shen.type_func, function shen_user_lambda6422(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6422, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.explicit_modes"], [Arg6354_0[1]]), [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, Shen.call(Shen.fns["shen.cf_help"], [Arg6354_0[2][1]]), []]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.clause_form"]]);}))}, 1, [], "shen.clause_form"];

Shen.fns["shen.explicit_modes"] = [Shen.type_func, function shen_user_lambda6423(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6423, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? [Shen.type_cons, Arg6354_0[1], Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6425(Arg6424) {
  if (Arg6424.length < 1) return [Shen.type_func, shen_user_lambda6425, 1, Arg6424];
  var Arg6424_0 = Arg6424[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.em_help"], [Arg6424_0]);})}, 1, [], undefined], Arg6354_0[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.explicit_modes"]]);}))}, 1, [], "shen.explicit_modes"];

Shen.fns["shen.em_help"] = [Shen.type_func, function shen_user_lambda6426(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6426, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2]))))))
  ? Arg6354_0
  : [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, Arg6354_0, [Shen.type_cons, [Shen.type_symbol, "+"], []]]])}, 1, [], "shen.em_help"];

Shen.fns["shen.cf_help"] = [Shen.type_func, function shen_user_lambda6427(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6427, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "="], Arg6354_0[2][1][1])) && (Shen.is_type(Arg6354_0[2][1][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][1][2][2][2]) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_cons, (((Shen.globals["shen.*occurs*"]))
  ? [Shen.type_symbol, "unify!"]
  : [Shen.type_symbol, "unify"]), Arg6354_0[2][1][2]], Shen.call(Shen.fns["shen.cf_help"], [Arg6354_0[2][2][1]])]
  : Arg6354_0)}, 1, [], "shen.cf_help"];

Shen.fns["occurs-check"] = [Shen.type_func, function shen_user_lambda6428(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6428, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6354_0)))
  ? (Shen.globals["shen.*occurs*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6354_0)))
  ? (Shen.globals["shen.*occurs*"] = false)
  : (function() {
  return Shen.simple_error("occurs-check expects + or -\x0a");})))}, 1, [], "occurs-check"];

Shen.fns["shen.aum"] = [Shen.type_func, function shen_user_lambda6429(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6429, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":-"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["shen.make_mu_application"], [[Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6354_0[1][2], [Shen.type_cons, Shen.call(Shen.fns["shen.continuation_call"], [Arg6354_0[1][2], Arg6354_0[2][2][1]]), []]]], Arg6354_1])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [R0, [Shen.type_symbol, "+"]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.aum"]]);}))}, 2, [], "shen.aum"];

Shen.fns["shen.continuation_call"] = [Shen.type_func, function shen_user_lambda6430(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6430, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return ((R0 = [Shen.type_cons, [Shen.type_symbol, "ProcessN"], Shen.call(Shen.fns["shen.extract_vars"], [Arg6354_0])]),
  (R1 = Shen.call(Shen.fns["shen.extract_vars"], [Arg6354_1])),
  (R1 = Shen.call(Shen.fns["remove"], [[Shen.type_symbol, "Throwcontrol"], Shen.call(Shen.fns["difference"], [R1, R0])])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cc_help"], [R1, Arg6354_1]);}))}, 2, [], "shen.continuation_call"];

Shen.fns["remove"] = [Shen.type_func, function shen_user_lambda6431(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6431, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6354_0, Arg6354_1, []]);})}, 2, [], "remove"];

Shen.fns["shen.remove-h"] = [Shen.type_func, function shen_user_lambda6432(Arg6354) {
  if (Arg6354.length < 3) return [Shen.type_func, shen_user_lambda6432, 3, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6354_1))
  ? (function() {
  return Shen.call_tail(Shen.fns["reverse"], [Arg6354_2]);})
  : (((Shen.is_type(Arg6354_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg6354_1[1], Arg6354_0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6354_1[1], Arg6354_1[2], Arg6354_2]);})
  : ((Shen.is_type(Arg6354_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove-h"], [Arg6354_0, Arg6354_1[2], [Shen.type_cons, Arg6354_1[1], Arg6354_2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.remove-h"]]);}))))}, 3, [], "shen.remove-h"];

Shen.fns["shen.cc_help"] = [Shen.type_func, function shen_user_lambda6433(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6433, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return (((Shen.empty$question$(Arg6354_0) && Shen.empty$question$(Arg6354_1)))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pop"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.stack"], []]]]
  : ((Shen.empty$question$(Arg6354_1))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6354_0, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.pop"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.stack"], []]]], []]]]]]]]]
  : ((Shen.empty$question$(Arg6354_0))
  ? [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.continuation"], [Shen.type_cons, Arg6354_1, []]]]]
  : [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6354_0, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.continuation"], [Shen.type_cons, Arg6354_1, []]]]], []]]]]]]]])))}, 2, [], "shen.cc_help"];

Shen.fns["shen.make_mu_application"] = [Shen.type_func, function shen_user_lambda6434(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6434, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][1]) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][2][2]) && Shen.empty$question$(Arg6354_1))))))))
  ? Arg6354_0[2][2][1]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][1], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][2][2]) && Shen.is_type(Arg6354_1, Shen.type_cons))))))))
  ? [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6354_0[2][1][1], [Shen.type_cons, Shen.call(Shen.fns["shen.make_mu_application"], [[Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6354_0[2][1][2], Arg6354_0[2][2]]], Arg6354_1[2]]), []]]], [Shen.type_cons, Arg6354_1[1], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.make_mu_application"]]);})))}, 2, [], "shen.make_mu_application"];

Shen.fns["shen.mu_reduction"] = [Shen.type_func, function shen_user_lambda6435(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6435, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6354_0[1][1])) && (Shen.is_type(Arg6354_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[1][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[1][2][1][1])) && (Shen.is_type(Arg6354_0[1][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[1][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[1][2][1][2][2][2]) && (Shen.is_type(Arg6354_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[1][2][2][2]) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2]))))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6354_0[1][2][1][2][1], Arg6354_0[1][2][2]]], Arg6354_0[2]], Arg6354_0[1][2][1][2][2][1]]);})
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6354_0[1][1])) && (Shen.is_type(Arg6354_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[1][2][2][2]) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "_"], Arg6354_0[1][2][1])))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mu_reduction"], [Arg6354_0[1][2][2][1], Arg6354_1]);})
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6354_0[1][1])) && (Shen.is_type(Arg6354_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[1][2][2][2]) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][2]) && Shen.call(Shen.fns["shen.ephemeral_variable?"], [Arg6354_0[1][2][1], Arg6354_0[2][1]]))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["subst"], [Arg6354_0[2][1], Arg6354_0[1][2][1], Shen.call(Shen.fns["shen.mu_reduction"], [Arg6354_0[1][2][2][1], Arg6354_1])]);})
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6354_0[1][1])) && (Shen.is_type(Arg6354_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[1][2][2][2]) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][2]) && Shen.call(Shen.fns["variable?"], [Arg6354_0[1][2][1]]))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6354_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, Arg6354_0[2][1], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6354_0[1][2][2][1], Arg6354_1]), []]]]]]]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6354_0[1][1])) && (Shen.is_type(Arg6354_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[1][2][2][2]) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][2]) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6354_1)) && Shen.call(Shen.fns["shen.prolog_constant?"], [Arg6354_0[1][2][1]])))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6354_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6354_0[1][2][1], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6354_0[1][2][2][1], [Shen.type_symbol, "-"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6354_0[1][1])) && (Shen.is_type(Arg6354_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[1][2][2][2]) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][2]) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6354_1)) && Shen.call(Shen.fns["shen.prolog_constant?"], [Arg6354_0[1][2][1]])))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6354_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6354_0[1][2][1], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6354_0[1][2][2][1], [Shen.type_symbol, "+"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.variable"], []]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Arg6354_0[1][2][1], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6354_0[1][2][2][1], [Shen.type_symbol, "+"]]), []]]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6354_0[1][1])) && (Shen.is_type(Arg6354_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[1][2][1], Shen.type_cons) && (Shen.is_type(Arg6354_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[1][2][2][2]) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6354_1))))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6354_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.non-empty"], [Shen.type_cons, [Shen.type_symbol, "list"], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6354_0[1][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6354_0[1][2][1][2], Arg6354_0[1][2][2]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], [Shen.type_symbol, "-"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]])
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.mu"], Arg6354_0[1][1])) && (Shen.is_type(Arg6354_0[1][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[1][2][1], Shen.type_cons) && (Shen.is_type(Arg6354_0[1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[1][2][2][2]) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][2]) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6354_1))))))))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.be"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.result"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, [Shen.type_symbol, "shen.dereferencing"], Arg6354_0[2]]]]], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.non-empty"], [Shen.type_cons, [Shen.type_symbol, "list"], []]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [[Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6354_0[1][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.mu"], [Shen.type_cons, Arg6354_0[1][2][1][2], Arg6354_0[1][2][2]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "shen.of"], [Shen.type_cons, R0, []]]]], []]], [Shen.type_symbol, "+"]]), [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "shen.a"], [Shen.type_cons, [Shen.type_symbol, "shen.variable"], []]]]], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.extract_vars"], [Arg6354_0[1][2][1]]), [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "shen.then"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, "shen.to"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.remove_modes"], [Arg6354_0[1][2][1]])]), [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Shen.call(Shen.fns["shen.mu_reduction"], [Arg6354_0[1][2][2][1], [Shen.type_symbol, "+"]]), []]]]]]], []]]]]]]]], [Shen.type_cons, [Shen.type_symbol, "shen.else"], [Shen.type_cons, [Shen.type_symbol, "shen.failed!"], []]]]]]], []]]]]]], []]]]]]])
  : Arg6354_0))))))))}, 2, [], "shen.mu_reduction"];

Shen.fns["shen.rcons_form"] = [Shen.type_func, function shen_user_lambda6436(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6436, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6354_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6354_0[2]]), []]]]
  : Arg6354_0)}, 1, [], "shen.rcons_form"];

Shen.fns["shen.remove_modes"] = [Shen.type_func, function shen_user_lambda6437(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6437, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6354_0[2][2][1])) && Shen.empty$question$(Arg6354_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove_modes"], [Arg6354_0[2][1]]);})
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "mode"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6354_0[2][2][1])) && Shen.empty$question$(Arg6354_0[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.remove_modes"], [Arg6354_0[2][1]]);})
  : ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.remove_modes"], [Arg6354_0[1]]), Shen.call(Shen.fns["shen.remove_modes"], [Arg6354_0[2]])]
  : Arg6354_0)))}, 1, [], "shen.remove_modes"];

Shen.fns["shen.ephemeral_variable?"] = [Shen.type_func, function shen_user_lambda6438(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6438, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return (Shen.call(Shen.fns["variable?"], [Arg6354_0]) && Shen.call(Shen.fns["variable?"], [Arg6354_1]))}, 2, [], "shen.ephemeral_variable?"];

Shen.fns["shen.prolog_constant?"] = [Shen.type_func, function shen_user_lambda6439(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6439, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? false
  : true)}, 1, [], "shen.prolog_constant?"];

Shen.fns["shen.aum_to_shen"] = [Shen.type_func, function shen_user_lambda6440(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6440, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.be"], Arg6354_0[2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6354_0[2][2][2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6354_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6354_0[2][2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6354_0[2][2][2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.result"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6354_0[2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.dereferencing"], Arg6354_0[2][2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.lazyderef"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6354_0[2][2][2][2][1]]), [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "if"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6354_0[2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.else"], Arg6354_0[2][2][2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6354_0[2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6354_0[2][2][2][1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6354_0[2][2][2][2][2][1]]), []]]]]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg6354_0[2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variable"], Arg6354_0[2][2][2][1])) && Shen.empty$question$(Arg6354_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.pvar?"], [Shen.type_cons, Arg6354_0[1], []]]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg6354_0[2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.non-empty"], Arg6354_0[2][2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], Arg6354_0[2][2][2][2][1])) && Shen.empty$question$(Arg6354_0[2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, Arg6354_0[1], []]]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.rename"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variables"], Arg6354_0[2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6354_0[2][2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6354_0[2][2][2][2][1]) && (Shen.is_type(Arg6354_0[2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg6354_0[2][2][2][2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6354_0[2][2][2][2][2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2][2][2][2][2][2])))))))))))))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.aum_to_shen"], [Arg6354_0[2][2][2][2][2][2][2][1]]);})
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.rename"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.variables"], Arg6354_0[2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6354_0[2][2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2][2][2][1], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "and"], Arg6354_0[2][2][2][2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.then"], Arg6354_0[2][2][2][2][2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2][2][2][2][2][2])))))))))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6354_0[2][2][2][2][1][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.newpv"], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [[Shen.type_cons, [Shen.type_symbol, "shen.rename"], [Shen.type_cons, [Shen.type_symbol, "shen.the"], [Shen.type_cons, [Shen.type_symbol, "shen.variables"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, Arg6354_0[2][2][2][2][1][2], Arg6354_0[2][2][2][2][2]]]]]]]), []]]]]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "bind"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.to"], Arg6354_0[2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2], Shen.type_cons) && (Shen.is_type(Arg6354_0[2][2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "in"], Arg6354_0[2][2][2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2][2][2][2])))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.bindv"], [Shen.type_cons, Arg6354_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.chwild"], [Arg6354_0[2][2][2][1]]), [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Shen.call(Shen.fns["shen.aum_to_shen"], [Arg6354_0[2][2][2][2][2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.unbindv"], [Shen.type_cons, Arg6354_0[2][1], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]], []]]]], []]]]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "is"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "identical"], Arg6354_0[2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.to"], Arg6354_0[2][2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2][2][2]))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg6354_0[2][2][2][2][1], [Shen.type_cons, Arg6354_0[1], []]]]
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.failed!"], Arg6354_0)))
  ? false
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "head"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6354_0[2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "hd"], Arg6354_0[2][2][2]]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "tail"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.of"], Arg6354_0[2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "tl"], Arg6354_0[2][2][2]]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.pop"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.stack"], Arg6354_0[2][2][1])) && Shen.empty$question$(Arg6354_0[2][2][2]))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.incinfs"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], []]]]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "call"], Arg6354_0[1])) && (Shen.is_type(Arg6354_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.the"], Arg6354_0[2][1])) && (Shen.is_type(Arg6354_0[2][2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.continuation"], Arg6354_0[2][2][1])) && (Shen.is_type(Arg6354_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2][2][2][2])))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.incinfs"], []], [Shen.type_cons, Shen.call(Shen.fns["shen.call_the_continuation"], [Shen.call(Shen.fns["shen.chwild"], [Arg6354_0[2][2][2][1]]), [Shen.type_symbol, "ProcessN"], [Shen.type_symbol, "Continuation"]]), []]]]
  : Arg6354_0))))))))))))))}, 1, [], "shen.aum_to_shen"];

Shen.fns["shen.chwild"] = [Shen.type_func, function shen_user_lambda6441(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6441, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6354_0, [Shen.type_symbol, "_"])))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.newpv"], [Shen.type_cons, [Shen.type_symbol, "ProcessN"], []]]
  : ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6443(Arg6442) {
  if (Arg6442.length < 1) return [Shen.type_func, shen_user_lambda6443, 1, Arg6442];
  var Arg6442_0 = Arg6442[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.chwild"], [Arg6442_0]);})}, 1, [], undefined], Arg6354_0]);})
  : Arg6354_0))}, 1, [], "shen.chwild"];

Shen.fns["shen.newpv"] = [Shen.type_func, function shen_user_lambda6444(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6444, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((R0 = (Shen.absvector_ref((Shen.globals["shen.*varcounter*"]), Arg6354_0) + 1)),
  Shen.absvector_set((Shen.globals["shen.*varcounter*"]), Arg6354_0, R0),
  (R1 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6354_0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.call(Shen.fns["limit"], [R1]))))
  ? Shen.call(Shen.fns["shen.resizeprocessvector"], [Arg6354_0, R0])
  : [Shen.type_symbol, "shen.skip"]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.mk-pvar"], [R0]);}))}, 1, [], "shen.newpv"];

Shen.fns["shen.resizeprocessvector"] = [Shen.type_func, function shen_user_lambda6445(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6445, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6354_0)),
  (R0 = Shen.call(Shen.fns["shen.resize-vector"], [R0, (Arg6354_1 + Arg6354_1), [Shen.type_symbol, "shen.-null-"]])),
  Shen.absvector_set((Shen.globals["shen.*prologvectors*"]), Arg6354_0, R0))}, 2, [], "shen.resizeprocessvector"];

Shen.fns["shen.resize-vector"] = [Shen.type_func, function shen_user_lambda6446(Arg6354) {
  if (Arg6354.length < 3) return [Shen.type_func, shen_user_lambda6446, 3, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2];
  var R0, R1, R2;
  return ((R0 = Shen.absvector_set(Shen.absvector((1 + Arg6354_1)), 0, Arg6354_1)),
  (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector"], [Arg6354_0, R0, Shen.call(Shen.fns["limit"], [Arg6354_0]), Arg6354_1, Arg6354_2]);}))}, 3, [], "shen.resize-vector"];

Shen.fns["shen.copy-vector"] = [Shen.type_func, function shen_user_lambda6447(Arg6354) {
  if (Arg6354.length < 5) return [Shen.type_func, shen_user_lambda6447, 5, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2], Arg6354_3 = Arg6354[3], Arg6354_4 = Arg6354[4];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-2"], [(1 + Arg6354_2), (Arg6354_3 + 1), Arg6354_4, Shen.call(Shen.fns["shen.copy-vector-stage-1"], [1, Arg6354_0, Arg6354_1, (1 + Arg6354_2)])]);})}, 5, [], "shen.copy-vector"];

Shen.fns["shen.copy-vector-stage-1"] = [Shen.type_func, function shen_user_lambda6448(Arg6354) {
  if (Arg6354.length < 4) return [Shen.type_func, shen_user_lambda6448, 4, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2], Arg6354_3 = Arg6354[3];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6354_3, Arg6354_0)))
  ? Arg6354_2
  : (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-1"], [(1 + Arg6354_0), Arg6354_1, Shen.absvector_set(Arg6354_2, Arg6354_0, Shen.absvector_ref(Arg6354_1, Arg6354_0)), Arg6354_3]);}))}, 4, [], "shen.copy-vector-stage-1"];

Shen.fns["shen.copy-vector-stage-2"] = [Shen.type_func, function shen_user_lambda6449(Arg6354) {
  if (Arg6354.length < 4) return [Shen.type_func, shen_user_lambda6449, 4, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2], Arg6354_3 = Arg6354[3];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6354_1, Arg6354_0)))
  ? Arg6354_3
  : (function() {
  return Shen.call_tail(Shen.fns["shen.copy-vector-stage-2"], [(Arg6354_0 + 1), Arg6354_1, Arg6354_2, Shen.absvector_set(Arg6354_3, Arg6354_0, Arg6354_2)]);}))}, 4, [], "shen.copy-vector-stage-2"];

Shen.fns["shen.mk-pvar"] = [Shen.type_func, function shen_user_lambda6450(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6450, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return Shen.absvector_set(Shen.absvector_set(Shen.absvector(2), 0, [Shen.type_symbol, "shen.pvar"]), 1, Arg6354_0)}, 1, [], "shen.mk-pvar"];

Shen.fns["shen.pvar?"] = [Shen.type_func, function shen_user_lambda6451(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6451, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ((R0 = [Shen.type_func, function shen_user_lambda6453(Arg6452) {
  if (Arg6452.length < 1) return [Shen.type_func, shen_user_lambda6453, 1, Arg6452];
  var Arg6452_0 = Arg6452[0];
  return (Shen.absvector$question$(Arg6452_0) && Shen.unwind_tail(Shen.$eq$(Shen.absvector_ref(Arg6452_0, 0), [Shen.type_symbol, "shen.pvar"])))}, 1, [Arg6354_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6455(Arg6454) {
  if (Arg6454.length < 1) return [Shen.type_func, shen_user_lambda6455, 1, Arg6454];
  var Arg6454_0 = Arg6454[0];
  return false}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "shen.pvar?"];

Shen.fns["shen.bindv"] = [Shen.type_func, function shen_user_lambda6456(Arg6354) {
  if (Arg6354.length < 3) return [Shen.type_func, shen_user_lambda6456, 3, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2];
  var R0, R1, R2;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6354_2)),
  Shen.absvector_set(R0, Shen.absvector_ref(Arg6354_0, 1), Arg6354_1))}, 3, [], "shen.bindv"];

Shen.fns["shen.unbindv"] = [Shen.type_func, function shen_user_lambda6457(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6457, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return ((R0 = Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6354_1)),
  Shen.absvector_set(R0, Shen.absvector_ref(Arg6354_0, 1), [Shen.type_symbol, "shen.-null-"]))}, 2, [], "shen.unbindv"];

Shen.fns["shen.incinfs"] = [Shen.type_func, function shen_user_lambda6458(Arg6354) {
  if (Arg6354.length < 0) return [Shen.type_func, shen_user_lambda6458, 0, Arg6354];
  var R0, R1, R2;
  return (Shen.globals["shen.*infs*"] = (1 + (Shen.globals["shen.*infs*"])))}, 0, [], "shen.incinfs"];

Shen.fns["shen.call_the_continuation"] = [Shen.type_func, function shen_user_lambda6459(Arg6354) {
  if (Arg6354.length < 3) return [Shen.type_func, shen_user_lambda6459, 3, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && Shen.empty$question$(Arg6354_0[2]))))
  ? [Shen.type_cons, Arg6354_0[1][1], Shen.call(Shen.fns["append"], [Arg6354_0[1][2], [Shen.type_cons, Arg6354_1, [Shen.type_cons, Arg6354_2, []]]])]
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && Shen.is_type(Arg6354_0[1], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["shen.newcontinuation"], [Arg6354_0[2], Arg6354_1, Arg6354_2])),
  [Shen.type_cons, Arg6354_0[1][1], Shen.call(Shen.fns["append"], [Arg6354_0[1][2], [Shen.type_cons, Arg6354_1, [Shen.type_cons, R0, []]]])])
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.call_the_continuation"]]);})))}, 3, [], "shen.call_the_continuation"];

Shen.fns["shen.newcontinuation"] = [Shen.type_func, function shen_user_lambda6460(Arg6354) {
  if (Arg6354.length < 3) return [Shen.type_func, shen_user_lambda6460, 3, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6354_0))
  ? Arg6354_2
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && Shen.is_type(Arg6354_0[1], Shen.type_cons)))
  ? [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_cons, Arg6354_0[1][1], Shen.call(Shen.fns["append"], [Arg6354_0[1][2], [Shen.type_cons, Arg6354_1, [Shen.type_cons, Shen.call(Shen.fns["shen.newcontinuation"], [Arg6354_0[2], Arg6354_1, Arg6354_2]), []]]])], []]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.newcontinuation"]]);})))}, 3, [], "shen.newcontinuation"];

Shen.fns["return"] = [Shen.type_func, function shen_user_lambda6461(Arg6354) {
  if (Arg6354.length < 3) return [Shen.type_func, shen_user_lambda6461, 3, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [Arg6354_0, Arg6354_1]);})}, 3, [], "return"];

Shen.fns["shen.measure&return"] = [Shen.type_func, function shen_user_lambda6462(Arg6354) {
  if (Arg6354.length < 3) return [Shen.type_func, shen_user_lambda6462, 3, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2];
  var R0, R1, R2;
  return (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [(Shen.globals["shen.*infs*"]), " inferences\x0a", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [Arg6354_0, Arg6354_1]);}))}, 3, [], "shen.measure&return"];

Shen.fns["unify"] = [Shen.type_func, function shen_user_lambda6463(Arg6354) {
  if (Arg6354.length < 4) return [Shen.type_func, shen_user_lambda6463, 4, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2], Arg6354_3 = Arg6354[3];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6354_0, Arg6354_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6354_1, Arg6354_2]), Arg6354_2, Arg6354_3]);})}, 4, [], "unify"];

Shen.fns["shen.lzy="] = [Shen.type_func, function shen_user_lambda6464(Arg6354) {
  if (Arg6354.length < 4) return [Shen.type_func, shen_user_lambda6464, 4, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2], Arg6354_3 = Arg6354[3];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6354_1, Arg6354_0)))
  ? Shen.thaw(Arg6354_3)
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6354_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6354_0, Arg6354_1, Arg6354_2, Arg6354_3]);})
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6354_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6354_1, Arg6354_0, Arg6354_2, Arg6354_3]);})
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && Shen.is_type(Arg6354_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6354_0[1], Arg6354_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6354_1[1], Arg6354_2]), Arg6354_2, [Shen.type_func, function shen_user_lambda6466(Arg6465) {
  if (Arg6465.length < 4) return [Shen.type_func, shen_user_lambda6466, 4, Arg6465];
  var Arg6465_0 = Arg6465[0], Arg6465_1 = Arg6465[1], Arg6465_2 = Arg6465[2], Arg6465_3 = Arg6465[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6465_0[2], Arg6465_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6465_1[2], Arg6465_2]), Arg6465_2, Arg6465_3]);})}, 4, [Arg6354_0, Arg6354_1, Arg6354_2, Arg6354_3], undefined]]);})
  : false))))}, 4, [], "shen.lzy="];

Shen.fns["shen.deref"] = [Shen.type_func, function shen_user_lambda6467(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6467, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.deref"], [Arg6354_0[1], Arg6354_1]), Shen.call(Shen.fns["shen.deref"], [Arg6354_0[2], Arg6354_1])]
  : ((Shen.call(Shen.fns["shen.pvar?"], [Arg6354_0]))
  ? ((R0 = Shen.call(Shen.fns["shen.valvector"], [Arg6354_0, Arg6354_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.-null-"])))
  ? Arg6354_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.deref"], [R0, Arg6354_1]);})))
  : Arg6354_0))}, 2, [], "shen.deref"];

Shen.fns["shen.lazyderef"] = [Shen.type_func, function shen_user_lambda6468(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6468, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return ((Shen.call(Shen.fns["shen.pvar?"], [Arg6354_0]))
  ? ((R0 = Shen.call(Shen.fns["shen.valvector"], [Arg6354_0, Arg6354_1])),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.-null-"])))
  ? Arg6354_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.lazyderef"], [R0, Arg6354_1]);})))
  : Arg6354_0)}, 2, [], "shen.lazyderef"];

Shen.fns["shen.valvector"] = [Shen.type_func, function shen_user_lambda6469(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6469, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return Shen.absvector_ref(Shen.absvector_ref((Shen.globals["shen.*prologvectors*"]), Arg6354_1), Shen.absvector_ref(Arg6354_0, 1))}, 2, [], "shen.valvector"];

Shen.fns["unify!"] = [Shen.type_func, function shen_user_lambda6470(Arg6354) {
  if (Arg6354.length < 4) return [Shen.type_func, shen_user_lambda6470, 4, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2], Arg6354_3 = Arg6354[3];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6354_0, Arg6354_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6354_1, Arg6354_2]), Arg6354_2, Arg6354_3]);})}, 4, [], "unify!"];

Shen.fns["shen.lzy=!"] = [Shen.type_func, function shen_user_lambda6471(Arg6354) {
  if (Arg6354.length < 4) return [Shen.type_func, shen_user_lambda6471, 4, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2], Arg6354_3 = Arg6354[3];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6354_1, Arg6354_0)))
  ? Shen.thaw(Arg6354_3)
  : (((Shen.call(Shen.fns["shen.pvar?"], [Arg6354_0]) && (!Shen.call(Shen.fns["shen.occurs?"], [Arg6354_0, Shen.call(Shen.fns["shen.deref"], [Arg6354_1, Arg6354_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6354_0, Arg6354_1, Arg6354_2, Arg6354_3]);})
  : (((Shen.call(Shen.fns["shen.pvar?"], [Arg6354_1]) && (!Shen.call(Shen.fns["shen.occurs?"], [Arg6354_1, Shen.call(Shen.fns["shen.deref"], [Arg6354_0, Arg6354_2])]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6354_1, Arg6354_0, Arg6354_2, Arg6354_3]);})
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && Shen.is_type(Arg6354_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6354_0[1], Arg6354_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6354_1[1], Arg6354_2]), Arg6354_2, [Shen.type_func, function shen_user_lambda6473(Arg6472) {
  if (Arg6472.length < 4) return [Shen.type_func, shen_user_lambda6473, 4, Arg6472];
  var Arg6472_0 = Arg6472[0], Arg6472_1 = Arg6472[1], Arg6472_2 = Arg6472[2], Arg6472_3 = Arg6472[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=!"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6472_0[2], Arg6472_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6472_1[2], Arg6472_2]), Arg6472_2, Arg6472_3]);})}, 4, [Arg6354_0, Arg6354_1, Arg6354_2, Arg6354_3], undefined]]);})
  : false))))}, 4, [], "shen.lzy=!"];

Shen.fns["shen.occurs?"] = [Shen.type_func, function shen_user_lambda6474(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6474, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6354_1, Arg6354_0)))
  ? true
  : ((Shen.is_type(Arg6354_1, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.occurs?"], [Arg6354_0, Arg6354_1[1]]) || Shen.call(Shen.fns["shen.occurs?"], [Arg6354_0, Arg6354_1[2]]))
  : false))}, 2, [], "shen.occurs?"];

Shen.fns["identical"] = [Shen.type_func, function shen_user_lambda6475(Arg6354) {
  if (Arg6354.length < 4) return [Shen.type_func, shen_user_lambda6475, 4, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2], Arg6354_3 = Arg6354[3];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6354_0, Arg6354_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6354_1, Arg6354_2]), Arg6354_2, Arg6354_3]);})}, 4, [], "identical"];

Shen.fns["shen.lzy=="] = [Shen.type_func, function shen_user_lambda6476(Arg6354) {
  if (Arg6354.length < 4) return [Shen.type_func, shen_user_lambda6476, 4, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2], Arg6354_3 = Arg6354[3];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6354_1, Arg6354_0)))
  ? Shen.thaw(Arg6354_3)
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && Shen.is_type(Arg6354_1, Shen.type_cons)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6354_0[1], Arg6354_2]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6354_1[1], Arg6354_2]), Arg6354_2, [Shen.type_func, function shen_user_lambda6478(Arg6477) {
  if (Arg6477.length < 4) return [Shen.type_func, shen_user_lambda6478, 4, Arg6477];
  var Arg6477_0 = Arg6477[0], Arg6477_1 = Arg6477[1], Arg6477_2 = Arg6477[2], Arg6477_3 = Arg6477[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.lzy=="], [Arg6477_0[2], Arg6477_1[2], Arg6477_2, Arg6477_3]);})}, 4, [Arg6354_0, Arg6354_1, Arg6354_2, Arg6354_3], undefined]]);})
  : false))}, 4, [], "shen.lzy=="];

Shen.fns["shen.pvar"] = [Shen.type_func, function shen_user_lambda6479(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6479, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return ("Var" + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg6354_0, 1), "", [Shen.type_symbol, "shen.a"]]))}, 1, [], "shen.pvar"];

Shen.fns["bind"] = [Shen.type_func, function shen_user_lambda6480(Arg6354) {
  if (Arg6354.length < 4) return [Shen.type_func, shen_user_lambda6480, 4, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2], Arg6354_3 = Arg6354[3];
  var R0, R1, R2;
  return (Shen.call(Shen.fns["shen.bindv"], [Arg6354_0, Arg6354_1, Arg6354_2]),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6354_3))),
  Shen.call(Shen.fns["shen.unbindv"], [Arg6354_0, Arg6354_2]),
  R0)}, 4, [], "bind"];

Shen.fns["fwhen"] = [Shen.type_func, function shen_user_lambda6481(Arg6354) {
  if (Arg6354.length < 3) return [Shen.type_func, shen_user_lambda6481, 3, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(true, Arg6354_0)))
  ? Shen.thaw(Arg6354_2)
  : ((Shen.unwind_tail(Shen.$eq$(false, Arg6354_0)))
  ? false
  : (function() {
  return Shen.simple_error(("fwhen expects a boolean: not " + Shen.call(Shen.fns["shen.app"], [Arg6354_0, "%", [Shen.type_symbol, "shen.s"]])));})))}, 3, [], "fwhen"];

Shen.fns["call"] = [Shen.type_func, function shen_user_lambda6482(Arg6354) {
  if (Arg6354.length < 3) return [Shen.type_func, shen_user_lambda6482, 3, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6354_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-help"], [Shen.call(Shen.fns["shen.m_prolog_to_s-prolog_predicate"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6354_0[1], Arg6354_1])]), Arg6354_0[2], Arg6354_1, Arg6354_2]);})
  : false)}, 3, [], "call"];

Shen.fns["shen.call-help"] = [Shen.type_func, function shen_user_lambda6483(Arg6354) {
  if (Arg6354.length < 4) return [Shen.type_func, shen_user_lambda6483, 4, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2], Arg6354_3 = Arg6354[3];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6354_1))
  ? (function() {
  return Shen.call_tail(Arg6354_0, [Arg6354_2, Arg6354_3]);})
  : ((Shen.is_type(Arg6354_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-help"], [Shen.call(Arg6354_0, [Arg6354_1[1]]), Arg6354_1[2], Arg6354_2, Arg6354_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.call-help"]]);})))}, 4, [], "shen.call-help"];

Shen.fns["shen.intprolog"] = [Shen.type_func, function shen_user_lambda6484(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6484, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_0, Shen.type_cons) && Shen.is_type(Arg6354_0[1], Shen.type_cons)))
  ? ((R0 = Shen.call(Shen.fns["shen.start-new-prolog-process"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help"], [Arg6354_0[1][1], Shen.call(Shen.fns["shen.insert-prolog-variables"], [[Shen.type_cons, Arg6354_0[1][2], [Shen.type_cons, Arg6354_0[2], []]], R0]), R0]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.intprolog"]]);}))}, 1, [], "shen.intprolog"];

Shen.fns["shen.intprolog-help"] = [Shen.type_func, function shen_user_lambda6485(Arg6354) {
  if (Arg6354.length < 3) return [Shen.type_func, shen_user_lambda6485, 3, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6354_1, Shen.type_cons) && (Shen.is_type(Arg6354_1[2], Shen.type_cons) && Shen.empty$question$(Arg6354_1[2][2]))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help-help"], [Arg6354_0, Arg6354_1[1], Arg6354_1[2][1], Arg6354_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.intprolog-help"]]);}))}, 3, [], "shen.intprolog-help"];

Shen.fns["shen.intprolog-help-help"] = [Shen.type_func, function shen_user_lambda6486(Arg6354) {
  if (Arg6354.length < 4) return [Shen.type_func, shen_user_lambda6486, 4, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2], Arg6354_3 = Arg6354[3];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6354_1))
  ? (function() {
  return Shen.call_tail(Arg6354_0, [Arg6354_3, [Shen.type_func, function shen_user_lambda6488(Arg6487) {
  if (Arg6487.length < 4) return [Shen.type_func, shen_user_lambda6488, 4, Arg6487];
  var Arg6487_0 = Arg6487[0], Arg6487_1 = Arg6487[1], Arg6487_2 = Arg6487[2], Arg6487_3 = Arg6487[3];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [Arg6487_2, Arg6487_3]);})}, 4, [Arg6354_0, Arg6354_1, Arg6354_2, Arg6354_3], undefined]]);})
  : ((Shen.is_type(Arg6354_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.intprolog-help-help"], [Shen.call(Arg6354_0, [Arg6354_1[1]]), Arg6354_1[2], Arg6354_2, Arg6354_3]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.intprolog-help-help"]]);})))}, 4, [], "shen.intprolog-help-help"];

Shen.fns["shen.call-rest"] = [Shen.type_func, function shen_user_lambda6489(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6489, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6354_0))
  ? true
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && Shen.is_type(Arg6354_0[1][2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [[Shen.type_cons, [Shen.type_cons, Shen.call(Arg6354_0[1][1], [Arg6354_0[1][2][1]]), Arg6354_0[1][2][2]], Arg6354_0[2]], Arg6354_1]);})
  : (((Shen.is_type(Arg6354_0, Shen.type_cons) && (Shen.is_type(Arg6354_0[1], Shen.type_cons) && Shen.empty$question$(Arg6354_0[1][2]))))
  ? (function() {
  return Shen.call_tail(Arg6354_0[1][1], [Arg6354_1, [Shen.type_func, function shen_user_lambda6491(Arg6490) {
  if (Arg6490.length < 2) return [Shen.type_func, shen_user_lambda6491, 2, Arg6490];
  var Arg6490_0 = Arg6490[0], Arg6490_1 = Arg6490[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.call-rest"], [Arg6490_0[2], Arg6490_1]);})}, 2, [Arg6354_0, Arg6354_1], undefined]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.call-rest"]]);}))))}, 2, [], "shen.call-rest"];

Shen.fns["shen.start-new-prolog-process"] = [Shen.type_func, function shen_user_lambda6492(Arg6354) {
  if (Arg6354.length < 0) return [Shen.type_func, shen_user_lambda6492, 0, Arg6354];
  var R0, R1, R2;
  return ((R0 = (Shen.globals["shen.*process-counter*"] = (1 + (Shen.globals["shen.*process-counter*"])))),
  (function() {
  return Shen.call_tail(Shen.fns["shen.initialise-prolog"], [R0]);}))}, 0, [], "shen.start-new-prolog-process"];

Shen.fns["shen.insert-prolog-variables"] = [Shen.type_func, function shen_user_lambda6493(Arg6354) {
  if (Arg6354.length < 2) return [Shen.type_func, shen_user_lambda6493, 2, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [Arg6354_0, Shen.call(Shen.fns["shen.flatten"], [Arg6354_0]), Arg6354_1]);})}, 2, [], "shen.insert-prolog-variables"];

Shen.fns["shen.insert-prolog-variables-help"] = [Shen.type_func, function shen_user_lambda6494(Arg6354) {
  if (Arg6354.length < 3) return [Shen.type_func, shen_user_lambda6494, 3, Arg6354];
  var Arg6354_0 = Arg6354[0], Arg6354_1 = Arg6354[1], Arg6354_2 = Arg6354[2];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6354_1))
  ? Arg6354_0
  : (((Shen.is_type(Arg6354_1, Shen.type_cons) && Shen.call(Shen.fns["variable?"], [Arg6354_1[1]])))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6354_2])),
  (R0 = Shen.call(Shen.fns["subst"], [R0, Arg6354_1[1], Arg6354_0])),
  (R1 = Shen.call(Shen.fns["remove"], [Arg6354_1[1], Arg6354_1[2]])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [R0, R1, Arg6354_2]);}))
  : ((Shen.is_type(Arg6354_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.insert-prolog-variables-help"], [Arg6354_0, Arg6354_1[2], Arg6354_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.insert-prolog-variables-help"]]);}))))}, 3, [], "shen.insert-prolog-variables-help"];

Shen.fns["shen.initialise-prolog"] = [Shen.type_func, function shen_user_lambda6495(Arg6354) {
  if (Arg6354.length < 1) return [Shen.type_func, shen_user_lambda6495, 1, Arg6354];
  var Arg6354_0 = Arg6354[0];
  var R0, R1, R2;
  return (Shen.absvector_set((Shen.globals["shen.*prologvectors*"]), Arg6354_0, Shen.call(Shen.fns["shen.fillvector"], [Shen.vector(10), 1, 10, [Shen.type_symbol, "shen.-null-"]])),
  Shen.absvector_set((Shen.globals["shen.*varcounter*"]), Arg6354_0, 1),
  Arg6354_0)}, 1, [], "shen.initialise-prolog"];

Shen.call_toplevel(function js$dot$shen_js_toplevel6496(Arg6354) {
  if (Arg6354.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6496, 0, Arg6354];
  var R0, R1, R2;
  return []});


"Copyright (c) 2015, Mark Tarver\x0d\x0a\x0d\x0aAll rights reserved.\x0d\x0a\x0d\x0aRedistribution and use in source and binary forms, with or without\x0d\x0amodification, are permitted provided that the following conditions are met:\x0d\x0a1. Redistributions of source code must retain the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer.\x0d\x0a2. Redistributions in binary form must reproduce the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer in the\x0d\x0a   documentation and/or other materials provided with the distribution.\x0d\x0a3. The name of Mark Tarver may not be used to endorse or promote products\x0d\x0a   derived from this software without specific prior written permission.\x0d\x0a\x0d\x0aTHIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY\x0d\x0aEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\x0d\x0aWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\x0d\x0aDISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY\x0d\x0aDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\x0d\x0a(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\x0d\x0aLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\x0d\x0aON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0d\x0a(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\x0d\x0aSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";

Shen.fns["shen.f_error"] = [Shen.type_func, function shen_user_lambda6501(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6501, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  return (Shen.call(Shen.fns["shen.prhush"], [("partial function " + Shen.call(Shen.fns["shen.app"], [Arg6500_0, ";\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  ((((!Shen.call(Shen.fns["shen.tracked?"], [Arg6500_0])) && Shen.call(Shen.fns["y-or-n?"], [("track " + Shen.call(Shen.fns["shen.app"], [Arg6500_0, "? ", [Shen.type_symbol, "shen.a"]]))])))
  ? Shen.call(Shen.fns["shen.track-function"], [Shen.call(Shen.fns["ps"], [Arg6500_0])])
  : [Shen.type_symbol, "shen.ok"]),
  (function() {
  return Shen.simple_error("aborted");}))}, 1, [], "shen.f_error"];

Shen.fns["shen.tracked?"] = [Shen.type_func, function shen_user_lambda6502(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6502, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6500_0, (Shen.globals["shen.*tracking*"])]);})}, 1, [], "shen.tracked?"];

Shen.fns["track"] = [Shen.type_func, function shen_user_lambda6503(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6503, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["ps"], [Arg6500_0])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.track-function"], [R0]);}))}, 1, [], "track"];

Shen.fns["shen.track-function"] = [Shen.type_func, function shen_user_lambda6504(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6504, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  var R0;
  return (((Shen.is_type(Arg6500_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg6500_0[1])) && (Shen.is_type(Arg6500_0[2], Shen.type_cons) && (Shen.is_type(Arg6500_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6500_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6500_0[2][2][2][2])))))))
  ? ((R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg6500_0[2][1], [Shen.type_cons, Arg6500_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-tracking-code"], [Arg6500_0[2][1], Arg6500_0[2][2][1], Arg6500_0[2][2][2][1]]), []]]]]),
  (R0 = Shen.eval_kl(R0)),
  (Shen.globals["shen.*tracking*"] = [Shen.type_cons, R0, (Shen.globals["shen.*tracking*"])]),
  R0)
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.track-function"]]);}))}, 1, [], "shen.track-function"];

Shen.fns["shen.insert-tracking-code"] = [Shen.type_func, function shen_user_lambda6505(Arg6500) {
  if (Arg6500.length < 3) return [Shen.type_func, shen_user_lambda6505, 3, Arg6500];
  var Arg6500_0 = Arg6500[0], Arg6500_1 = Arg6500[1], Arg6500_2 = Arg6500[2];
  var R0;
  return [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, 1, []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.input-track"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, Arg6500_0, [Shen.type_cons, Shen.call(Shen.fns["shen.cons_form"], [Arg6500_1]), []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.terpri-or-read-char"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6500_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.output-track"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, Arg6500_0, [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "shen.*call*"], []]], [Shen.type_cons, 1, []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.terpri-or-read-char"], []], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]], []]]], []]]], []]]]], []]]], []]]], []]]]}, 3, [], "shen.insert-tracking-code"];

Shen.fns["step"] = [Shen.type_func, function shen_user_lambda6506(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6506, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6500_0)))
  ? (Shen.globals["shen.*step*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6500_0)))
  ? (Shen.globals["shen.*step*"] = false)
  : (function() {
  return Shen.simple_error("step expects a + or a -.\x0a");})))}, 1, [], "step"];

Shen.fns["spy"] = [Shen.type_func, function shen_user_lambda6507(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6507, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6500_0)))
  ? (Shen.globals["shen.*spy*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6500_0)))
  ? (Shen.globals["shen.*spy*"] = false)
  : (function() {
  return Shen.simple_error("spy expects a + or a -.\x0a");})))}, 1, [], "spy"];

Shen.fns["shen.terpri-or-read-char"] = [Shen.type_func, function shen_user_lambda6508(Arg6500) {
  if (Arg6500.length < 0) return [Shen.type_func, shen_user_lambda6508, 0, Arg6500];
  var R0;
  return (((Shen.globals["shen.*step*"]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.check-byte"], [Shen.read_byte((Shen.globals["*stinput*"]))]);})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);}))}, 0, [], "shen.terpri-or-read-char"];

Shen.fns["shen.check-byte"] = [Shen.type_func, function shen_user_lambda6509(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6509, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6500_0, Shen.call(Shen.fns["shen.hat"], []))))
  ? (function() {
  return Shen.simple_error("aborted");})
  : true)}, 1, [], "shen.check-byte"];

Shen.fns["shen.input-track"] = [Shen.type_func, function shen_user_lambda6510(Arg6500) {
  if (Arg6500.length < 3) return [Shen.type_func, shen_user_lambda6510, 3, Arg6500];
  var Arg6500_0 = Arg6500[0], Arg6500_1 = Arg6500[1], Arg6500_2 = Arg6500[2];
  var R0;
  return (Shen.call(Shen.fns["shen.prhush"], [("\x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg6500_0]), ("<" + Shen.call(Shen.fns["shen.app"], [Arg6500_0, ("> Inputs to " + Shen.call(Shen.fns["shen.app"], [Arg6500_1, (" \x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg6500_0]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.recursively-print"], [Arg6500_2]);}))}, 3, [], "shen.input-track"];

Shen.fns["shen.recursively-print"] = [Shen.type_func, function shen_user_lambda6511(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6511, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  var R0;
  return ((Shen.empty$question$(Arg6500_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [" ==>", Shen.call(Shen.fns["stoutput"], [])]);})
  : ((Shen.is_type(Arg6500_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["print"], [Arg6500_0[1]]),
  Shen.call(Shen.fns["shen.prhush"], [", ", Shen.call(Shen.fns["stoutput"], [])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.recursively-print"], [Arg6500_0[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.recursively-print"]]);})))}, 1, [], "shen.recursively-print"];

Shen.fns["shen.spaces"] = [Shen.type_func, function shen_user_lambda6512(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6512, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  var R0;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6500_0)))
  ? ""
  : (" " + Shen.call(Shen.fns["shen.spaces"], [(Arg6500_0 - 1)])))}, 1, [], "shen.spaces"];

Shen.fns["shen.output-track"] = [Shen.type_func, function shen_user_lambda6513(Arg6500) {
  if (Arg6500.length < 3) return [Shen.type_func, shen_user_lambda6513, 3, Arg6500];
  var Arg6500_0 = Arg6500[0], Arg6500_1 = Arg6500[1], Arg6500_2 = Arg6500[2];
  var R0;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("\x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg6500_0]), ("<" + Shen.call(Shen.fns["shen.app"], [Arg6500_0, ("> Output from " + Shen.call(Shen.fns["shen.app"], [Arg6500_1, (" \x0a" + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.spaces"], [Arg6500_0]), ("==> " + Shen.call(Shen.fns["shen.app"], [Arg6500_2, "", [Shen.type_symbol, "shen.s"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);})}, 3, [], "shen.output-track"];

Shen.fns["untrack"] = [Shen.type_func, function shen_user_lambda6514(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6514, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  var R0;
  return (function() {
  return Shen.call_tail(Shen.fns["eval"], [Shen.call(Shen.fns["ps"], [Arg6500_0])]);})}, 1, [], "untrack"];

Shen.fns["profile"] = [Shen.type_func, function shen_user_lambda6515(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6515, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  var R0;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.profile-help"], [Shen.call(Shen.fns["ps"], [Arg6500_0])]);})}, 1, [], "profile"];

Shen.fns["shen.profile-help"] = [Shen.type_func, function shen_user_lambda6516(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6516, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  var R0, R1;
  return (((Shen.is_type(Arg6500_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defun"], Arg6500_0[1])) && (Shen.is_type(Arg6500_0[2], Shen.type_cons) && (Shen.is_type(Arg6500_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6500_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6500_0[2][2][2][2])))))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.f"]])),
  (R1 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, Arg6500_0[2][1], [Shen.type_cons, Arg6500_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.profile-func"], [Arg6500_0[2][1], Arg6500_0[2][2][1], [Shen.type_cons, R0, Arg6500_0[2][2][1]]]), []]]]]),
  (R0 = [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, R0, [Shen.type_cons, Arg6500_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["subst"], [R0, Arg6500_0[2][1], Arg6500_0[2][2][2][1]]), []]]]]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R1]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R0]),
  Arg6500_0[2][1])
  : (function() {
  return Shen.simple_error("Cannot profile.\x0a");}))}, 1, [], "shen.profile-help"];

Shen.fns["unprofile"] = [Shen.type_func, function shen_user_lambda6517(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6517, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["untrack"], [Arg6500_0]);})}, 1, [], "unprofile"];

Shen.fns["shen.profile-func"] = [Shen.type_func, function shen_user_lambda6518(Arg6500) {
  if (Arg6500.length < 3) return [Shen.type_func, shen_user_lambda6518, 3, Arg6500];
  var Arg6500_0 = Arg6500[0], Arg6500_1 = Arg6500[1], Arg6500_2 = Arg6500[2];
  var R0, R1;
  return [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Start"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6500_2, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Start"], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Record"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.put-profile"], [Shen.type_cons, Arg6500_0, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.get-profile"], [Shen.type_cons, Arg6500_0, []]], [Shen.type_cons, [Shen.type_symbol, "Finish"], []]]], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]], []]]]], []]]]], []]]]]}, 3, [], "shen.profile-func"];

Shen.fns["profile-results"] = [Shen.type_func, function shen_user_lambda6519(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6519, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.get-profile"], [Arg6500_0])),
  Shen.call(Shen.fns["shen.put-profile"], [Arg6500_0, 0]),
  [Shen.fns['shen.tuple'], Arg6500_0, R0])}, 1, [], "profile-results"];

Shen.fns["shen.get-profile"] = [Shen.type_func, function shen_user_lambda6520(Arg6500) {
  if (Arg6500.length < 1) return [Shen.type_func, shen_user_lambda6520, 1, Arg6500];
  var Arg6500_0 = Arg6500[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda6522(Arg6521) {
  if (Arg6521.length < 1) return [Shen.type_func, shen_user_lambda6522, 1, Arg6521];
  var Arg6521_0 = Arg6521[0];
  return (function() {
  return Shen.call_tail(Shen.fns["get"], [Arg6521_0, [Shen.type_symbol, "profile"], (Shen.globals["*property-vector*"])]);})}, 1, [Arg6500_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6524(Arg6523) {
  if (Arg6523.length < 1) return [Shen.type_func, shen_user_lambda6524, 1, Arg6523];
  var Arg6523_0 = Arg6523[0];
  return 0}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "shen.get-profile"];

Shen.fns["shen.put-profile"] = [Shen.type_func, function shen_user_lambda6525(Arg6500) {
  if (Arg6500.length < 2) return [Shen.type_func, shen_user_lambda6525, 2, Arg6500];
  var Arg6500_0 = Arg6500[0], Arg6500_1 = Arg6500[1];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["put"], [Arg6500_0, [Shen.type_symbol, "profile"], Arg6500_1, (Shen.globals["*property-vector*"])]);})}, 2, [], "shen.put-profile"];

Shen.call_toplevel(function js$dot$shen_js_toplevel6526(Arg6500) {
  if (Arg6500.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6526, 0, Arg6500];
  var R0, R1;
  return (Shen.globals["shen.*step*"] = false)});


"Copyright (c) 2015, Mark Tarver\x0d\x0a\x0d\x0aAll rights reserved.\x0d\x0a\x0d\x0aRedistribution and use in source and binary forms, with or without\x0d\x0amodification, are permitted provided that the following conditions are met:\x0d\x0a1. Redistributions of source code must retain the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer.\x0d\x0a2. Redistributions in binary form must reproduce the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer in the\x0d\x0a   documentation and/or other materials provided with the distribution.\x0d\x0a3. The name of Mark Tarver may not be used to endorse or promote products\x0d\x0a   derived from this software without specific prior written permission.\x0d\x0a\x0d\x0aTHIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY\x0d\x0aEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\x0d\x0aWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\x0d\x0aDISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY\x0d\x0aDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\x0d\x0a(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\x0d\x0aLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\x0d\x0aON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0d\x0a(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\x0d\x0aSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";

Shen.fns["load"] = [Shen.type_func, function shen_user_lambda6531(Arg6530) {
  if (Arg6530.length < 1) return [Shen.type_func, shen_user_lambda6531, 1, Arg6530];
  var Arg6530_0 = Arg6530[0];
  var R0, R1, R2;
  return (((R0 = Shen.get_time([Shen.type_symbol, "run"])),
  (R1 = Shen.call(Shen.fns["shen.load-help"], [(Shen.globals["shen.*tc*"]), Shen.call(Shen.fns["read-file"], [Arg6530_0])])),
  (R2 = Shen.get_time([Shen.type_symbol, "run"])),
  (R2 = (R2 - R0)),
  Shen.call(Shen.fns["shen.prhush"], [("\x0arun time: " + (Shen.str(R2) + " secs\x0a")), Shen.call(Shen.fns["stoutput"], [])]),
  R1),
  (((Shen.globals["shen.*tc*"]))
  ? Shen.call(Shen.fns["shen.prhush"], [("\x0atypechecked in " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["inferences"], []), " inferences\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])])
  : [Shen.type_symbol, "shen.skip"]),
  [Shen.type_symbol, "loaded"])}, 1, [], "load"];

Shen.fns["shen.load-help"] = [Shen.type_func, function shen_user_lambda6532(Arg6530) {
  if (Arg6530.length < 2) return [Shen.type_func, shen_user_lambda6532, 2, Arg6530];
  var Arg6530_0 = Arg6530[0], Arg6530_1 = Arg6530[1];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(false, Arg6530_0)))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6534(Arg6533) {
  if (Arg6533.length < 1) return [Shen.type_func, shen_user_lambda6534, 1, Arg6533];
  var Arg6533_0 = Arg6533[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.eval-without-macros"], [Arg6533_0]), "\x0a", [Shen.type_symbol, "shen.s"]]), Shen.call(Shen.fns["stoutput"], [])]);})}, 1, [], undefined], Arg6530_1]);})
  : ((R0 = Shen.call(Shen.fns["mapcan"], [[Shen.type_func, function shen_user_lambda6536(Arg6535) {
  if (Arg6535.length < 1) return [Shen.type_func, shen_user_lambda6536, 1, Arg6535];
  var Arg6535_0 = Arg6535[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remove-synonyms"], [Arg6535_0]);})}, 1, [], undefined], Arg6530_1])),
  (R1 = Shen.call(Shen.fns["mapcan"], [[Shen.type_func, function shen_user_lambda6538(Arg6537) {
  if (Arg6537.length < 1) return [Shen.type_func, shen_user_lambda6538, 1, Arg6537];
  var Arg6537_0 = Arg6537[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.typetable"], [Arg6537_0]);})}, 1, [], undefined], R0])),
  Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6540(Arg6539) {
  if (Arg6539.length < 1) return [Shen.type_func, shen_user_lambda6540, 1, Arg6539];
  var Arg6539_0 = Arg6539[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.assumetype"], [Arg6539_0]);})}, 1, [], undefined], R1]),
  (R0 = [Shen.type_func, function shen_user_lambda6542(Arg6541) {
  if (Arg6541.length < 2) return [Shen.type_func, shen_user_lambda6542, 2, Arg6541];
  var Arg6541_0 = Arg6541[0], Arg6541_1 = Arg6541[1];
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6544(Arg6543) {
  if (Arg6543.length < 1) return [Shen.type_func, shen_user_lambda6544, 1, Arg6543];
  var Arg6543_0 = Arg6543[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-load"], [Arg6543_0]);})}, 1, [], undefined], Arg6541_0]);})}, 2, [R0, R1], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6546(Arg6545) {
  if (Arg6545.length < 2) return [Shen.type_func, shen_user_lambda6546, 2, Arg6545];
  var Arg6545_0 = Arg6545[0], Arg6545_1 = Arg6545[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.unwind-types"], [Arg6545_1, Arg6545_0]);})}, 2, [R1], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);})))}, 2, [], "shen.load-help"];

Shen.fns["shen.remove-synonyms"] = [Shen.type_func, function shen_user_lambda6547(Arg6530) {
  if (Arg6530.length < 1) return [Shen.type_func, shen_user_lambda6547, 1, Arg6530];
  var Arg6530_0 = Arg6530[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6530_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.synonyms-help"], Arg6530_0[1]))))
  ? (Shen.call(Shen.fns["eval"], [Arg6530_0]),
  [])
  : [Shen.type_cons, Arg6530_0, []])}, 1, [], "shen.remove-synonyms"];

Shen.fns["shen.typecheck-and-load"] = [Shen.type_func, function shen_user_lambda6548(Arg6530) {
  if (Arg6530.length < 1) return [Shen.type_func, shen_user_lambda6548, 1, Arg6530];
  var Arg6530_0 = Arg6530[0];
  var R0, R1, R2;
  return (Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.typecheck-and-evaluate"], [Arg6530_0, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "A"]])]);}))}, 1, [], "shen.typecheck-and-load"];

Shen.fns["shen.typetable"] = [Shen.type_func, function shen_user_lambda6549(Arg6530) {
  if (Arg6530.length < 1) return [Shen.type_func, shen_user_lambda6549, 1, Arg6530];
  var Arg6530_0 = Arg6530[0];
  var R0, R1, R2;
  return (((Shen.is_type(Arg6530_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], Arg6530_0[1])) && Shen.is_type(Arg6530_0[2], Shen.type_cons))))
  ? ((R0 = Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda6551(Arg6550) {
  if (Arg6550.length < 1) return [Shen.type_func, shen_user_lambda6551, 1, Arg6550];
  var Arg6550_0 = Arg6550[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<sig+rest>"], [Arg6550_0]);})}, 1, [], undefined], Arg6530_0[2][2], [Shen.type_func, function shen_user_lambda6553(Arg6552) {
  if (Arg6552.length < 2) return [Shen.type_func, shen_user_lambda6553, 2, Arg6552];
  var Arg6552_0 = Arg6552[0], Arg6552_1 = Arg6552[1];
  return (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6552_0[2][1], " lacks a proper signature.\x0a", [Shen.type_symbol, "shen.a"]]));})}, 2, [Arg6530_0], undefined]])),
  [Shen.type_cons, [Shen.type_cons, Arg6530_0[2][1], R0], []])
  : [])}, 1, [], "shen.typetable"];

Shen.fns["shen.assumetype"] = [Shen.type_func, function shen_user_lambda6554(Arg6530) {
  if (Arg6530.length < 1) return [Shen.type_func, shen_user_lambda6554, 1, Arg6530];
  var Arg6530_0 = Arg6530[0];
  var R0, R1, R2;
  return ((Shen.is_type(Arg6530_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["declare"], [Arg6530_0[1], Arg6530_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.assumetype"]]);}))}, 1, [], "shen.assumetype"];

Shen.fns["shen.unwind-types"] = [Shen.type_func, function shen_user_lambda6555(Arg6530) {
  if (Arg6530.length < 2) return [Shen.type_func, shen_user_lambda6555, 2, Arg6530];
  var Arg6530_0 = Arg6530[0], Arg6530_1 = Arg6530[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6530_1))
  ? (function() {
  return Shen.simple_error(Shen.error_to_string(Arg6530_0));})
  : (((Shen.is_type(Arg6530_1, Shen.type_cons) && Shen.is_type(Arg6530_1[1], Shen.type_cons)))
  ? (Shen.call(Shen.fns["shen.remtype"], [Arg6530_1[1][1]]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.unwind-types"], [Arg6530_0, Arg6530_1[2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.unwind-types"]]);})))}, 2, [], "shen.unwind-types"];

Shen.fns["shen.remtype"] = [Shen.type_func, function shen_user_lambda6556(Arg6530) {
  if (Arg6530.length < 1) return [Shen.type_func, shen_user_lambda6556, 1, Arg6530];
  var Arg6530_0 = Arg6530[0];
  var R0, R1, R2;
  return (Shen.globals["shen.*signedfuncs*"] = Shen.call(Shen.fns["shen.removetype"], [Arg6530_0, (Shen.globals["shen.*signedfuncs*"])]))}, 1, [], "shen.remtype"];

Shen.fns["shen.removetype"] = [Shen.type_func, function shen_user_lambda6557(Arg6530) {
  if (Arg6530.length < 2) return [Shen.type_func, shen_user_lambda6557, 2, Arg6530];
  var Arg6530_0 = Arg6530[0], Arg6530_1 = Arg6530[1];
  var R0, R1, R2;
  return ((Shen.empty$question$(Arg6530_1))
  ? []
  : (((Shen.is_type(Arg6530_1, Shen.type_cons) && (Shen.is_type(Arg6530_1[1], Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg6530_1[1][1], Arg6530_0)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.removetype"], [Arg6530_1[1][1], Arg6530_1[2]]);})
  : ((Shen.is_type(Arg6530_1, Shen.type_cons))
  ? [Shen.type_cons, Arg6530_1[1], Shen.call(Shen.fns["shen.removetype"], [Arg6530_0, Arg6530_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.removetype"]]);}))))}, 2, [], "shen.removetype"];

Shen.fns["shen.<sig+rest>"] = [Shen.type_func, function shen_user_lambda6558(Arg6530) {
  if (Arg6530.length < 1) return [Shen.type_func, shen_user_lambda6558, 1, Arg6530];
  var Arg6530_0 = Arg6530[0];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.<signature>"], [Arg6530_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<!>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R1[1], Shen.call(Shen.fns["shen.hdtl"], [R0])]);})
  : Shen.fail_obj))
  : Shen.fail_obj))}, 1, [], "shen.<sig+rest>"];

Shen.fns["write-to-file"] = [Shen.type_func, function shen_user_lambda6559(Arg6530) {
  if (Arg6530.length < 2) return [Shen.type_func, shen_user_lambda6559, 2, Arg6530];
  var Arg6530_0 = Arg6530[0], Arg6530_1 = Arg6530[1];
  var R0, R1, R2;
  return ((R0 = Shen.open(Arg6530_0, [Shen.type_symbol, "out"])),
  (((typeof(Arg6530_1) == 'string'))
  ? (R1 = Shen.call(Shen.fns["shen.app"], [Arg6530_1, "\x0a\x0a", [Shen.type_symbol, "shen.a"]]))
  : (R1 = Shen.call(Shen.fns["shen.app"], [Arg6530_1, "\x0a\x0a", [Shen.type_symbol, "shen.s"]]))),
  Shen.call(Shen.fns["pr"], [R1, R0]),
  Shen.close(R0),
  Arg6530_1)}, 2, [], "write-to-file"];

Shen.call_toplevel(function js$dot$shen_js_toplevel6560(Arg6530) {
  if (Arg6530.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6560, 0, Arg6530];
  var R0, R1, R2;
  return []});


"Copyright (c) 2015, Mark Tarver\x0d\x0a\x0d\x0aAll rights reserved.\x0d\x0a\x0d\x0aRedistribution and use in source and binary forms, with or without\x0d\x0amodification, are permitted provided that the following conditions are met:\x0d\x0a1. Redistributions of source code must retain the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer.\x0d\x0a2. Redistributions in binary form must reproduce the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer in the\x0d\x0a   documentation and/or other materials provided with the distribution.\x0d\x0a3. The name of Mark Tarver may not be used to endorse or promote products\x0d\x0a   derived from this software without specific prior written permission.\x0d\x0a\x0d\x0aTHIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY\x0d\x0aEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\x0d\x0aWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\x0d\x0aDISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY\x0d\x0aDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\x0d\x0a(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\x0d\x0aLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\x0d\x0aON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0d\x0a(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\x0d\x0aSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";

Shen.fns["pr"] = [Shen.type_func, function shen_user_lambda6573(Arg6572) {
  if (Arg6572.length < 2) return [Shen.type_func, shen_user_lambda6573, 2, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda6575(Arg6574) {
  if (Arg6574.length < 2) return [Shen.type_func, shen_user_lambda6575, 2, Arg6574];
  var Arg6574_0 = Arg6574[0], Arg6574_1 = Arg6574[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prh"], [Arg6574_1, Arg6574_0, 0]);})}, 2, [Arg6572_1, Arg6572_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6577(Arg6576) {
  if (Arg6576.length < 2) return [Shen.type_func, shen_user_lambda6577, 2, Arg6576];
  var Arg6576_0 = Arg6576[0], Arg6576_1 = Arg6576[1];
  return Arg6576_0}, 2, [Arg6572_0], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 2, [], "pr"];

Shen.fns["shen.prh"] = [Shen.type_func, function shen_user_lambda6578(Arg6572) {
  if (Arg6572.length < 3) return [Shen.type_func, shen_user_lambda6578, 3, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1], Arg6572_2 = Arg6572[2];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prh"], [Arg6572_0, Arg6572_1, Shen.call(Shen.fns["shen.write-char-and-inc"], [Arg6572_0, Arg6572_1, Arg6572_2])]);})}, 3, [], "shen.prh"];

Shen.fns["shen.write-char-and-inc"] = [Shen.type_func, function shen_user_lambda6579(Arg6572) {
  if (Arg6572.length < 3) return [Shen.type_func, shen_user_lambda6579, 3, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1], Arg6572_2 = Arg6572[2];
  var R0, R1;
  return (Shen.write_byte(Shen.string_$gt$n(Arg6572_0[Arg6572_2]), Arg6572_1),
  (Arg6572_2 + 1))}, 3, [], "shen.write-char-and-inc"];

Shen.fns["print"] = [Shen.type_func, function shen_user_lambda6580(Arg6572) {
  if (Arg6572.length < 1) return [Shen.type_func, shen_user_lambda6580, 1, Arg6572];
  var Arg6572_0 = Arg6572[0];
  var R0, R1;
  return ((R0 = Shen.call(Shen.fns["shen.insert"], [Arg6572_0, "~S"])),
  Shen.call(Shen.fns["shen.prhush"], [R0, Shen.call(Shen.fns["stoutput"], [])]),
  Arg6572_0)}, 1, [], "print"];

Shen.fns["shen.prhush"] = [Shen.type_func, function shen_user_lambda6581(Arg6572) {
  if (Arg6572.length < 2) return [Shen.type_func, shen_user_lambda6581, 2, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1];
  var R0, R1;
  return (((Shen.globals["*hush*"]))
  ? Arg6572_0
  : (function() {
  return Shen.call_tail(Shen.fns["pr"], [Arg6572_0, Arg6572_1]);}))}, 2, [], "shen.prhush"];

Shen.fns["shen.mkstr"] = [Shen.type_func, function shen_user_lambda6582(Arg6572) {
  if (Arg6572.length < 2) return [Shen.type_func, shen_user_lambda6582, 2, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1];
  var R0, R1;
  return (((typeof(Arg6572_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-l"], [Shen.call(Shen.fns["shen.proc-nl"], [Arg6572_0]), Arg6572_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-r"], [[Shen.type_cons, [Shen.type_symbol, "shen.proc-nl"], [Shen.type_cons, Arg6572_0, []]], Arg6572_1]);}))}, 2, [], "shen.mkstr"];

Shen.fns["shen.mkstr-l"] = [Shen.type_func, function shen_user_lambda6583(Arg6572) {
  if (Arg6572.length < 2) return [Shen.type_func, shen_user_lambda6583, 2, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg6572_1))
  ? Arg6572_0
  : ((Shen.is_type(Arg6572_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-l"], [Shen.call(Shen.fns["shen.insert-l"], [Arg6572_1[1], Arg6572_0]), Arg6572_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.mkstr-l"]]);})))}, 2, [], "shen.mkstr-l"];

Shen.fns["shen.insert-l"] = [Shen.type_func, function shen_user_lambda6584(Arg6572) {
  if (Arg6572.length < 2) return [Shen.type_func, shen_user_lambda6584, 2, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$("", Arg6572_1)))
  ? ""
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg6572_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg6572_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg6572_1)]) && Shen.unwind_tail(Shen.$eq$("A", Shen.tlstr(Arg6572_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg6572_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg6572_1)), [Shen.type_cons, [Shen.type_symbol, "shen.a"], []]]]]
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg6572_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg6572_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg6572_1)]) && Shen.unwind_tail(Shen.$eq$("R", Shen.tlstr(Arg6572_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg6572_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg6572_1)), [Shen.type_cons, [Shen.type_symbol, "shen.r"], []]]]]
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg6572_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg6572_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg6572_1)]) && Shen.unwind_tail(Shen.$eq$("S", Shen.tlstr(Arg6572_1)[0]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg6572_0, [Shen.type_cons, Shen.tlstr(Shen.tlstr(Arg6572_1)), [Shen.type_cons, [Shen.type_symbol, "shen.s"], []]]]]
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg6572_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.factor-cn"], [[Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, Arg6572_1[0], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg6572_0, Shen.tlstr(Arg6572_1)]), []]]]]);})
  : (((Shen.is_type(Arg6572_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg6572_1[1])) && (Shen.is_type(Arg6572_1[2], Shen.type_cons) && (Shen.is_type(Arg6572_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg6572_1[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, Arg6572_1[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg6572_0, Arg6572_1[2][2][1]]), []]]]
  : (((Shen.is_type(Arg6572_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.app"], Arg6572_1[1])) && (Shen.is_type(Arg6572_1[2], Shen.type_cons) && (Shen.is_type(Arg6572_1[2][2], Shen.type_cons) && (Shen.is_type(Arg6572_1[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6572_1[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.app"], [Shen.type_cons, Arg6572_1[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.insert-l"], [Arg6572_0, Arg6572_1[2][2][1]]), Arg6572_1[2][2][2]]]]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.insert-l"]]);}))))))))}, 2, [], "shen.insert-l"];

Shen.fns["shen.factor-cn"] = [Shen.type_func, function shen_user_lambda6585(Arg6572) {
  if (Arg6572.length < 1) return [Shen.type_func, shen_user_lambda6585, 1, Arg6572];
  var Arg6572_0 = Arg6572[0];
  var R0, R1;
  return (((Shen.is_type(Arg6572_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg6572_0[1])) && (Shen.is_type(Arg6572_0[2], Shen.type_cons) && (Shen.is_type(Arg6572_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6572_0[2][2][1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cn"], Arg6572_0[2][2][1][1])) && (Shen.is_type(Arg6572_0[2][2][1][2], Shen.type_cons) && (Shen.is_type(Arg6572_0[2][2][1][2][2], Shen.type_cons) && (Shen.empty$question$(Arg6572_0[2][2][1][2][2][2]) && (Shen.empty$question$(Arg6572_0[2][2][2]) && ((typeof(Arg6572_0[2][1]) == 'string') && (typeof(Arg6572_0[2][2][1][2][1]) == 'string')))))))))))))
  ? [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, (Arg6572_0[2][1] + Arg6572_0[2][2][1][2][1]), Arg6572_0[2][2][1][2][2]]]
  : Arg6572_0)}, 1, [], "shen.factor-cn"];

Shen.fns["shen.proc-nl"] = [Shen.type_func, function shen_user_lambda6586(Arg6572) {
  if (Arg6572.length < 1) return [Shen.type_func, shen_user_lambda6586, 1, Arg6572];
  var Arg6572_0 = Arg6572[0];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$("", Arg6572_0)))
  ? ""
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg6572_0]) && (Shen.unwind_tail(Shen.$eq$("~", Arg6572_0[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg6572_0)]) && Shen.unwind_tail(Shen.$eq$("%", Shen.tlstr(Arg6572_0)[0]))))))
  ? (Shen.n_$gt$string(10) + Shen.call(Shen.fns["shen.proc-nl"], [Shen.tlstr(Shen.tlstr(Arg6572_0))]))
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg6572_0]))
  ? (Arg6572_0[0] + Shen.call(Shen.fns["shen.proc-nl"], [Shen.tlstr(Arg6572_0)]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.proc-nl"]]);}))))}, 1, [], "shen.proc-nl"];

Shen.fns["shen.mkstr-r"] = [Shen.type_func, function shen_user_lambda6587(Arg6572) {
  if (Arg6572.length < 2) return [Shen.type_func, shen_user_lambda6587, 2, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg6572_1))
  ? Arg6572_0
  : ((Shen.is_type(Arg6572_1, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr-r"], [[Shen.type_cons, [Shen.type_symbol, "shen.insert"], [Shen.type_cons, Arg6572_1[1], [Shen.type_cons, Arg6572_0, []]]], Arg6572_1[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.mkstr-r"]]);})))}, 2, [], "shen.mkstr-r"];

Shen.fns["shen.insert"] = [Shen.type_func, function shen_user_lambda6588(Arg6572) {
  if (Arg6572.length < 2) return [Shen.type_func, shen_user_lambda6588, 2, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["shen.insert-h"], [Arg6572_0, Arg6572_1, ""]);})}, 2, [], "shen.insert"];

Shen.fns["shen.insert-h"] = [Shen.type_func, function shen_user_lambda6589(Arg6572) {
  if (Arg6572.length < 3) return [Shen.type_func, shen_user_lambda6589, 3, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1], Arg6572_2 = Arg6572[2];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$("", Arg6572_1)))
  ? Arg6572_2
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg6572_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg6572_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg6572_1)]) && Shen.unwind_tail(Shen.$eq$("A", Shen.tlstr(Arg6572_1)[0]))))))
  ? (Arg6572_2 + Shen.call(Shen.fns["shen.app"], [Arg6572_0, Shen.tlstr(Shen.tlstr(Arg6572_1)), [Shen.type_symbol, "shen.a"]]))
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg6572_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg6572_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg6572_1)]) && Shen.unwind_tail(Shen.$eq$("R", Shen.tlstr(Arg6572_1)[0]))))))
  ? (Arg6572_2 + Shen.call(Shen.fns["shen.app"], [Arg6572_0, Shen.tlstr(Shen.tlstr(Arg6572_1)), [Shen.type_symbol, "shen.r"]]))
  : (((Shen.call(Shen.fns["shen.+string?"], [Arg6572_1]) && (Shen.unwind_tail(Shen.$eq$("~", Arg6572_1[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg6572_1)]) && Shen.unwind_tail(Shen.$eq$("S", Shen.tlstr(Arg6572_1)[0]))))))
  ? (Arg6572_2 + Shen.call(Shen.fns["shen.app"], [Arg6572_0, Shen.tlstr(Shen.tlstr(Arg6572_1)), [Shen.type_symbol, "shen.s"]]))
  : ((Shen.call(Shen.fns["shen.+string?"], [Arg6572_1]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.insert-h"], [Arg6572_0, Shen.tlstr(Arg6572_1), (Arg6572_2 + Arg6572_1[0])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.insert-h"]]);}))))))}, 3, [], "shen.insert-h"];

Shen.fns["shen.app"] = [Shen.type_func, function shen_user_lambda6590(Arg6572) {
  if (Arg6572.length < 3) return [Shen.type_func, shen_user_lambda6590, 3, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1], Arg6572_2 = Arg6572[2];
  var R0, R1;
  return (Shen.call(Shen.fns["shen.arg->str"], [Arg6572_0, Arg6572_2]) + Arg6572_1)}, 3, [], "shen.app"];

Shen.fns["shen.arg->str"] = [Shen.type_func, function shen_user_lambda6591(Arg6572) {
  if (Arg6572.length < 2) return [Shen.type_func, shen_user_lambda6591, 2, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6572_0, Shen.fail_obj)))
  ? "..."
  : ((Shen.call(Shen.fns["shen.list?"], [Arg6572_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.list->str"], [Arg6572_0, Arg6572_1]);})
  : (((typeof(Arg6572_0) == 'string'))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.str->str"], [Arg6572_0, Arg6572_1]);})
  : ((Shen.absvector$question$(Arg6572_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.vector->str"], [Arg6572_0, Arg6572_1]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.atom->str"], [Arg6572_0]);})))))}, 2, [], "shen.arg->str"];

Shen.fns["shen.list->str"] = [Shen.type_func, function shen_user_lambda6592(Arg6572) {
  if (Arg6572.length < 2) return [Shen.type_func, shen_user_lambda6592, 2, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.r"], Arg6572_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], ["(", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-list"], [Arg6572_0, [Shen.type_symbol, "shen.r"], Shen.call(Shen.fns["shen.maxseq"], [])]), ")"])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["[", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-list"], [Arg6572_0, Arg6572_1, Shen.call(Shen.fns["shen.maxseq"], [])]), "]"])]);}))}, 2, [], "shen.list->str"];

Shen.fns["shen.maxseq"] = [Shen.type_func, function shen_user_lambda6593(Arg6572) {
  if (Arg6572.length < 0) return [Shen.type_func, shen_user_lambda6593, 0, Arg6572];
  var R0, R1;
  return (Shen.globals["*maximum-print-sequence-size*"])}, 0, [], "shen.maxseq"];

Shen.fns["shen.iter-list"] = [Shen.type_func, function shen_user_lambda6594(Arg6572) {
  if (Arg6572.length < 3) return [Shen.type_func, shen_user_lambda6594, 3, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1], Arg6572_2 = Arg6572[2];
  var R0, R1;
  return ((Shen.empty$question$(Arg6572_0))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(0, Arg6572_2)))
  ? "... etc"
  : (((Shen.is_type(Arg6572_0, Shen.type_cons) && Shen.empty$question$(Arg6572_0[2])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.arg->str"], [Arg6572_0[1], Arg6572_1]);})
  : ((Shen.is_type(Arg6572_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [Arg6572_0[1], Arg6572_1]), Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.iter-list"], [Arg6572_0[2], Arg6572_1, (Arg6572_2 - 1)])])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["|", Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.arg->str"], [Arg6572_0, Arg6572_1])])]);})))))}, 3, [], "shen.iter-list"];

Shen.fns["shen.str->str"] = [Shen.type_func, function shen_user_lambda6595(Arg6572) {
  if (Arg6572.length < 2) return [Shen.type_func, shen_user_lambda6595, 2, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.a"], Arg6572_1)))
  ? Arg6572_0
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.n_$gt$string(34), Shen.call(Shen.fns["@s"], [Arg6572_0, Shen.n_$gt$string(34)])]);}))}, 2, [], "shen.str->str"];

Shen.fns["shen.vector->str"] = [Shen.type_func, function shen_user_lambda6596(Arg6572) {
  if (Arg6572.length < 2) return [Shen.type_func, shen_user_lambda6596, 2, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1];
  var R0, R1;
  return ((Shen.call(Shen.fns["shen.print-vector?"], [Arg6572_0]))
  ? (function() {
  return Shen.call_tail(Shen.absvector_ref(Arg6572_0, 0), [Arg6572_0]);})
  : ((Shen.vector$question$(Arg6572_0))
  ? (function() {
  return Shen.call_tail(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-vector"], [Arg6572_0, 1, Arg6572_1, Shen.call(Shen.fns["shen.maxseq"], [])]), ">"])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], ["<", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.iter-vector"], [Arg6572_0, 0, Arg6572_1, Shen.call(Shen.fns["shen.maxseq"], [])]), ">>"])])]);})))}, 2, [], "shen.vector->str"];

Shen.fns["shen.print-vector?"] = [Shen.type_func, function shen_user_lambda6597(Arg6572) {
  if (Arg6572.length < 1) return [Shen.type_func, shen_user_lambda6597, 1, Arg6572];
  var Arg6572_0 = Arg6572[0];
  var R0, R1;
  return ((R0 = Shen.absvector_ref(Arg6572_0, 0)),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.tuple"])))
  ? true
  : ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.pvar"])))
  ? true
  : (((!(typeof(R0) == 'number')))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.fbound?"], [R0]);})
  : false))))}, 1, [], "shen.print-vector?"];

Shen.fns["shen.fbound?"] = [Shen.type_func, function shen_user_lambda6598(Arg6572) {
  if (Arg6572.length < 1) return [Shen.type_func, shen_user_lambda6598, 1, Arg6572];
  var Arg6572_0 = Arg6572[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda6600(Arg6599) {
  if (Arg6599.length < 1) return [Shen.type_func, shen_user_lambda6600, 1, Arg6599];
  var Arg6599_0 = Arg6599[0];
  return (Shen.call(Shen.fns["ps"], [Arg6599_0]),
  true)}, 1, [Arg6572_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6602(Arg6601) {
  if (Arg6601.length < 1) return [Shen.type_func, shen_user_lambda6602, 1, Arg6601];
  var Arg6601_0 = Arg6601[0];
  return false}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "shen.fbound?"];

Shen.fns["shen.tuple"] = [Shen.type_func, function shen_user_lambda6603(Arg6572) {
  if (Arg6572.length < 1) return [Shen.type_func, shen_user_lambda6603, 1, Arg6572];
  var Arg6572_0 = Arg6572[0];
  var R0, R1;
  return ("(@p " + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg6572_0, 1), (" " + Shen.call(Shen.fns["shen.app"], [Shen.absvector_ref(Arg6572_0, 2), ")", [Shen.type_symbol, "shen.s"]])), [Shen.type_symbol, "shen.s"]]))}, 1, [], "shen.tuple"];

Shen.fns["shen.iter-vector"] = [Shen.type_func, function shen_user_lambda6604(Arg6572) {
  if (Arg6572.length < 4) return [Shen.type_func, shen_user_lambda6604, 4, Arg6572];
  var Arg6572_0 = Arg6572[0], Arg6572_1 = Arg6572[1], Arg6572_2 = Arg6572[2], Arg6572_3 = Arg6572[3];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6572_3)))
  ? "... etc"
  : ((R0 = [Shen.type_func, function shen_user_lambda6606(Arg6605) {
  if (Arg6605.length < 4) return [Shen.type_func, shen_user_lambda6606, 4, Arg6605];
  var Arg6605_0 = Arg6605[0], Arg6605_1 = Arg6605[1], Arg6605_2 = Arg6605[2], Arg6605_3 = Arg6605[3];
  return Shen.absvector_ref(Arg6605_0, Arg6605_1)}, 4, [Arg6572_0, Arg6572_1, Arg6572_2, Arg6572_3], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6608(Arg6607) {
  if (Arg6607.length < 1) return [Shen.type_func, shen_user_lambda6608, 1, Arg6607];
  var Arg6607_0 = Arg6607[0];
  return [Shen.type_symbol, "shen.out-of-bounds"]}, 1, [], undefined]),
  (R0 = Shen.trap_error(R0, R1)),
  (R1 = [Shen.type_func, function shen_user_lambda6610(Arg6609) {
  if (Arg6609.length < 5) return [Shen.type_func, shen_user_lambda6610, 5, Arg6609];
  var Arg6609_0 = Arg6609[0], Arg6609_1 = Arg6609[1], Arg6609_2 = Arg6609[2], Arg6609_3 = Arg6609[3], Arg6609_4 = Arg6609[4];
  return Shen.absvector_ref(Arg6609_1, (Arg6609_2 + 1))}, 5, [R0, Arg6572_0, Arg6572_1, Arg6572_2, Arg6572_3], undefined]),
  (R2 = [Shen.type_func, function shen_user_lambda6612(Arg6611) {
  if (Arg6611.length < 1) return [Shen.type_func, shen_user_lambda6612, 1, Arg6611];
  var Arg6611_0 = Arg6611[0];
  return [Shen.type_symbol, "shen.out-of-bounds"]}, 1, [], undefined]),
  (R1 = Shen.trap_error(R1, R2)),
  ((Shen.unwind_tail(Shen.$eq$(R0, [Shen.type_symbol, "shen.out-of-bounds"])))
  ? ""
  : ((Shen.unwind_tail(Shen.$eq$(R1, [Shen.type_symbol, "shen.out-of-bounds"])))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.arg->str"], [R0, Arg6572_2]);})
  : (function() {
  return Shen.call_tail(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [R0, Arg6572_2]), Shen.call(Shen.fns["@s"], [" ", Shen.call(Shen.fns["shen.iter-vector"], [Arg6572_0, (Arg6572_1 + 1), Arg6572_2, (Arg6572_3 - 1)])])]);})))))}, 4, [], "shen.iter-vector"];

Shen.fns["shen.atom->str"] = [Shen.type_func, function shen_user_lambda6613(Arg6572) {
  if (Arg6572.length < 1) return [Shen.type_func, shen_user_lambda6613, 1, Arg6572];
  var Arg6572_0 = Arg6572[0];
  var R0, R1, R2;
  return ((R0 = [Shen.type_func, function shen_user_lambda6615(Arg6614) {
  if (Arg6614.length < 1) return [Shen.type_func, shen_user_lambda6615, 1, Arg6614];
  var Arg6614_0 = Arg6614[0];
  return (function() {
  return Shen.str(Arg6614_0);})}, 1, [Arg6572_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6617(Arg6616) {
  if (Arg6616.length < 1) return [Shen.type_func, shen_user_lambda6617, 1, Arg6616];
  var Arg6616_0 = Arg6616[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.funexstring"], []);})}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "shen.atom->str"];

Shen.fns["shen.funexstring"] = [Shen.type_func, function shen_user_lambda6618(Arg6572) {
  if (Arg6572.length < 0) return [Shen.type_func, shen_user_lambda6618, 0, Arg6572];
  var R0, R1, R2;
  return (function() {
  return Shen.call_tail(Shen.fns["@s"], ["", Shen.call(Shen.fns["@s"], ["f", Shen.call(Shen.fns["@s"], ["u", Shen.call(Shen.fns["@s"], ["n", Shen.call(Shen.fns["@s"], ["e", Shen.call(Shen.fns["@s"], [Shen.call(Shen.fns["shen.arg->str"], [Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "x"]]), [Shen.type_symbol, "shen.a"]]), ""])])])])])]);})}, 0, [], "shen.funexstring"];

Shen.fns["shen.list?"] = [Shen.type_func, function shen_user_lambda6619(Arg6572) {
  if (Arg6572.length < 1) return [Shen.type_func, shen_user_lambda6619, 1, Arg6572];
  var Arg6572_0 = Arg6572[0];
  var R0, R1, R2;
  return (Shen.empty$question$(Arg6572_0) || Shen.is_type(Arg6572_0, Shen.type_cons))}, 1, [], "shen.list?"];

Shen.call_toplevel(function js$dot$shen_js_toplevel6620(Arg6572) {
  if (Arg6572.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6620, 0, Arg6572];
  var R0, R1, R2;
  return []});


"Copyright (c) 2015, Mark Tarver\x0d\x0a\x0d\x0aAll rights reserved.\x0d\x0a\x0d\x0aRedistribution and use in source and binary forms, with or without\x0d\x0amodification, are permitted provided that the following conditions are met:\x0d\x0a1. Redistributions of source code must retain the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer.\x0d\x0a2. Redistributions in binary form must reproduce the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer in the\x0d\x0a   documentation and/or other materials provided with the distribution.\x0d\x0a3. The name of Mark Tarver may not be used to endorse or promote products\x0d\x0a   derived from this software without specific prior written permission.\x0d\x0a\x0d\x0aTHIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY\x0d\x0aEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\x0d\x0aWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\x0d\x0aDISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY\x0d\x0aDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\x0d\x0a(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\x0d\x0aLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\x0d\x0aON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0d\x0a(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\x0d\x0aSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";

Shen.fns["macroexpand"] = [Shen.type_func, function shen_user_lambda6623(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6623, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0;
  return ((R0 = Shen.call(Shen.fns["shen.compose"], [(Shen.globals["*macros*"]), Arg6622_0])),
  ((Shen.unwind_tail(Shen.$eq$(Arg6622_0, R0)))
  ? Arg6622_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda6625(Arg6624) {
  if (Arg6624.length < 1) return [Shen.type_func, shen_user_lambda6625, 1, Arg6624];
  var Arg6624_0 = Arg6624[0];
  return (function() {
  return Shen.call_tail(Shen.fns["macroexpand"], [Arg6624_0]);})}, 1, [], undefined], R0]);})))}, 1, [], "macroexpand"];

Shen.fns["shen.error-macro"] = [Shen.type_func, function shen_user_lambda6626(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6626, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "error"], Arg6622_0[1])) && Shen.is_type(Arg6622_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, Shen.call(Shen.fns["shen.mkstr"], [Arg6622_0[2][1], Arg6622_0[2][2]]), []]]
  : Arg6622_0)}, 1, [], "shen.error-macro"];

Shen.fns["shen.output-macro"] = [Shen.type_func, function shen_user_lambda6627(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6627, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "output"], Arg6622_0[1])) && Shen.is_type(Arg6622_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.prhush"], [Shen.type_cons, Shen.call(Shen.fns["shen.mkstr"], [Arg6622_0[2][1], Arg6622_0[2][2]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]]
  : (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "pr"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && Shen.empty$question$(Arg6622_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, Arg6622_0[2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]]
  : Arg6622_0))}, 1, [], "shen.output-macro"];

Shen.fns["shen.make-string-macro"] = [Shen.type_func, function shen_user_lambda6628(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6628, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "make-string"], Arg6622_0[1])) && Shen.is_type(Arg6622_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.mkstr"], [Arg6622_0[2][1], Arg6622_0[2][2]]);})
  : Arg6622_0)}, 1, [], "shen.make-string-macro"];

Shen.fns["shen.input-macro"] = [Shen.type_func, function shen_user_lambda6629(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6629, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lineread"], Arg6622_0[1])) && Shen.empty$question$(Arg6622_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]
  : (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input"], Arg6622_0[1])) && Shen.empty$question$(Arg6622_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "input"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]
  : (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "read"], Arg6622_0[1])) && Shen.empty$question$(Arg6622_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "read"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]
  : (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && Shen.empty$question$(Arg6622_0[2][2])))))
  ? [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, Arg6622_0[2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]]
  : (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "read-byte"], Arg6622_0[1])) && Shen.empty$question$(Arg6622_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stinput"], []], []]]
  : Arg6622_0)))))}, 1, [], "shen.input-macro"];

Shen.fns["shen.compose"] = [Shen.type_func, function shen_user_lambda6630(Arg6622) {
  if (Arg6622.length < 2) return [Shen.type_func, shen_user_lambda6630, 2, Arg6622];
  var Arg6622_0 = Arg6622[0], Arg6622_1 = Arg6622[1];
  var R0;
  return ((Shen.empty$question$(Arg6622_0))
  ? Arg6622_1
  : ((Shen.is_type(Arg6622_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.compose"], [Arg6622_0[2], Shen.call(Arg6622_0[1], [Arg6622_1])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.compose"]]);})))}, 2, [], "shen.compose"];

Shen.fns["shen.compile-macro"] = [Shen.type_func, function shen_user_lambda6631(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6631, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "compile"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && (Shen.is_type(Arg6622_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6622_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, Arg6622_0[2][1], [Shen.type_cons, Arg6622_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "E"], []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "parse error here: ~S~%", [Shen.type_cons, [Shen.type_symbol, "E"], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, "parse error~%", []]], []]]]], []]]], []]]]]
  : Arg6622_0)}, 1, [], "shen.compile-macro"];

Shen.fns["shen.prolog-macro"] = [Shen.type_func, function shen_user_lambda6632(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6632, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "prolog?"], Arg6622_0[1]))))
  ? ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.f"]])),
  (R1 = Shen.call(Shen.fns["shen.receive-terms"], [Arg6622_0[2]])),
  Shen.call(Shen.fns["eval"], [Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "defprolog"], [Shen.type_cons, R0, []]], Shen.call(Shen.fns["append"], [R1, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "<--"], []], Shen.call(Shen.fns["append"], [Shen.call(Shen.fns["shen.pass-literals"], [Arg6622_0[2]]), [Shen.type_cons, [Shen.type_symbol, ";"], []]])])])])]),
  (R1 = [Shen.type_cons, R0, Shen.call(Shen.fns["append"], [R1, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.start-new-prolog-process"], []], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, true, []]], []]]])]),
  R1)
  : Arg6622_0)}, 1, [], "shen.prolog-macro"];

Shen.fns["shen.receive-terms"] = [Shen.type_func, function shen_user_lambda6633(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6633, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6622_0))
  ? []
  : (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.is_type(Arg6622_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.receive"], Arg6622_0[1][1])) && (Shen.is_type(Arg6622_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6622_0[1][2][2]))))))
  ? [Shen.type_cons, Arg6622_0[1][2][1], Shen.call(Shen.fns["shen.receive-terms"], [Arg6622_0[2]])]
  : ((Shen.is_type(Arg6622_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.receive-terms"], [Arg6622_0[2]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.receive-terms"]]);}))))}, 1, [], "shen.receive-terms"];

Shen.fns["shen.pass-literals"] = [Shen.type_func, function shen_user_lambda6634(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6634, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return ((Shen.empty$question$(Arg6622_0))
  ? []
  : (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.is_type(Arg6622_0[1], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.receive"], Arg6622_0[1][1])) && (Shen.is_type(Arg6622_0[1][2], Shen.type_cons) && Shen.empty$question$(Arg6622_0[1][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pass-literals"], [Arg6622_0[2]]);})
  : ((Shen.is_type(Arg6622_0, Shen.type_cons))
  ? [Shen.type_cons, Arg6622_0[1], Shen.call(Shen.fns["shen.pass-literals"], [Arg6622_0[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.pass-literals"]]);}))))}, 1, [], "shen.pass-literals"];

Shen.fns["shen.defprolog-macro"] = [Shen.type_func, function shen_user_lambda6635(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6635, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defprolog"], Arg6622_0[1])) && Shen.is_type(Arg6622_0[2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda6637(Arg6636) {
  if (Arg6636.length < 1) return [Shen.type_func, shen_user_lambda6637, 1, Arg6636];
  var Arg6636_0 = Arg6636[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<defprolog>"], [Arg6636_0]);})}, 1, [], undefined], Arg6622_0[2], [Shen.type_func, function shen_user_lambda6639(Arg6638) {
  if (Arg6638.length < 2) return [Shen.type_func, shen_user_lambda6639, 2, Arg6638];
  var Arg6638_0 = Arg6638[0], Arg6638_1 = Arg6638[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-error"], [Arg6638_0[2][1], Arg6638_1]);})}, 2, [Arg6622_0], undefined]]);})
  : Arg6622_0)}, 1, [], "shen.defprolog-macro"];

Shen.fns["shen.datatype-macro"] = [Shen.type_func, function shen_user_lambda6640(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6640, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "datatype"], Arg6622_0[1])) && Shen.is_type(Arg6622_0[2], Shen.type_cons))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.process-datatype"], [Shen.type_cons, Shen.call(Shen.fns["shen.intern-type"], [Arg6622_0[2][1]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "shen.<datatype-rules>"], []]], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Arg6622_0[2][2]]), [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "shen.datatype-error"], []]], []]]]], []]]]
  : Arg6622_0)}, 1, [], "shen.datatype-macro"];

Shen.fns["shen.intern-type"] = [Shen.type_func, function shen_user_lambda6641(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6641, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (function() {
  return Shen.intern(("type#" + Shen.str(Arg6622_0)));})}, 1, [], "shen.intern-type"];

Shen.fns["shen.@s-macro"] = [Shen.type_func, function shen_user_lambda6642(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6642, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && (Shen.is_type(Arg6622_0[2][2], Shen.type_cons) && Shen.is_type(Arg6622_0[2][2][2], Shen.type_cons))))))
  ? [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, Arg6622_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.@s-macro"], [[Shen.type_cons, [Shen.type_symbol, "@s"], Arg6622_0[2][2]]]), []]]]
  : (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && (Shen.is_type(Arg6622_0[2][2], Shen.type_cons) && (Shen.empty$question$(Arg6622_0[2][2][2]) && (typeof(Arg6622_0[2][1]) == 'string')))))))
  ? ((R0 = Shen.call(Shen.fns["explode"], [Arg6622_0[2][1]])),
  (((Shen.call(Shen.fns["length"], [R0]) > 1))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.@s-macro"], [[Shen.type_cons, [Shen.type_symbol, "@s"], Shen.call(Shen.fns["append"], [R0, Arg6622_0[2][2]])]]);})
  : Arg6622_0))
  : Arg6622_0))}, 1, [], "shen.@s-macro"];

Shen.fns["shen.synonyms-macro"] = [Shen.type_func, function shen_user_lambda6643(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6643, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "synonyms"], Arg6622_0[1]))))
  ? [Shen.type_cons, [Shen.type_symbol, "shen.synonyms-help"], [Shen.type_cons, Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.curry-synonyms"], [Arg6622_0[2]])]), []]]
  : Arg6622_0)}, 1, [], "shen.synonyms-macro"];

Shen.fns["shen.curry-synonyms"] = [Shen.type_func, function shen_user_lambda6644(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6644, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6646(Arg6645) {
  if (Arg6645.length < 1) return [Shen.type_func, shen_user_lambda6646, 1, Arg6645];
  var Arg6645_0 = Arg6645[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.curry-type"], [Arg6645_0]);})}, 1, [], undefined], Arg6622_0]);})}, 1, [], "shen.curry-synonyms"];

Shen.fns["shen.nl-macro"] = [Shen.type_func, function shen_user_lambda6647(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6647, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "nl"], Arg6622_0[1])) && Shen.empty$question$(Arg6622_0[2]))))
  ? [Shen.type_cons, [Shen.type_symbol, "nl"], [Shen.type_cons, 1, []]]
  : Arg6622_0)}, 1, [], "shen.nl-macro"];

Shen.fns["shen.assoc-macro"] = [Shen.type_func, function shen_user_lambda6648(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6648, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && (Shen.is_type(Arg6622_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6622_0[2][2][2], Shen.type_cons) && Shen.call(Shen.fns["element?"], [Arg6622_0[1], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "do"], []]]]]]]]]]))))))
  ? [Shen.type_cons, Arg6622_0[1], [Shen.type_cons, Arg6622_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.assoc-macro"], [[Shen.type_cons, Arg6622_0[1], Arg6622_0[2][2]]]), []]]]
  : Arg6622_0)}, 1, [], "shen.assoc-macro"];

Shen.fns["shen.let-macro"] = [Shen.type_func, function shen_user_lambda6649(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6649, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && (Shen.is_type(Arg6622_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6622_0[2][2][2], Shen.type_cons) && Shen.is_type(Arg6622_0[2][2][2][2], Shen.type_cons)))))))
  ? [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, Arg6622_0[2][1], [Shen.type_cons, Arg6622_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.let-macro"], [[Shen.type_cons, [Shen.type_symbol, "let"], Arg6622_0[2][2][2]]]), []]]]]
  : Arg6622_0)}, 1, [], "shen.let-macro"];

Shen.fns["shen.abs-macro"] = [Shen.type_func, function shen_user_lambda6650(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6650, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && (Shen.is_type(Arg6622_0[2][2], Shen.type_cons) && Shen.is_type(Arg6622_0[2][2][2], Shen.type_cons))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, Arg6622_0[2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.abs-macro"], [[Shen.type_cons, [Shen.type_symbol, "/."], Arg6622_0[2][2]]]), []]]]
  : (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "/."], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && (Shen.is_type(Arg6622_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6622_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "lambda"], Arg6622_0[2]]
  : Arg6622_0))}, 1, [], "shen.abs-macro"];

Shen.fns["shen.cases-macro"] = [Shen.type_func, function shen_user_lambda6651(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6651, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$(true, Arg6622_0[2][1])) && Shen.is_type(Arg6622_0[2][2], Shen.type_cons))))))
  ? Arg6622_0[2][2][1]
  : (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && (Shen.is_type(Arg6622_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6622_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6622_0[2][1], [Shen.type_cons, Arg6622_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, "error: cases exhausted", []]], []]]]]
  : (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && Shen.is_type(Arg6622_0[2][2], Shen.type_cons)))))
  ? [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, Arg6622_0[2][1], [Shen.type_cons, Arg6622_0[2][2][1], [Shen.type_cons, Shen.call(Shen.fns["shen.cases-macro"], [[Shen.type_cons, [Shen.type_symbol, "cases"], Arg6622_0[2][2][2]]]), []]]]]
  : (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cases"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && Shen.empty$question$(Arg6622_0[2][2])))))
  ? (function() {
  return Shen.simple_error("error: odd number of case elements\x0a");})
  : Arg6622_0))))}, 1, [], "shen.cases-macro"];

Shen.fns["shen.timer-macro"] = [Shen.type_func, function shen_user_lambda6652(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6652, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "time"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && Shen.empty$question$(Arg6622_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.let-macro"], [[Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "Start"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Result"], [Shen.type_cons, Arg6622_0[2][1], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "run"], []]], [Shen.type_cons, [Shen.type_symbol, "Time"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "Finish"], [Shen.type_cons, [Shen.type_symbol, "Start"], []]]], [Shen.type_cons, [Shen.type_symbol, "Message"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "shen.prhush"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, "\x0arun time: ", [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "Time"], []]], [Shen.type_cons, " secs\x0a", []]]], []]]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stoutput"], []], []]]], [Shen.type_cons, [Shen.type_symbol, "Result"], []]]]]]]]]]]]]]);})
  : Arg6622_0)}, 1, [], "shen.timer-macro"];

Shen.fns["shen.tuple-up"] = [Shen.type_func, function shen_user_lambda6653(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6653, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return ((Shen.is_type(Arg6622_0, Shen.type_cons))
  ? [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, Arg6622_0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.tuple-up"], [Arg6622_0[2]]), []]]]
  : Arg6622_0)}, 1, [], "shen.tuple-up"];

Shen.fns["shen.put/get-macro"] = [Shen.type_func, function shen_user_lambda6654(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6654, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "put"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && (Shen.is_type(Arg6622_0[2][2], Shen.type_cons) && (Shen.is_type(Arg6622_0[2][2][2], Shen.type_cons) && Shen.empty$question$(Arg6622_0[2][2][2][2])))))))
  ? [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, Arg6622_0[2][1], [Shen.type_cons, Arg6622_0[2][2][1], [Shen.type_cons, Arg6622_0[2][2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], []]], []]]]]]
  : (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "get"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && (Shen.is_type(Arg6622_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6622_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, Arg6622_0[2][1], [Shen.type_cons, Arg6622_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], []]], []]]]]
  : (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "unput"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && (Shen.is_type(Arg6622_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6622_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "unput"], [Shen.type_cons, Arg6622_0[2][1], [Shen.type_cons, Arg6622_0[2][2][1], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], []]], []]]]]
  : Arg6622_0)))}, 1, [], "shen.put/get-macro"];

Shen.fns["shen.function-macro"] = [Shen.type_func, function shen_user_lambda6655(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6655, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return (((Shen.is_type(Arg6622_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "function"], Arg6622_0[1])) && (Shen.is_type(Arg6622_0[2], Shen.type_cons) && Shen.empty$question$(Arg6622_0[2][2])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.function-abstraction"], [Arg6622_0[2][1], Shen.call(Shen.fns["arity"], [Arg6622_0[2][1]])]);})
  : Arg6622_0)}, 1, [], "shen.function-macro"];

Shen.fns["shen.function-abstraction"] = [Shen.type_func, function shen_user_lambda6656(Arg6622) {
  if (Arg6622.length < 2) return [Shen.type_func, shen_user_lambda6656, 2, Arg6622];
  var Arg6622_0 = Arg6622[0], Arg6622_1 = Arg6622[1];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6622_1)))
  ? [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, Arg6622_0, []]]
  : ((Shen.unwind_tail(Shen.$eq$(-1, Arg6622_1)))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.function-abstraction-help"], [Arg6622_0, 1, []]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.function-abstraction-help"], [Arg6622_0, Arg6622_1, []]);})))}, 2, [], "shen.function-abstraction"];

Shen.fns["shen.function-abstraction-help"] = [Shen.type_func, function shen_user_lambda6657(Arg6622) {
  if (Arg6622.length < 3) return [Shen.type_func, shen_user_lambda6657, 3, Arg6622];
  var Arg6622_0 = Arg6622[0], Arg6622_1 = Arg6622[1], Arg6622_2 = Arg6622[2];
  var R0, R1;
  return ((Shen.unwind_tail(Shen.$eq$(0, Arg6622_1)))
  ? [Shen.type_cons, Arg6622_0, Arg6622_2]
  : ((R0 = Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "V"]])),
  [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, R0, [Shen.type_cons, Shen.call(Shen.fns["shen.function-abstraction-help"], [Arg6622_0, (Arg6622_1 - 1), Shen.call(Shen.fns["append"], [Arg6622_2, [Shen.type_cons, R0, []]])]), []]]]))}, 3, [], "shen.function-abstraction-help"];

Shen.fns["undefmacro"] = [Shen.type_func, function shen_user_lambda6658(Arg6622) {
  if (Arg6622.length < 1) return [Shen.type_func, shen_user_lambda6658, 1, Arg6622];
  var Arg6622_0 = Arg6622[0];
  var R0, R1;
  return ((R0 = (Shen.globals["shen.*macroreg*"])),
  (R1 = Shen.call(Shen.fns["shen.findpos"], [Arg6622_0, R0])),
  (Shen.globals["shen.*macroreg*"] = Shen.call(Shen.fns["remove"], [Arg6622_0, R0])),
  (Shen.globals["*macros*"] = Shen.call(Shen.fns["shen.remove-nth"], [R1, (Shen.globals["*macros*"])])),
  Arg6622_0)}, 1, [], "undefmacro"];

Shen.fns["shen.findpos"] = [Shen.type_func, function shen_user_lambda6659(Arg6622) {
  if (Arg6622.length < 2) return [Shen.type_func, shen_user_lambda6659, 2, Arg6622];
  var Arg6622_0 = Arg6622[0], Arg6622_1 = Arg6622[1];
  var R0, R1;
  return ((Shen.empty$question$(Arg6622_1))
  ? (function() {
  return Shen.simple_error(Shen.call(Shen.fns["shen.app"], [Arg6622_0, " is not a macro\x0a", [Shen.type_symbol, "shen.a"]]));})
  : (((Shen.is_type(Arg6622_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg6622_1[1], Arg6622_0))))
  ? 1
  : ((Shen.is_type(Arg6622_1, Shen.type_cons))
  ? (1 + Shen.call(Shen.fns["shen.findpos"], [Arg6622_0, Arg6622_1[2]]))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.findpos"]]);}))))}, 2, [], "shen.findpos"];

Shen.fns["shen.remove-nth"] = [Shen.type_func, function shen_user_lambda6660(Arg6622) {
  if (Arg6622.length < 2) return [Shen.type_func, shen_user_lambda6660, 2, Arg6622];
  var Arg6622_0 = Arg6622[0], Arg6622_1 = Arg6622[1];
  var R0, R1;
  return (((Shen.unwind_tail(Shen.$eq$(1, Arg6622_0)) && Shen.is_type(Arg6622_1, Shen.type_cons)))
  ? Arg6622_1[2]
  : ((Shen.is_type(Arg6622_1, Shen.type_cons))
  ? [Shen.type_cons, Arg6622_1[1], Shen.call(Shen.fns["shen.remove-nth"], [(Arg6622_0 - 1), Arg6622_1[2]])]
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.remove-nth"]]);})))}, 2, [], "shen.remove-nth"];

Shen.call_toplevel(function js$dot$shen_js_toplevel6661(Arg6622) {
  if (Arg6622.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6661, 0, Arg6622];
  var R0, R1;
  return []});


"Copyright (c) 2015, Mark Tarver\x0d\x0a\x0d\x0aAll rights reserved.\x0d\x0a\x0d\x0aRedistribution and use in source and binary forms, with or without\x0d\x0amodification, are permitted provided that the following conditions are met:\x0d\x0a1. Redistributions of source code must retain the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer.\x0d\x0a2. Redistributions in binary form must reproduce the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer in the\x0d\x0a   documentation and/or other materials provided with the distribution.\x0d\x0a3. The name of Mark Tarver may not be used to endorse or promote products\x0d\x0a   derived from this software without specific prior written permission.\x0d\x0a\x0d\x0aTHIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY\x0d\x0aEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\x0d\x0aWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\x0d\x0aDISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY\x0d\x0aDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\x0d\x0a(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\x0d\x0aLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\x0d\x0aON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0d\x0a(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\x0d\x0aSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";

Shen.fns["shen.initialise_arity_table"] = [Shen.type_func, function shen_user_lambda6666(Arg6665) {
  if (Arg6665.length < 1) return [Shen.type_func, shen_user_lambda6666, 1, Arg6665];
  var Arg6665_0 = Arg6665[0];
  return ((Shen.empty$question$(Arg6665_0))
  ? []
  : (((Shen.is_type(Arg6665_0, Shen.type_cons) && Shen.is_type(Arg6665_0[2], Shen.type_cons)))
  ? (Shen.call(Shen.fns["put"], [Arg6665_0[1], [Shen.type_symbol, "arity"], Arg6665_0[2][1], (Shen.globals["*property-vector*"])]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.initialise_arity_table"], [Arg6665_0[2][2]]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.initialise_arity_table"]]);})))}, 1, [], "shen.initialise_arity_table"];

Shen.fns["arity"] = [Shen.type_func, function shen_user_lambda6667(Arg6665) {
  if (Arg6665.length < 1) return [Shen.type_func, shen_user_lambda6667, 1, Arg6665];
  var Arg6665_0 = Arg6665[0];
  var R0, R1;
  return ((R0 = [Shen.type_func, function shen_user_lambda6669(Arg6668) {
  if (Arg6668.length < 1) return [Shen.type_func, shen_user_lambda6669, 1, Arg6668];
  var Arg6668_0 = Arg6668[0];
  return (function() {
  return Shen.call_tail(Shen.fns["get"], [Arg6668_0, [Shen.type_symbol, "arity"], (Shen.globals["*property-vector*"])]);})}, 1, [Arg6665_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6671(Arg6670) {
  if (Arg6670.length < 1) return [Shen.type_func, shen_user_lambda6671, 1, Arg6670];
  var Arg6670_0 = Arg6670[0];
  return -1}, 1, [], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "arity"];

Shen.fns["systemf"] = [Shen.type_func, function shen_user_lambda6672(Arg6665) {
  if (Arg6665.length < 1) return [Shen.type_func, shen_user_lambda6672, 1, Arg6665];
  var Arg6665_0 = Arg6665[0];
  var R0, R1;
  return ((R0 = [Shen.type_symbol, "shen"]),
  (R1 = Shen.call(Shen.fns["get"], [R0, [Shen.type_symbol, "shen.external-symbols"], (Shen.globals["*property-vector*"])])),
  Shen.call(Shen.fns["put"], [R0, [Shen.type_symbol, "shen.external-symbols"], Shen.call(Shen.fns["adjoin"], [Arg6665_0, R1]), (Shen.globals["*property-vector*"])]),
  Arg6665_0)}, 1, [], "systemf"];

Shen.fns["adjoin"] = [Shen.type_func, function shen_user_lambda6673(Arg6665) {
  if (Arg6665.length < 2) return [Shen.type_func, shen_user_lambda6673, 2, Arg6665];
  var Arg6665_0 = Arg6665[0], Arg6665_1 = Arg6665[1];
  var R0, R1;
  return ((Shen.call(Shen.fns["element?"], [Arg6665_0, Arg6665_1]))
  ? Arg6665_1
  : [Shen.type_cons, Arg6665_0, Arg6665_1])}, 2, [], "adjoin"];

Shen.fns["specialise"] = [Shen.type_func, function shen_user_lambda6674(Arg6665) {
  if (Arg6665.length < 1) return [Shen.type_func, shen_user_lambda6674, 1, Arg6665];
  var Arg6665_0 = Arg6665[0];
  var R0, R1;
  return ((Shen.globals["shen.*special*"] = [Shen.type_cons, Arg6665_0, (Shen.globals["shen.*special*"])]),
  Arg6665_0)}, 1, [], "specialise"];

Shen.fns["unspecialise"] = [Shen.type_func, function shen_user_lambda6675(Arg6665) {
  if (Arg6665.length < 1) return [Shen.type_func, shen_user_lambda6675, 1, Arg6665];
  var Arg6665_0 = Arg6665[0];
  var R0, R1;
  return ((Shen.globals["shen.*special*"] = Shen.call(Shen.fns["remove"], [Arg6665_0, (Shen.globals["shen.*special*"])])),
  Arg6665_0)}, 1, [], "unspecialise"];

Shen.call_toplevel(function js$dot$shen_js_toplevel6676(Arg6665) {
  if (Arg6665.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6676, 0, Arg6665];
  var R0, R1;
  return ((Shen.globals["shen.*installing-kl*"] = false),
  (Shen.globals["shen.*history*"] = []),
  (Shen.globals["shen.*tc*"] = false),
  (Shen.globals["*property-vector*"] = Shen.vector(20000)),
  (Shen.globals["shen.*process-counter*"] = 0),
  (Shen.globals["shen.*varcounter*"] = Shen.vector(1000)),
  (Shen.globals["shen.*prologvectors*"] = Shen.vector(1000)),
  (Shen.globals["shen.*macroreg*"] = [Shen.type_cons, [Shen.type_symbol, "shen.timer-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.cases-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.abs-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.put/get-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.compile-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.datatype-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.let-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.assoc-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.make-string-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.output-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.input-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.error-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.prolog-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.synonyms-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.nl-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.@s-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.defprolog-macro"], [Shen.type_cons, [Shen.type_symbol, "shen.function-macro"], []]]]]]]]]]]]]]]]]]]),
  (Shen.globals["*macros*"] = [Shen.type_cons, [Shen.type_func, function shen_user_lambda6678(Arg6677) {
  if (Arg6677.length < 1) return [Shen.type_func, shen_user_lambda6678, 1, Arg6677];
  var Arg6677_0 = Arg6677[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.timer-macro"], [Arg6677_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6680(Arg6679) {
  if (Arg6679.length < 1) return [Shen.type_func, shen_user_lambda6680, 1, Arg6679];
  var Arg6679_0 = Arg6679[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.cases-macro"], [Arg6679_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6682(Arg6681) {
  if (Arg6681.length < 1) return [Shen.type_func, shen_user_lambda6682, 1, Arg6681];
  var Arg6681_0 = Arg6681[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.abs-macro"], [Arg6681_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6684(Arg6683) {
  if (Arg6683.length < 1) return [Shen.type_func, shen_user_lambda6684, 1, Arg6683];
  var Arg6683_0 = Arg6683[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.put/get-macro"], [Arg6683_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6686(Arg6685) {
  if (Arg6685.length < 1) return [Shen.type_func, shen_user_lambda6686, 1, Arg6685];
  var Arg6685_0 = Arg6685[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.compile-macro"], [Arg6685_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6688(Arg6687) {
  if (Arg6687.length < 1) return [Shen.type_func, shen_user_lambda6688, 1, Arg6687];
  var Arg6687_0 = Arg6687[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.datatype-macro"], [Arg6687_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6690(Arg6689) {
  if (Arg6689.length < 1) return [Shen.type_func, shen_user_lambda6690, 1, Arg6689];
  var Arg6689_0 = Arg6689[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.let-macro"], [Arg6689_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6692(Arg6691) {
  if (Arg6691.length < 1) return [Shen.type_func, shen_user_lambda6692, 1, Arg6691];
  var Arg6691_0 = Arg6691[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.assoc-macro"], [Arg6691_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6694(Arg6693) {
  if (Arg6693.length < 1) return [Shen.type_func, shen_user_lambda6694, 1, Arg6693];
  var Arg6693_0 = Arg6693[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.make-string-macro"], [Arg6693_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6696(Arg6695) {
  if (Arg6695.length < 1) return [Shen.type_func, shen_user_lambda6696, 1, Arg6695];
  var Arg6695_0 = Arg6695[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.output-macro"], [Arg6695_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6698(Arg6697) {
  if (Arg6697.length < 1) return [Shen.type_func, shen_user_lambda6698, 1, Arg6697];
  var Arg6697_0 = Arg6697[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.input-macro"], [Arg6697_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6700(Arg6699) {
  if (Arg6699.length < 1) return [Shen.type_func, shen_user_lambda6700, 1, Arg6699];
  var Arg6699_0 = Arg6699[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.error-macro"], [Arg6699_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6702(Arg6701) {
  if (Arg6701.length < 1) return [Shen.type_func, shen_user_lambda6702, 1, Arg6701];
  var Arg6701_0 = Arg6701[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-macro"], [Arg6701_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6704(Arg6703) {
  if (Arg6703.length < 1) return [Shen.type_func, shen_user_lambda6704, 1, Arg6703];
  var Arg6703_0 = Arg6703[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.synonyms-macro"], [Arg6703_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6706(Arg6705) {
  if (Arg6705.length < 1) return [Shen.type_func, shen_user_lambda6706, 1, Arg6705];
  var Arg6705_0 = Arg6705[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.nl-macro"], [Arg6705_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6708(Arg6707) {
  if (Arg6707.length < 1) return [Shen.type_func, shen_user_lambda6708, 1, Arg6707];
  var Arg6707_0 = Arg6707[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.@s-macro"], [Arg6707_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6710(Arg6709) {
  if (Arg6709.length < 1) return [Shen.type_func, shen_user_lambda6710, 1, Arg6709];
  var Arg6709_0 = Arg6709[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.defprolog-macro"], [Arg6709_0]);})}, 1, [], undefined], [Shen.type_cons, [Shen.type_func, function shen_user_lambda6712(Arg6711) {
  if (Arg6711.length < 1) return [Shen.type_func, shen_user_lambda6712, 1, Arg6711];
  var Arg6711_0 = Arg6711[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.function-macro"], [Arg6711_0]);})}, 1, [], undefined], []]]]]]]]]]]]]]]]]]]),
  (Shen.globals["*home-directory*"] = []),
  (Shen.globals["shen.*gensym*"] = 0),
  (Shen.globals["shen.*tracking*"] = []),
  (Shen.globals["*home-directory*"] = ""),
  (Shen.globals["shen.*alphabet*"] = [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "C"], [Shen.type_cons, [Shen.type_symbol, "D"], [Shen.type_cons, [Shen.type_symbol, "E"], [Shen.type_cons, [Shen.type_symbol, "F"], [Shen.type_cons, [Shen.type_symbol, "G"], [Shen.type_cons, [Shen.type_symbol, "H"], [Shen.type_cons, [Shen.type_symbol, "I"], [Shen.type_cons, [Shen.type_symbol, "J"], [Shen.type_cons, [Shen.type_symbol, "K"], [Shen.type_cons, [Shen.type_symbol, "L"], [Shen.type_cons, [Shen.type_symbol, "M"], [Shen.type_cons, [Shen.type_symbol, "N"], [Shen.type_cons, [Shen.type_symbol, "O"], [Shen.type_cons, [Shen.type_symbol, "P"], [Shen.type_cons, [Shen.type_symbol, "Q"], [Shen.type_cons, [Shen.type_symbol, "R"], [Shen.type_cons, [Shen.type_symbol, "S"], [Shen.type_cons, [Shen.type_symbol, "T"], [Shen.type_cons, [Shen.type_symbol, "U"], [Shen.type_cons, [Shen.type_symbol, "V"], [Shen.type_cons, [Shen.type_symbol, "W"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, [Shen.type_symbol, "Y"], [Shen.type_cons, [Shen.type_symbol, "Z"], []]]]]]]]]]]]]]]]]]]]]]]]]]]),
  (Shen.globals["shen.*special*"] = [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "open"], []]]]]]]]]]),
  (Shen.globals["shen.*extraspecial*"] = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "shen.process-datatype"], [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, [Shen.type_symbol, "shen.read+"], [Shen.type_cons, [Shen.type_symbol, "defmacro"], []]]]]]]),
  (Shen.globals["shen.*spy*"] = false),
  (Shen.globals["shen.*datatypes*"] = []),
  (Shen.globals["shen.*alldatatypes*"] = []),
  (Shen.globals["shen.*shen-type-theory-enabled?*"] = true),
  (Shen.globals["shen.*synonyms*"] = []),
  (Shen.globals["shen.*system*"] = []),
  (Shen.globals["shen.*signedfuncs*"] = []),
  (Shen.globals["shen.*maxcomplexity*"] = 128),
  (Shen.globals["shen.*occurs*"] = true),
  (Shen.globals["shen.*maxinferences*"] = 1000000),
  (Shen.globals["*maximum-print-sequence-size*"] = 20),
  (Shen.globals["shen.*catch*"] = 0),
  (Shen.globals["shen.*call*"] = 0),
  (Shen.globals["shen.*infs*"] = 0),
  (Shen.globals["*hush*"] = false),
  (Shen.globals["shen.*optimise*"] = false),
  (Shen.globals["*version*"] = "Shen 17.2"),
  Shen.call(Shen.fns["shen.initialise_arity_table"], [[Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "arity"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "assoc"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "cd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "concat"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "declare"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "destroy"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "difference"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "element?"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "shen.interror"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "eval"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "explode"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "external"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "fail-if"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "fail"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "fix"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "findall"], [Shen.type_cons, 5, [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "gensym"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "hdv"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "hdstr"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "integer?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "inferences"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "input"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "implementation"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "intersection"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "it"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "kill"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "language"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "length"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "load"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "macroexpand"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "map"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "mapcan"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "maxinferences"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "nth"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "occurrences"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "optimise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "os"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "package?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "port"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "porters"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "print"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "profile"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "profile-results"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "ps"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "protect"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "shen.reassemble"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-file"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "read-from-string"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "release"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "remove"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "require"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "specialise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "spy"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "step"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "stoutput"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "string->symbol"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "subst"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "sum"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tc"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tc?"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "track"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "tuple?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "return"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unput"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "unprofile"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, 4, [Shen.type_cons, [Shen.type_symbol, "union"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "untrack"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "unspecialise"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, 3, [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "variable?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "version"], [Shen.type_cons, 0, [Shen.type_cons, [Shen.type_symbol, "write-byte"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "write-to-file"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "y-or-n?"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "<e>"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, 2, [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "include"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "include-all-but"], [Shen.type_cons, 1, [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, 2, []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]),
  (function() {
  return Shen.call_tail(Shen.fns["put"], [[Shen.type_symbol, "shen"], [Shen.type_symbol, "shen.external-symbols"], [Shen.type_cons, [Shen.type_symbol, "!"], [Shen.type_cons, [Shen.type_symbol, "}"], [Shen.type_cons, [Shen.type_symbol, "{"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "<--"], [Shen.type_cons, [Shen.type_symbol, "&&"], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, ";"], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_symbol, ":="], [Shen.type_cons, [Shen.type_symbol, "_"], [Shen.type_cons, [Shen.type_symbol, "*language*"], [Shen.type_cons, [Shen.type_symbol, "*implementation*"], [Shen.type_cons, [Shen.type_symbol, "*stinput*"], [Shen.type_cons, [Shen.type_symbol, "*stoutput*"], [Shen.type_cons, [Shen.type_symbol, "*home-directory*"], [Shen.type_cons, [Shen.type_symbol, "*version*"], [Shen.type_cons, [Shen.type_symbol, "*maximum-print-sequence-size*"], [Shen.type_cons, [Shen.type_symbol, "*macros*"], [Shen.type_cons, [Shen.type_symbol, "*os*"], [Shen.type_cons, [Shen.type_symbol, "*release*"], [Shen.type_cons, [Shen.type_symbol, "*property-vector*"], [Shen.type_cons, [Shen.type_symbol, "@v"], [Shen.type_cons, [Shen.type_symbol, "@p"], [Shen.type_cons, [Shen.type_symbol, "@s"], [Shen.type_cons, [Shen.type_symbol, "*port*"], [Shen.type_cons, [Shen.type_symbol, "*porters*"], [Shen.type_cons, [Shen.type_symbol, "*hush*"], [Shen.type_cons, [Shen.type_symbol, "<-"], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, [Shen.type_symbol, "<e>"], [Shen.type_cons, [Shen.type_symbol, "=="], [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "/."], [Shen.type_cons, [Shen.type_symbol, "=!"], [Shen.type_cons, [Shen.type_symbol, "$"], [Shen.type_cons, [Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, ">>"], [Shen.type_cons, Shen.vector(0), [Shen.type_cons, [Shen.type_symbol, "y-or-n?"], [Shen.type_cons, [Shen.type_symbol, "write-to-file"], [Shen.type_cons, [Shen.type_symbol, "write-byte"], [Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_symbol, "when"], [Shen.type_cons, [Shen.type_symbol, "warn"], [Shen.type_cons, [Shen.type_symbol, "version"], [Shen.type_cons, [Shen.type_symbol, "verified"], [Shen.type_cons, [Shen.type_symbol, "variable?"], [Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, [Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "unspecialise"], [Shen.type_cons, [Shen.type_symbol, "untrack"], [Shen.type_cons, [Shen.type_symbol, "unit"], [Shen.type_cons, [Shen.type_symbol, "shen.unix"], [Shen.type_cons, [Shen.type_symbol, "union"], [Shen.type_cons, [Shen.type_symbol, "unify"], [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, [Shen.type_symbol, "unput"], [Shen.type_cons, [Shen.type_symbol, "unprofile"], [Shen.type_cons, [Shen.type_symbol, "undefmacro"], [Shen.type_cons, [Shen.type_symbol, "return"], [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, [Shen.type_symbol, "tuple?"], [Shen.type_cons, true, [Shen.type_cons, [Shen.type_symbol, "trap-error"], [Shen.type_cons, [Shen.type_symbol, "track"], [Shen.type_cons, [Shen.type_symbol, "time"], [Shen.type_cons, [Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_symbol, "tc?"], [Shen.type_cons, [Shen.type_symbol, "tc"], [Shen.type_cons, [Shen.type_symbol, "tl"], [Shen.type_cons, [Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "tlv"], [Shen.type_cons, [Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_symbol, "systemf"], [Shen.type_cons, [Shen.type_symbol, "synonyms"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "string->symbol"], [Shen.type_cons, [Shen.type_symbol, "sum"], [Shen.type_cons, [Shen.type_symbol, "subst"], [Shen.type_cons, [Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "stinput"], [Shen.type_cons, [Shen.type_symbol, "stoutput"], [Shen.type_cons, [Shen.type_symbol, "step"], [Shen.type_cons, [Shen.type_symbol, "spy"], [Shen.type_cons, [Shen.type_symbol, "specialise"], [Shen.type_cons, [Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "set"], [Shen.type_cons, [Shen.type_symbol, "save"], [Shen.type_cons, [Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "run"], [Shen.type_cons, [Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_symbol, "remove"], [Shen.type_cons, [Shen.type_symbol, "release"], [Shen.type_cons, [Shen.type_symbol, "read"], [Shen.type_cons, [Shen.type_symbol, "read-file"], [Shen.type_cons, [Shen.type_symbol, "require"], [Shen.type_cons, [Shen.type_symbol, "read-file-as-bytelist"], [Shen.type_cons, [Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, [Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_symbol, "read-from-string"], [Shen.type_cons, [Shen.type_symbol, "package?"], [Shen.type_cons, [Shen.type_symbol, "put"], [Shen.type_cons, [Shen.type_symbol, "preclude"], [Shen.type_cons, [Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, [Shen.type_symbol, "ps"], [Shen.type_cons, [Shen.type_symbol, "prolog?"], [Shen.type_cons, [Shen.type_symbol, "protect"], [Shen.type_cons, [Shen.type_symbol, "profile-results"], [Shen.type_cons, [Shen.type_symbol, "profile"], [Shen.type_cons, [Shen.type_symbol, "print"], [Shen.type_cons, [Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "porters"], [Shen.type_cons, [Shen.type_symbol, "port"], [Shen.type_cons, [Shen.type_symbol, "package"], [Shen.type_cons, [Shen.type_symbol, "output"], [Shen.type_cons, [Shen.type_symbol, "out"], [Shen.type_cons, [Shen.type_symbol, "os"], [Shen.type_cons, [Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "optimise"], [Shen.type_cons, [Shen.type_symbol, "open"], [Shen.type_cons, [Shen.type_symbol, "occurrences"], [Shen.type_cons, [Shen.type_symbol, "occurs-check"], [Shen.type_cons, [Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "null"], [Shen.type_cons, [Shen.type_symbol, "nth"], [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "nl"], [Shen.type_cons, [Shen.type_symbol, "mode"], [Shen.type_cons, [Shen.type_symbol, "macroexpand"], [Shen.type_cons, [Shen.type_symbol, "maxinferences"], [Shen.type_cons, [Shen.type_symbol, "mapcan"], [Shen.type_cons, [Shen.type_symbol, "map"], [Shen.type_cons, [Shen.type_symbol, "make-string"], [Shen.type_cons, [Shen.type_symbol, "load"], [Shen.type_cons, [Shen.type_symbol, "loaded"], [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "lineread"], [Shen.type_cons, [Shen.type_symbol, "limit"], [Shen.type_cons, [Shen.type_symbol, "length"], [Shen.type_cons, [Shen.type_symbol, "let"], [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "lambda"], [Shen.type_cons, [Shen.type_symbol, "language"], [Shen.type_cons, [Shen.type_symbol, "kill"], [Shen.type_cons, [Shen.type_symbol, "is"], [Shen.type_cons, [Shen.type_symbol, "intersection"], [Shen.type_cons, [Shen.type_symbol, "inferences"], [Shen.type_cons, [Shen.type_symbol, "intern"], [Shen.type_cons, [Shen.type_symbol, "integer?"], [Shen.type_cons, [Shen.type_symbol, "input"], [Shen.type_cons, [Shen.type_symbol, "input+"], [Shen.type_cons, [Shen.type_symbol, "include"], [Shen.type_cons, [Shen.type_symbol, "include-all-but"], [Shen.type_cons, [Shen.type_symbol, "it"], [Shen.type_cons, [Shen.type_symbol, "in"], [Shen.type_cons, [Shen.type_symbol, "implementation"], [Shen.type_cons, [Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_symbol, "identical"], [Shen.type_cons, [Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_symbol, "hd"], [Shen.type_cons, [Shen.type_symbol, "hdv"], [Shen.type_cons, [Shen.type_symbol, "hdstr"], [Shen.type_cons, [Shen.type_symbol, "hash"], [Shen.type_cons, [Shen.type_symbol, "get"], [Shen.type_cons, [Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "gensym"], [Shen.type_cons, [Shen.type_symbol, "function"], [Shen.type_cons, [Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_symbol, "fix"], [Shen.type_cons, [Shen.type_symbol, "file"], [Shen.type_cons, [Shen.type_symbol, "fail"], [Shen.type_cons, [Shen.type_symbol, "fail-if"], [Shen.type_cons, [Shen.type_symbol, "fwhen"], [Shen.type_cons, [Shen.type_symbol, "findall"], [Shen.type_cons, false, [Shen.type_cons, [Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, [Shen.type_symbol, "explode"], [Shen.type_cons, [Shen.type_symbol, "external"], [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "eval-kl"], [Shen.type_cons, [Shen.type_symbol, "eval"], [Shen.type_cons, [Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "error"], [Shen.type_cons, [Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "element?"], [Shen.type_cons, [Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_symbol, "difference"], [Shen.type_cons, [Shen.type_symbol, "destroy"], [Shen.type_cons, [Shen.type_symbol, "defun"], [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, [Shen.type_symbol, "defmacro"], [Shen.type_cons, [Shen.type_symbol, "defcc"], [Shen.type_cons, [Shen.type_symbol, "defprolog"], [Shen.type_cons, [Shen.type_symbol, "declare"], [Shen.type_cons, [Shen.type_symbol, "datatype"], [Shen.type_cons, [Shen.type_symbol, "cut"], [Shen.type_cons, [Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "cons"], [Shen.type_cons, [Shen.type_symbol, "cond"], [Shen.type_cons, [Shen.type_symbol, "concat"], [Shen.type_cons, [Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_symbol, "cd"], [Shen.type_cons, [Shen.type_symbol, "cases"], [Shen.type_cons, [Shen.type_symbol, "call"], [Shen.type_cons, [Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_symbol, "bind"], [Shen.type_cons, [Shen.type_symbol, "bound?"], [Shen.type_cons, [Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "bar!"], [Shen.type_cons, [Shen.type_symbol, "assoc"], [Shen.type_cons, [Shen.type_symbol, "arity"], [Shen.type_cons, [Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "adjoin"], [Shen.type_cons, [Shen.type_symbol, "<-address"], [Shen.type_cons, [Shen.type_symbol, "address->"], [Shen.type_cons, [Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "absvector"], [Shen.type_cons, [Shen.type_symbol, "abort"], []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], (Shen.globals["*property-vector*"])]);}))});


"Copyright (c) 2015, Mark Tarver\x0d\x0a\x0d\x0aAll rights reserved.\x0d\x0a\x0d\x0aRedistribution and use in source and binary forms, with or without\x0d\x0amodification, are permitted provided that the following conditions are met:\x0d\x0a1. Redistributions of source code must retain the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer.\x0d\x0a2. Redistributions in binary form must reproduce the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer in the\x0d\x0a   documentation and/or other materials provided with the distribution.\x0d\x0a3. The name of Mark Tarver may not be used to endorse or promote products\x0d\x0a   derived from this software without specific prior written permission.\x0d\x0a\x0d\x0aTHIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY\x0d\x0aEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\x0d\x0aWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\x0d\x0aDISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY\x0d\x0aDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\x0d\x0a(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\x0d\x0aLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\x0d\x0aON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0d\x0a(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\x0d\x0aSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";

Shen.fns["declare"] = [Shen.type_func, function shen_user_lambda6719(Arg6718) {
  if (Arg6718.length < 2) return [Shen.type_func, shen_user_lambda6719, 2, Arg6718];
  var Arg6718_0 = Arg6718[0], Arg6718_1 = Arg6718[1];
  var R0, R1, R2;
  return ((Shen.globals["shen.*signedfuncs*"] = [Shen.type_cons, [Shen.type_cons, Arg6718_0, Arg6718_1], (Shen.globals["shen.*signedfuncs*"])]),
  ((R0 = [Shen.type_func, function shen_user_lambda6721(Arg6720) {
  if (Arg6720.length < 2) return [Shen.type_func, shen_user_lambda6721, 2, Arg6720];
  var Arg6720_0 = Arg6720[0], Arg6720_1 = Arg6720[1];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.variancy-test"], [Arg6720_1, Arg6720_0]);})}, 2, [Arg6718_1, Arg6718_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6723(Arg6722) {
  if (Arg6722.length < 1) return [Shen.type_func, shen_user_lambda6723, 1, Arg6722];
  var Arg6722_0 = Arg6722[0];
  return [Shen.type_symbol, "shen.skip"]}, 1, [], undefined]),
  Shen.trap_error(R0, R1)),
  (R0 = Shen.call(Shen.fns["shen.rcons_form"], [Shen.call(Shen.fns["shen.demodulate"], [Arg6718_1])])),
  (R1 = Shen.call(Shen.fns["concat"], [[Shen.type_symbol, "shen.type-signature-of-"], Arg6718_0])),
  (R2 = Shen.call(Shen.fns["shen.parameters"], [1])),
  (R0 = [Shen.type_cons, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "X"], []]], [Shen.type_cons, [Shen.type_symbol, ":-"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "unify!"], [Shen.type_cons, [Shen.type_symbol, "X"], [Shen.type_cons, R0, []]]], []], []]]]),
  (R0 = Shen.call(Shen.fns["shen.aum"], [R0, R2])),
  (R0 = Shen.call(Shen.fns["shen.aum_to_shen"], [R0])),
  (R2 = [Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, R1, Shen.call(Shen.fns["append"], [R2, Shen.call(Shen.fns["append"], [[Shen.type_cons, [Shen.type_symbol, "ProcessN"], [Shen.type_cons, [Shen.type_symbol, "Continuation"], []]], [Shen.type_cons, [Shen.type_symbol, "->"], [Shen.type_cons, R0, []]]])])]]),
  Shen.call(Shen.fns["shen.eval-without-macros"], [R2]),
  Arg6718_0)}, 2, [], "declare"];

Shen.fns["shen.demodulate"] = [Shen.type_func, function shen_user_lambda6724(Arg6718) {
  if (Arg6718.length < 1) return [Shen.type_func, shen_user_lambda6724, 1, Arg6718];
  var Arg6718_0 = Arg6718[0];
  var R0, R1, R2;
  return ((R0 = [Shen.type_func, function shen_user_lambda6726(Arg6725) {
  if (Arg6725.length < 1) return [Shen.type_func, shen_user_lambda6726, 1, Arg6725];
  var Arg6725_0 = Arg6725[0];
  var R0, R1;
  return ((R1 = Shen.call(Shen.fns["shen.walk"], [[Shen.type_func, function shen_user_lambda6728(Arg6727) {
  if (Arg6727.length < 1) return [Shen.type_func, shen_user_lambda6728, 1, Arg6727];
  var Arg6727_0 = Arg6727[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.demod"], [Arg6727_0]);})}, 1, [], undefined], Arg6725_0])),
  ((Shen.unwind_tail(Shen.$eq$(R1, Arg6725_0)))
  ? Arg6725_0
  : (function() {
  return Shen.call_tail(Shen.fns["shen.demodulate"], [R1]);})))}, 1, [Arg6718_0], undefined]),
  (R1 = [Shen.type_func, function shen_user_lambda6730(Arg6729) {
  if (Arg6729.length < 2) return [Shen.type_func, shen_user_lambda6730, 2, Arg6729];
  var Arg6729_0 = Arg6729[0], Arg6729_1 = Arg6729[1];
  return Arg6729_0}, 2, [Arg6718_0], undefined]),
  (function() {
  return Shen.trap_error(R0, R1);}))}, 1, [], "shen.demodulate"];

Shen.fns["shen.variancy-test"] = [Shen.type_func, function shen_user_lambda6731(Arg6718) {
  if (Arg6718.length < 2) return [Shen.type_func, shen_user_lambda6731, 2, Arg6718];
  var Arg6718_0 = Arg6718[0], Arg6718_1 = Arg6718[1];
  var R0, R1, R2;
  return ((R0 = Shen.call(Shen.fns["shen.typecheck"], [Arg6718_0, [Shen.type_symbol, "B"]])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R0)))
  ? [Shen.type_symbol, "shen.skip"]
  : ((Shen.call(Shen.fns["shen.variant?"], [R0, Arg6718_1]))
  ? [Shen.type_symbol, "shen.skip"]
  : Shen.call(Shen.fns["shen.prhush"], [("warning: changing the type of " + Shen.call(Shen.fns["shen.app"], [Arg6718_0, " may create errors\x0a", [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]))),
  [Shen.type_symbol, "shen.skip"])}, 2, [], "shen.variancy-test"];

Shen.fns["shen.variant?"] = [Shen.type_func, function shen_user_lambda6732(Arg6718) {
  if (Arg6718.length < 2) return [Shen.type_func, shen_user_lambda6732, 2, Arg6718];
  var Arg6718_0 = Arg6718[0], Arg6718_1 = Arg6718[1];
  var R0, R1, R2;
  return ((Shen.unwind_tail(Shen.$eq$(Arg6718_1, Arg6718_0)))
  ? true
  : (((Shen.is_type(Arg6718_0, Shen.type_cons) && (Shen.is_type(Arg6718_1, Shen.type_cons) && Shen.unwind_tail(Shen.$eq$(Arg6718_1[1], Arg6718_0[1])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Arg6718_0[2], Arg6718_1[2]]);})
  : (((Shen.is_type(Arg6718_0, Shen.type_cons) && (Shen.is_type(Arg6718_1, Shen.type_cons) && (Shen.call(Shen.fns["shen.pvar?"], [Arg6718_0[1]]) && Shen.call(Shen.fns["variable?"], [Arg6718_1[1]])))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Shen.call(Shen.fns["subst"], [[Shen.type_symbol, "shen.a"], Arg6718_0[1], Arg6718_0[2]]), Shen.call(Shen.fns["subst"], [[Shen.type_symbol, "shen.a"], Arg6718_1[1], Arg6718_1[2]])]);})
  : (((Shen.is_type(Arg6718_0, Shen.type_cons) && (Shen.is_type(Arg6718_0[1], Shen.type_cons) && (Shen.is_type(Arg6718_1, Shen.type_cons) && Shen.is_type(Arg6718_1[1], Shen.type_cons)))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.variant?"], [Shen.call(Shen.fns["append"], [Arg6718_0[1], Arg6718_0[2]]), Shen.call(Shen.fns["append"], [Arg6718_1[1], Arg6718_1[2]])]);})
  : false))))}, 2, [], "shen.variant?"];

Shen.call_toplevel(function js$dot$shen_js_toplevel6733(Arg6718) {
  if (Arg6718.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel6733, 0, Arg6718];
  var R0, R1, R2;
  return (Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "absvector?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "adjoin"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "and"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "shen.app"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "append"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "arity"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "assoc"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "boolean?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "bound?"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "cd"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "close"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "cn"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "compile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "shen.==>"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "cons?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "destroy"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "difference"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "do"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "<e>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "shen.==>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "shen.<!>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "shen.==>"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "element?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "empty?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "enable-type-theory"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "external"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "error-to-string"], [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "explode"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "string"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "fail"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "fail-if"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "fix"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "freeze"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "fst"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "gensym"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "<-vector"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "vector->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "get-time"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "hash"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "head"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "hdv"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "hdstr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "if"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "it"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "implementation"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "include"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "include-all-but"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "inferences"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "shen.insert"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "integer?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "intersection"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "kill"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "language"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "length"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "limit"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "load"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "map"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "mapcan"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "B"], []]], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "maxinferences"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "n->string"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "nl"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "nth"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "number?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "occurrences"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "occurs-check"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "optimise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "or"], [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "boolean"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "os"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "package?"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "port"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "porters"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "pos"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "pr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "print"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "profile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "preclude"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "shen.proc-nl"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "profile-results"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "protect"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "preclude-all-but"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "shen.prhush"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "ps"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "read"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "read-byte"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "read-file-as-bytelist"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "number"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "read-file-as-string"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "read-file"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "read-from-string"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "unit"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "release"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "remove"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "reverse"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "simple-error"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "snd"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "specialise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "spy"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "step"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "stinput"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], []]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "stoutput"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], []]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "string?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "str"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "string->n"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "string->symbol"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "sum"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "number"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "symbol?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "systemf"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "tail"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "tlstr"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "tlv"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "tc"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "tc?"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "thaw"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "lazy"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "track"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "trap-error"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "exception"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "tuple?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "undefmacro"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "union"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, [Shen.type_symbol, "A"], []]], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "unprofile"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "B"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "untrack"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "unspecialise"], [Shen.type_cons, [Shen.type_symbol, "symbol"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "symbol"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "variable?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "vector?"], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "version"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "write-to-file"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "A"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "write-byte"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "out"], []]], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "y-or-n?"], [Shen.type_cons, [Shen.type_symbol, "string"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, ">"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "<"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, ">="], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "<="], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "="], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "+"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "/"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "-"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]),
  Shen.call(Shen.fns["declare"], [[Shen.type_symbol, "*"], [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "number"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "number"], []]]], []]]]]),
  (function() {
  return Shen.call_tail(Shen.fns["declare"], [[Shen.type_symbol, "=="], [Shen.type_cons, [Shen.type_symbol, "A"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "B"], [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], []]]]]);}))});


"Copyright (c) 2015, Mark Tarver\x0d\x0a\x0d\x0aAll rights reserved.\x0d\x0a\x0d\x0aRedistribution and use in source and binary forms, with or without\x0d\x0amodification, are permitted provided that the following conditions are met:\x0d\x0a1. Redistributions of source code must retain the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer.\x0d\x0a2. Redistributions in binary form must reproduce the above copyright\x0d\x0a   notice, this list of conditions and the following disclaimer in the\x0d\x0a   documentation and/or other materials provided with the distribution.\x0d\x0a3. The name of Mark Tarver may not be used to endorse or promote products\x0d\x0a   derived from this software without specific prior written permission.\x0d\x0a\x0d\x0aTHIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY\x0d\x0aEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\x0d\x0aWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\x0d\x0aDISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY\x0d\x0aDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\x0d\x0a(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\x0d\x0aLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\x0d\x0aON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0d\x0a(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\x0d\x0aSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";

Shen.fns["shen.typecheck"] = [Shen.type_func, function shen_user_lambda6736(Arg6735) {
  if (Arg6735.length < 2) return [Shen.type_func, shen_user_lambda6736, 2, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.curry"], [Arg6735_0])),
  (R1 = Shen.call(Shen.fns["shen.start-new-prolog-process"], [])),
  (R2 = Shen.call(Shen.fns["shen.insert-prolog-variables"], [Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.curry-type"], [Arg6735_1])]), R1])),
  (R3 = [Shen.type_func, function shen_user_lambda6738(Arg6737) {
  if (Arg6737.length < 3) return [Shen.type_func, shen_user_lambda6738, 3, Arg6737];
  var Arg6737_0 = Arg6737[0], Arg6737_1 = Arg6737[1], Arg6737_2 = Arg6737[2];
  return (function() {
  return Shen.call_tail(Shen.fns["return"], [Arg6737_1, Arg6737_2, [Shen.type_symbol, "shen.void"]]);})}, 3, [R0, R2, R1], undefined]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, R0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R2, []]]], [], R1, R3]);}))}, 2, [], "shen.typecheck"];

Shen.fns["shen.curry"] = [Shen.type_func, function shen_user_lambda6739(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6739, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3;
  return (((Shen.is_type(Arg6735_0, Shen.type_cons) && Shen.call(Shen.fns["shen.special?"], [Arg6735_0[1]])))
  ? [Shen.type_cons, Arg6735_0[1], Shen.call(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6741(Arg6740) {
  if (Arg6740.length < 1) return [Shen.type_func, shen_user_lambda6741, 1, Arg6740];
  var Arg6740_0 = Arg6740[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.curry"], [Arg6740_0]);})}, 1, [], undefined], Arg6735_0[2]])]
  : (((Shen.is_type(Arg6735_0, Shen.type_cons) && (Shen.is_type(Arg6735_0[2], Shen.type_cons) && Shen.call(Shen.fns["shen.extraspecial?"], [Arg6735_0[1]]))))
  ? Arg6735_0
  : (((Shen.is_type(Arg6735_0, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], Arg6735_0[1])) && (Shen.is_type(Arg6735_0[2], Shen.type_cons) && (Shen.is_type(Arg6735_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6735_0[2][2][2]))))))
  ? [Shen.type_cons, [Shen.type_symbol, "type"], [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg6735_0[2][1]]), Arg6735_0[2][2]]]
  : (((Shen.is_type(Arg6735_0, Shen.type_cons) && (Shen.is_type(Arg6735_0[2], Shen.type_cons) && Shen.is_type(Arg6735_0[2][2], Shen.type_cons))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.curry"], [[Shen.type_cons, [Shen.type_cons, Arg6735_0[1], [Shen.type_cons, Arg6735_0[2][1], []]], Arg6735_0[2][2]]]);})
  : (((Shen.is_type(Arg6735_0, Shen.type_cons) && (Shen.is_type(Arg6735_0[2], Shen.type_cons) && Shen.empty$question$(Arg6735_0[2][2]))))
  ? [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg6735_0[1]]), [Shen.type_cons, Shen.call(Shen.fns["shen.curry"], [Arg6735_0[2][1]]), []]]
  : Arg6735_0)))))}, 1, [], "shen.curry"];

Shen.fns["shen.special?"] = [Shen.type_func, function shen_user_lambda6742(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6742, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3;
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6735_0, (Shen.globals["shen.*special*"])]);})}, 1, [], "shen.special?"];

Shen.fns["shen.extraspecial?"] = [Shen.type_func, function shen_user_lambda6743(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6743, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3;
  return (function() {
  return Shen.call_tail(Shen.fns["element?"], [Arg6735_0, (Shen.globals["shen.*extraspecial*"])]);})}, 1, [], "shen.extraspecial?"];

Shen.fns["shen.t*"] = [Shen.type_func, function shen_user_lambda6744(Arg6735) {
  if (Arg6735.length < 4) return [Shen.type_func, shen_user_lambda6744, 4, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3];
  var R0, R1, R2, R3;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.maxinfexceeded?"], []), Arg6735_2, [Shen.type_func, function shen_user_lambda6746(Arg6745) {
  if (Arg6745.length < 8) return [Shen.type_func, shen_user_lambda6746, 8, Arg6745];
  var Arg6745_0 = Arg6745[0], Arg6745_1 = Arg6745[1], Arg6745_2 = Arg6745[2], Arg6745_3 = Arg6745[3], Arg6745_4 = Arg6745[4], Arg6745_5 = Arg6745[5], Arg6745_6 = Arg6745[6], Arg6745_7 = Arg6745[7];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6745_0, Shen.call(Shen.fns["shen.errormaxinfs"], []), Arg6745_1, Arg6745_2]);})}, 8, [R1, Arg6735_2, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3], undefined]]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6735_2, [Shen.type_func, function shen_user_lambda6748(Arg6747) {
  if (Arg6747.length < 5) return [Shen.type_func, shen_user_lambda6748, 5, Arg6747];
  var Arg6747_0 = Arg6747[0], Arg6747_1 = Arg6747[1], Arg6747_2 = Arg6747[2], Arg6747_3 = Arg6747[3], Arg6747_4 = Arg6747[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.prolog-failure"], [Arg6747_3, Arg6747_4]);})}, 5, [R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3], undefined]])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.type-theory-enabled?"], []), Arg6735_2, [Shen.type_func, function shen_user_lambda6750(Arg6749) {
  if (Arg6749.length < 7) return [Shen.type_func, shen_user_lambda6750, 7, Arg6749];
  var Arg6749_0 = Arg6749[0], Arg6749_1 = Arg6749[1], Arg6749_2 = Arg6749[2], Arg6749_3 = Arg6749[3], Arg6749_4 = Arg6749[4], Arg6749_5 = Arg6749[5], Arg6749_6 = Arg6749[6];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6749_0, Arg6749_5, [Shen.type_func, function shen_user_lambda6752(Arg6751) {
  if (Arg6751.length < 6) return [Shen.type_func, shen_user_lambda6752, 6, Arg6751];
  var Arg6751_0 = Arg6751[0], Arg6751_1 = Arg6751[1], Arg6751_2 = Arg6751[2], Arg6751_3 = Arg6751[3], Arg6751_4 = Arg6751[4], Arg6751_5 = Arg6751[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6751_1, Arg6751_2, Arg6751_3, Arg6751_4, Arg6751_5]);})}, 6, [Arg6749_0, Arg6749_1, Arg6749_2, Arg6749_4, Arg6749_5, Arg6749_6], undefined]]);})}, 7, [R0, R2, R1, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.show"], [Arg6735_0, Arg6735_1, Arg6735_2, [Shen.type_func, function shen_user_lambda6754(Arg6753) {
  if (Arg6753.length < 5) return [Shen.type_func, shen_user_lambda6754, 5, Arg6753];
  var Arg6753_0 = Arg6753[0], Arg6753_1 = Arg6753[1], Arg6753_2 = Arg6753[2], Arg6753_3 = Arg6753[3], Arg6753_4 = Arg6753[4];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6753_2, (Shen.globals["shen.*datatypes*"]), Arg6753_3, [Shen.type_func, function shen_user_lambda6756(Arg6755) {
  if (Arg6755.length < 5) return [Shen.type_func, shen_user_lambda6756, 5, Arg6755];
  var Arg6755_0 = Arg6755[0], Arg6755_1 = Arg6755[1], Arg6755_2 = Arg6755[2], Arg6755_3 = Arg6755[3], Arg6755_4 = Arg6755[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [Arg6755_0, Arg6755_1, Arg6755_2, Arg6755_3, Arg6755_4]);})}, 5, [Arg6753_0, Arg6753_1, Arg6753_2, Arg6753_3, Arg6753_4], undefined]]);})}, 5, [Arg6735_0, Arg6735_1, R1, Arg6735_2, Arg6735_3], undefined]]))
  : R1))
  : R1))
  : R1))]);}))}, 4, [], "shen.t*"];

Shen.fns["shen.type-theory-enabled?"] = [Shen.type_func, function shen_user_lambda6757(Arg6735) {
  if (Arg6735.length < 0) return [Shen.type_func, shen_user_lambda6757, 0, Arg6735];
  var R0, R1, R2, R3;
  return (Shen.globals["shen.*shen-type-theory-enabled?*"])}, 0, [], "shen.type-theory-enabled?"];

Shen.fns["enable-type-theory"] = [Shen.type_func, function shen_user_lambda6758(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6758, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3;
  return ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "+"], Arg6735_0)))
  ? (Shen.globals["shen.*shen-type-theory-enabled?*"] = true)
  : ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-"], Arg6735_0)))
  ? (Shen.globals["shen.*shen-type-theory-enabled?*"] = false)
  : (function() {
  return Shen.simple_error("enable-type-theory expects a + or a -\x0a");})))}, 1, [], "enable-type-theory"];

Shen.fns["shen.prolog-failure"] = [Shen.type_func, function shen_user_lambda6759(Arg6735) {
  if (Arg6735.length < 2) return [Shen.type_func, shen_user_lambda6759, 2, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1];
  var R0, R1, R2, R3;
  return false}, 2, [], "shen.prolog-failure"];

Shen.fns["shen.maxinfexceeded?"] = [Shen.type_func, function shen_user_lambda6760(Arg6735) {
  if (Arg6735.length < 0) return [Shen.type_func, shen_user_lambda6760, 0, Arg6735];
  var R0, R1, R2, R3;
  return (Shen.call(Shen.fns["inferences"], []) > (Shen.globals["shen.*maxinferences*"]))}, 0, [], "shen.maxinfexceeded?"];

Shen.fns["shen.errormaxinfs"] = [Shen.type_func, function shen_user_lambda6761(Arg6735) {
  if (Arg6735.length < 0) return [Shen.type_func, shen_user_lambda6761, 0, Arg6735];
  var R0, R1, R2, R3;
  return (function() {
  return Shen.simple_error("maximum inferences exceeded~%");})}, 0, [], "shen.errormaxinfs"];

Shen.fns["shen.udefs*"] = [Shen.type_func, function shen_user_lambda6762(Arg6735) {
  if (Arg6735.length < 5) return [Shen.type_func, shen_user_lambda6762, 5, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3], Arg6735_4 = Arg6735[4];
  var R0, R1, R2, R3;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_2, Arg6735_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[1]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [[Shen.type_cons, R0, [Shen.type_cons, Arg6735_0, [Shen.type_cons, Arg6735_1, []]]], Arg6735_3, Arg6735_4])))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_2, Arg6735_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [Arg6735_0, Arg6735_1, R0, Arg6735_3, Arg6735_4]);}))
  : false))
  : R0))}, 5, [], "shen.udefs*"];

Shen.fns["shen.th*"] = [Shen.type_func, function shen_user_lambda6763(Arg6735) {
  if (Arg6735.length < 5) return [Shen.type_func, shen_user_lambda6763, 5, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3], Arg6735_4 = Arg6735[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.show"], [[Shen.type_cons, Arg6735_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6735_1, []]]], Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6765(Arg6764) {
  if (Arg6764.length < 6) return [Shen.type_func, shen_user_lambda6765, 6, Arg6764];
  var Arg6764_0 = Arg6764[0], Arg6764_1 = Arg6764[1], Arg6764_2 = Arg6764[2], Arg6764_3 = Arg6764[3], Arg6764_4 = Arg6764[4], Arg6764_5 = Arg6764[5];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg6764_4, Arg6764_5]);})}, 6, [R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.call(Shen.fns["shen.typedf?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])]), Arg6735_3, [Shen.type_func, function shen_user_lambda6767(Arg6766) {
  if (Arg6766.length < 11) return [Shen.type_func, shen_user_lambda6767, 11, Arg6766];
  var Arg6766_0 = Arg6766[0], Arg6766_1 = Arg6766[1], Arg6766_2 = Arg6766[2], Arg6766_3 = Arg6766[3], Arg6766_4 = Arg6766[4], Arg6766_5 = Arg6766[5], Arg6766_6 = Arg6766[6], Arg6766_7 = Arg6766[7], Arg6766_8 = Arg6766[8], Arg6766_9 = Arg6766[9], Arg6766_10 = Arg6766[10];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6766_1, Shen.call(Shen.fns["shen.sigf"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6766_0, Arg6766_3])]), Arg6766_3, [Shen.type_func, function shen_user_lambda6769(Arg6768) {
  if (Arg6768.length < 5) return [Shen.type_func, shen_user_lambda6769, 5, Arg6768];
  var Arg6768_0 = Arg6768[0], Arg6768_1 = Arg6768[1], Arg6768_2 = Arg6768[2], Arg6768_3 = Arg6768[3], Arg6768_4 = Arg6768[4];
  return (function() {
  return Shen.call_tail(Shen.fns["call"], [[Shen.type_cons, Arg6768_1, [Shen.type_cons, Arg6768_2, []]], Arg6768_3, Arg6768_4]);})}, 5, [Arg6766_0, Arg6766_1, Arg6766_2, Arg6766_3, Arg6766_4], undefined]]);})}, 11, [Arg6735_0, R1, Arg6735_1, Arg6735_3, Arg6735_4, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.base"], [Arg6735_0, Arg6735_1, Arg6735_3, Arg6735_4]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.by_hypothesis"], [Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R2, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg6735_1, []]], Arg6735_2, Arg6735_3, Arg6735_4])))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R2, [Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, Arg6735_1, []]]], Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6771(Arg6770) {
  if (Arg6770.length < 13) return [Shen.type_func, shen_user_lambda6771, 13, Arg6770];
  var Arg6770_0 = Arg6770[0], Arg6770_1 = Arg6770[1], Arg6770_2 = Arg6770[2], Arg6770_3 = Arg6770[3], Arg6770_4 = Arg6770[4], Arg6770_5 = Arg6770[5], Arg6770_6 = Arg6770[6], Arg6770_7 = Arg6770[7], Arg6770_8 = Arg6770[8], Arg6770_9 = Arg6770[9], Arg6770_10 = Arg6770[10], Arg6770_11 = Arg6770[11], Arg6770_12 = Arg6770[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6770_2, Arg6770_3, Arg6770_4, Arg6770_5, Arg6770_6]);})}, 13, [R2, Arg6735_1, R3, R1, Arg6735_2, Arg6735_3, Arg6735_4, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6735_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6773(Arg6772) {
  if (Arg6772.length < 9) return [Shen.type_func, shen_user_lambda6773, 9, Arg6772];
  var Arg6772_0 = Arg6772[0], Arg6772_1 = Arg6772[1], Arg6772_2 = Arg6772[2], Arg6772_3 = Arg6772[3], Arg6772_4 = Arg6772[4], Arg6772_5 = Arg6772[5], Arg6772_6 = Arg6772[6], Arg6772_7 = Arg6772[7], Arg6772_8 = Arg6772[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6772_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6772_2, []]], Arg6772_6, Arg6772_7, Arg6772_8]);})}, 9, [R1, R3, R2, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6775(Arg6774) {
  if (Arg6774.length < 10) return [Shen.type_func, shen_user_lambda6775, 10, Arg6774];
  var Arg6774_0 = Arg6774[0], Arg6774_1 = Arg6774[1], Arg6774_2 = Arg6774[2], Arg6774_3 = Arg6774[3], Arg6774_4 = Arg6774[4], Arg6774_5 = Arg6774[5], Arg6774_6 = Arg6774[6], Arg6774_7 = Arg6774[7], Arg6774_8 = Arg6774[8], Arg6774_9 = Arg6774[9];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6774_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6774_2, []]], Arg6774_7, Arg6774_8, Arg6774_9]);})}, 10, [R1, R3, R2, R4, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6735_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6777(Arg6776) {
  if (Arg6776.length < 13) return [Shen.type_func, shen_user_lambda6777, 13, Arg6776];
  var Arg6776_0 = Arg6776[0], Arg6776_1 = Arg6776[1], Arg6776_2 = Arg6776[2], Arg6776_3 = Arg6776[3], Arg6776_4 = Arg6776[4], Arg6776_5 = Arg6776[5], Arg6776_6 = Arg6776[6], Arg6776_7 = Arg6776[7], Arg6776_8 = Arg6776[8], Arg6776_9 = Arg6776[9], Arg6776_10 = Arg6776[10], Arg6776_11 = Arg6776[11], Arg6776_12 = Arg6776[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6776_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6776_2, []]], Arg6776_3, Arg6776_6, Arg6776_4]);})}, 13, [R1, R3, R2, Arg6735_2, Arg6735_4, R4, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6735_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "list"], Arg6735_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6779(Arg6778) {
  if (Arg6778.length < 11) return [Shen.type_func, shen_user_lambda6779, 11, Arg6778];
  var Arg6778_0 = Arg6778[0], Arg6778_1 = Arg6778[1], Arg6778_2 = Arg6778[2], Arg6778_3 = Arg6778[3], Arg6778_4 = Arg6778[4], Arg6778_5 = Arg6778[5], Arg6778_6 = Arg6778[6], Arg6778_7 = Arg6778[7], Arg6778_8 = Arg6778[8], Arg6778_9 = Arg6778[9], Arg6778_10 = Arg6778[10];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6778_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6778_2, []]], Arg6778_8, Arg6778_4, Arg6778_9]);})}, 11, [R1, R3, R5, R4, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6781(Arg6780) {
  if (Arg6780.length < 12) return [Shen.type_func, shen_user_lambda6781, 12, Arg6780];
  var Arg6780_0 = Arg6780[0], Arg6780_1 = Arg6780[1], Arg6780_2 = Arg6780[2], Arg6780_3 = Arg6780[3], Arg6780_4 = Arg6780[4], Arg6780_5 = Arg6780[5], Arg6780_6 = Arg6780[6], Arg6780_7 = Arg6780[7], Arg6780_8 = Arg6780[8], Arg6780_9 = Arg6780[9], Arg6780_10 = Arg6780[10], Arg6780_11 = Arg6780[11];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6780_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6780_2, []]], Arg6780_9, Arg6780_5, Arg6780_10]);})}, 12, [R1, R3, R5, R2, R4, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6783(Arg6782) {
  if (Arg6782.length < 15) return [Shen.type_func, shen_user_lambda6783, 15, Arg6782];
  var Arg6782_0 = Arg6782[0], Arg6782_1 = Arg6782[1], Arg6782_2 = Arg6782[2], Arg6782_3 = Arg6782[3], Arg6782_4 = Arg6782[4], Arg6782_5 = Arg6782[5], Arg6782_6 = Arg6782[6], Arg6782_7 = Arg6782[7], Arg6782_8 = Arg6782[8], Arg6782_9 = Arg6782[9], Arg6782_10 = Arg6782[10], Arg6782_11 = Arg6782[11], Arg6782_12 = Arg6782[12], Arg6782_13 = Arg6782[13], Arg6782_14 = Arg6782[14];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6782_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6782_2, []]], Arg6782_3, Arg6782_6, Arg6782_4]);})}, 15, [R1, R3, R5, Arg6735_2, Arg6735_4, R2, Arg6735_3, R4, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6735_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R4, []]], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6785(Arg6784) {
  if (Arg6784.length < 13) return [Shen.type_func, shen_user_lambda6785, 13, Arg6784];
  var Arg6784_0 = Arg6784[0], Arg6784_1 = Arg6784[1], Arg6784_2 = Arg6784[2], Arg6784_3 = Arg6784[3], Arg6784_4 = Arg6784[4], Arg6784_5 = Arg6784[5], Arg6784_6 = Arg6784[6], Arg6784_7 = Arg6784[7], Arg6784_8 = Arg6784[8], Arg6784_9 = Arg6784[9], Arg6784_10 = Arg6784[10], Arg6784_11 = Arg6784[11], Arg6784_12 = Arg6784[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6784_1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Arg6784_2, []]], Arg6784_3, Arg6784_6, Arg6784_4]);})}, 13, [R1, R3, R4, Arg6735_2, Arg6735_4, R2, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R2 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6735_3])),
  ((Shen.empty$question$(R5))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6787(Arg6786) {
  if (Arg6786.length < 10) return [Shen.type_func, shen_user_lambda6787, 10, Arg6786];
  var Arg6786_0 = Arg6786[0], Arg6786_1 = Arg6786[1], Arg6786_2 = Arg6786[2], Arg6786_3 = Arg6786[3], Arg6786_4 = Arg6786[4], Arg6786_5 = Arg6786[5], Arg6786_6 = Arg6786[6], Arg6786_7 = Arg6786[7], Arg6786_8 = Arg6786[8], Arg6786_9 = Arg6786[9];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6786_2, Arg6786_3, Arg6786_7, Arg6786_8, Arg6786_9]);})}, 10, [R1, R4, R3, R2, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6789(Arg6788) {
  if (Arg6788.length < 11) return [Shen.type_func, shen_user_lambda6789, 11, Arg6788];
  var Arg6788_0 = Arg6788[0], Arg6788_1 = Arg6788[1], Arg6788_2 = Arg6788[2], Arg6788_3 = Arg6788[3], Arg6788_4 = Arg6788[4], Arg6788_5 = Arg6788[5], Arg6788_6 = Arg6788[6], Arg6788_7 = Arg6788[7], Arg6788_8 = Arg6788[8], Arg6788_9 = Arg6788[9], Arg6788_10 = Arg6788[10];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6788_2, Arg6788_3, Arg6788_8, Arg6788_9, Arg6788_10]);})}, 11, [R1, R4, R3, R2, R5, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R2, []], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6791(Arg6790) {
  if (Arg6790.length < 14) return [Shen.type_func, shen_user_lambda6791, 14, Arg6790];
  var Arg6790_0 = Arg6790[0], Arg6790_1 = Arg6790[1], Arg6790_2 = Arg6790[2], Arg6790_3 = Arg6790[3], Arg6790_4 = Arg6790[4], Arg6790_5 = Arg6790[5], Arg6790_6 = Arg6790[6], Arg6790_7 = Arg6790[7], Arg6790_8 = Arg6790[8], Arg6790_9 = Arg6790[9], Arg6790_10 = Arg6790[10], Arg6790_11 = Arg6790[11], Arg6790_12 = Arg6790[12], Arg6790_13 = Arg6790[13];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6790_2, Arg6790_3, Arg6790_4, Arg6790_7, Arg6790_5]);})}, 14, [R1, R4, R3, R2, Arg6735_2, Arg6735_4, R5, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "*"], Arg6735_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R6 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6793(Arg6792) {
  if (Arg6792.length < 12) return [Shen.type_func, shen_user_lambda6793, 12, Arg6792];
  var Arg6792_0 = Arg6792[0], Arg6792_1 = Arg6792[1], Arg6792_2 = Arg6792[2], Arg6792_3 = Arg6792[3], Arg6792_4 = Arg6792[4], Arg6792_5 = Arg6792[5], Arg6792_6 = Arg6792[6], Arg6792_7 = Arg6792[7], Arg6792_8 = Arg6792[8], Arg6792_9 = Arg6792[9], Arg6792_10 = Arg6792[10], Arg6792_11 = Arg6792[11];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6792_2, Arg6792_3, Arg6792_9, Arg6792_5, Arg6792_10]);})}, 12, [R1, R4, R3, R6, R5, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6795(Arg6794) {
  if (Arg6794.length < 13) return [Shen.type_func, shen_user_lambda6795, 13, Arg6794];
  var Arg6794_0 = Arg6794[0], Arg6794_1 = Arg6794[1], Arg6794_2 = Arg6794[2], Arg6794_3 = Arg6794[3], Arg6794_4 = Arg6794[4], Arg6794_5 = Arg6794[5], Arg6794_6 = Arg6794[6], Arg6794_7 = Arg6794[7], Arg6794_8 = Arg6794[8], Arg6794_9 = Arg6794[9], Arg6794_10 = Arg6794[10], Arg6794_11 = Arg6794[11], Arg6794_12 = Arg6794[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6794_2, Arg6794_3, Arg6794_10, Arg6794_6, Arg6794_11]);})}, 13, [R1, R4, R3, R6, R2, R5, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R6, []], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6797(Arg6796) {
  if (Arg6796.length < 16) return [Shen.type_func, shen_user_lambda6797, 16, Arg6796];
  var Arg6796_0 = Arg6796[0], Arg6796_1 = Arg6796[1], Arg6796_2 = Arg6796[2], Arg6796_3 = Arg6796[3], Arg6796_4 = Arg6796[4], Arg6796_5 = Arg6796[5], Arg6796_6 = Arg6796[6], Arg6796_7 = Arg6796[7], Arg6796_8 = Arg6796[8], Arg6796_9 = Arg6796[9], Arg6796_10 = Arg6796[10], Arg6796_11 = Arg6796[11], Arg6796_12 = Arg6796[12], Arg6796_13 = Arg6796[13], Arg6796_14 = Arg6796[14], Arg6796_15 = Arg6796[15];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6796_2, Arg6796_3, Arg6796_4, Arg6796_7, Arg6796_5]);})}, 16, [R1, R4, R3, R6, Arg6735_2, Arg6735_4, R2, Arg6735_3, R5, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R5, []]], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6799(Arg6798) {
  if (Arg6798.length < 14) return [Shen.type_func, shen_user_lambda6799, 14, Arg6798];
  var Arg6798_0 = Arg6798[0], Arg6798_1 = Arg6798[1], Arg6798_2 = Arg6798[2], Arg6798_3 = Arg6798[3], Arg6798_4 = Arg6798[4], Arg6798_5 = Arg6798[5], Arg6798_6 = Arg6798[6], Arg6798_7 = Arg6798[7], Arg6798_8 = Arg6798[8], Arg6798_9 = Arg6798[9], Arg6798_10 = Arg6798[10], Arg6798_11 = Arg6798[11], Arg6798_12 = Arg6798[12], Arg6798_13 = Arg6798[13];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6798_2, Arg6798_3, Arg6798_4, Arg6798_7, Arg6798_5]);})}, 14, [R1, R4, R3, R5, Arg6735_2, Arg6735_4, R2, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R5, []]]], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6801(Arg6800) {
  if (Arg6800.length < 14) return [Shen.type_func, shen_user_lambda6801, 14, Arg6800];
  var Arg6800_0 = Arg6800[0], Arg6800_1 = Arg6800[1], Arg6800_2 = Arg6800[2], Arg6800_3 = Arg6800[3], Arg6800_4 = Arg6800[4], Arg6800_5 = Arg6800[5], Arg6800_6 = Arg6800[6], Arg6800_7 = Arg6800[7], Arg6800_8 = Arg6800[8], Arg6800_9 = Arg6800[9], Arg6800_10 = Arg6800[10], Arg6800_11 = Arg6800[11], Arg6800_12 = Arg6800[12], Arg6800_13 = Arg6800[13];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6800_2, Arg6800_3, Arg6800_4, Arg6800_7, Arg6800_5]);})}, 14, [R1, R4, R3, R5, Arg6735_2, Arg6735_4, R2, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R1 = R5))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6735_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6803(Arg6802) {
  if (Arg6802.length < 9) return [Shen.type_func, shen_user_lambda6803, 9, Arg6802];
  var Arg6802_0 = Arg6802[0], Arg6802_1 = Arg6802[1], Arg6802_2 = Arg6802[2], Arg6802_3 = Arg6802[3], Arg6802_4 = Arg6802[4], Arg6802_5 = Arg6802[5], Arg6802_6 = Arg6802[6], Arg6802_7 = Arg6802[7], Arg6802_8 = Arg6802[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6802_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg6802_2, []]], Arg6802_6, Arg6802_7, Arg6802_8]);})}, 9, [R1, R3, R2, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6805(Arg6804) {
  if (Arg6804.length < 10) return [Shen.type_func, shen_user_lambda6805, 10, Arg6804];
  var Arg6804_0 = Arg6804[0], Arg6804_1 = Arg6804[1], Arg6804_2 = Arg6804[2], Arg6804_3 = Arg6804[3], Arg6804_4 = Arg6804[4], Arg6804_5 = Arg6804[5], Arg6804_6 = Arg6804[6], Arg6804_7 = Arg6804[7], Arg6804_8 = Arg6804[8], Arg6804_9 = Arg6804[9];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6804_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg6804_2, []]], Arg6804_7, Arg6804_8, Arg6804_9]);})}, 10, [R1, R3, R2, R4, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6735_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R2, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6807(Arg6806) {
  if (Arg6806.length < 13) return [Shen.type_func, shen_user_lambda6807, 13, Arg6806];
  var Arg6806_0 = Arg6806[0], Arg6806_1 = Arg6806[1], Arg6806_2 = Arg6806[2], Arg6806_3 = Arg6806[3], Arg6806_4 = Arg6806[4], Arg6806_5 = Arg6806[5], Arg6806_6 = Arg6806[6], Arg6806_7 = Arg6806[7], Arg6806_8 = Arg6806[8], Arg6806_9 = Arg6806[9], Arg6806_10 = Arg6806[10], Arg6806_11 = Arg6806[11], Arg6806_12 = Arg6806[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6806_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg6806_2, []]], Arg6806_3, Arg6806_6, Arg6806_4]);})}, 13, [R1, R3, R2, Arg6735_2, Arg6735_4, R4, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6735_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "vector"], Arg6735_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6809(Arg6808) {
  if (Arg6808.length < 11) return [Shen.type_func, shen_user_lambda6809, 11, Arg6808];
  var Arg6808_0 = Arg6808[0], Arg6808_1 = Arg6808[1], Arg6808_2 = Arg6808[2], Arg6808_3 = Arg6808[3], Arg6808_4 = Arg6808[4], Arg6808_5 = Arg6808[5], Arg6808_6 = Arg6808[6], Arg6808_7 = Arg6808[7], Arg6808_8 = Arg6808[8], Arg6808_9 = Arg6808[9], Arg6808_10 = Arg6808[10];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6808_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg6808_2, []]], Arg6808_8, Arg6808_4, Arg6808_9]);})}, 11, [R1, R3, R5, R4, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6811(Arg6810) {
  if (Arg6810.length < 12) return [Shen.type_func, shen_user_lambda6811, 12, Arg6810];
  var Arg6810_0 = Arg6810[0], Arg6810_1 = Arg6810[1], Arg6810_2 = Arg6810[2], Arg6810_3 = Arg6810[3], Arg6810_4 = Arg6810[4], Arg6810_5 = Arg6810[5], Arg6810_6 = Arg6810[6], Arg6810_7 = Arg6810[7], Arg6810_8 = Arg6810[8], Arg6810_9 = Arg6810[9], Arg6810_10 = Arg6810[10], Arg6810_11 = Arg6810[11];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6810_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg6810_2, []]], Arg6810_9, Arg6810_5, Arg6810_10]);})}, 12, [R1, R3, R5, R2, R4, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["shen.th*"], [R1, R5, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6813(Arg6812) {
  if (Arg6812.length < 15) return [Shen.type_func, shen_user_lambda6813, 15, Arg6812];
  var Arg6812_0 = Arg6812[0], Arg6812_1 = Arg6812[1], Arg6812_2 = Arg6812[2], Arg6812_3 = Arg6812[3], Arg6812_4 = Arg6812[4], Arg6812_5 = Arg6812[5], Arg6812_6 = Arg6812[6], Arg6812_7 = Arg6812[7], Arg6812_8 = Arg6812[8], Arg6812_9 = Arg6812[9], Arg6812_10 = Arg6812[10], Arg6812_11 = Arg6812[11], Arg6812_12 = Arg6812[12], Arg6812_13 = Arg6812[13], Arg6812_14 = Arg6812[14];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6812_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg6812_2, []]], Arg6812_3, Arg6812_6, Arg6812_4]);})}, 15, [R1, R3, R5, Arg6735_2, Arg6735_4, R2, Arg6735_3, R4, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6735_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, R4, []]], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["shen.th*"], [R1, R4, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6815(Arg6814) {
  if (Arg6814.length < 13) return [Shen.type_func, shen_user_lambda6815, 13, Arg6814];
  var Arg6814_0 = Arg6814[0], Arg6814_1 = Arg6814[1], Arg6814_2 = Arg6814[2], Arg6814_3 = Arg6814[3], Arg6814_4 = Arg6814[4], Arg6814_5 = Arg6814[5], Arg6814_6 = Arg6814[6], Arg6814_7 = Arg6814[7], Arg6814_8 = Arg6814[8], Arg6814_9 = Arg6814[9], Arg6814_10 = Arg6814[10], Arg6814_11 = Arg6814[11], Arg6814_12 = Arg6814[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6814_1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Arg6814_2, []]], Arg6814_3, Arg6814_6, Arg6814_4]);})}, 13, [R1, R3, R4, Arg6735_2, Arg6735_4, R2, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R2)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R1, [Shen.type_symbol, "string"], Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6817(Arg6816) {
  if (Arg6816.length < 8) return [Shen.type_func, shen_user_lambda6817, 8, Arg6816];
  var Arg6816_0 = Arg6816[0], Arg6816_1 = Arg6816[1], Arg6816_2 = Arg6816[2], Arg6816_3 = Arg6816[3], Arg6816_4 = Arg6816[4], Arg6816_5 = Arg6816[5], Arg6816_6 = Arg6816[6], Arg6816_7 = Arg6816[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6816_1, [Shen.type_symbol, "string"], Arg6816_5, Arg6816_6, Arg6816_7]);})}, 8, [R1, R3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_symbol, "string"], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["shen.th*"], [R1, [Shen.type_symbol, "string"], Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6819(Arg6818) {
  if (Arg6818.length < 9) return [Shen.type_func, shen_user_lambda6819, 9, Arg6818];
  var Arg6818_0 = Arg6818[0], Arg6818_1 = Arg6818[1], Arg6818_2 = Arg6818[2], Arg6818_3 = Arg6818[3], Arg6818_4 = Arg6818[4], Arg6818_5 = Arg6818[5], Arg6818_6 = Arg6818[6], Arg6818_7 = Arg6818[7], Arg6818_8 = Arg6818[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6818_1, [Shen.type_symbol, "string"], Arg6818_6, Arg6818_7, Arg6818_8]);})}, 9, [R1, R3, R2, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R1 = R3))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "lambda"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R2 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6735_3])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, [Shen.type_func, function shen_user_lambda6821(Arg6820) {
  if (Arg6820.length < 16) return [Shen.type_func, shen_user_lambda6821, 16, Arg6820];
  var Arg6820_0 = Arg6820[0], Arg6820_1 = Arg6820[1], Arg6820_2 = Arg6820[2], Arg6820_3 = Arg6820[3], Arg6820_4 = Arg6820[4], Arg6820_5 = Arg6820[5], Arg6820_6 = Arg6820[6], Arg6820_7 = Arg6820[7], Arg6820_8 = Arg6820[8], Arg6820_9 = Arg6820[9], Arg6820_10 = Arg6820[10], Arg6820_11 = Arg6820[11], Arg6820_12 = Arg6820[12], Arg6820_13 = Arg6820[13], Arg6820_14 = Arg6820[14], Arg6820_15 = Arg6820[15];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6820_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6820_8, [Shen.type_func, function shen_user_lambda6823(Arg6822) {
  if (Arg6822.length < 9) return [Shen.type_func, shen_user_lambda6823, 9, Arg6822];
  var Arg6822_0 = Arg6822[0], Arg6822_1 = Arg6822[1], Arg6822_2 = Arg6822[2], Arg6822_3 = Arg6822[3], Arg6822_4 = Arg6822[4], Arg6822_5 = Arg6822[5], Arg6822_6 = Arg6822[6], Arg6822_7 = Arg6822[7], Arg6822_8 = Arg6822[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6822_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6822_4, Arg6822_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6822_0, Arg6822_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6822_1, Arg6822_7])]), Arg6822_7, [Shen.type_func, function shen_user_lambda6825(Arg6824) {
  if (Arg6824.length < 9) return [Shen.type_func, shen_user_lambda6825, 9, Arg6824];
  var Arg6824_0 = Arg6824[0], Arg6824_1 = Arg6824[1], Arg6824_2 = Arg6824[2], Arg6824_3 = Arg6824[3], Arg6824_4 = Arg6824[4], Arg6824_5 = Arg6824[5], Arg6824_6 = Arg6824[6], Arg6824_7 = Arg6824[7], Arg6824_8 = Arg6824[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6824_2, Arg6824_3, [Shen.type_cons, [Shen.type_cons, Arg6824_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6824_5, []]]], Arg6824_6], Arg6824_7, Arg6824_8]);})}, 9, [Arg6822_0, Arg6822_1, Arg6822_2, Arg6822_3, Arg6822_4, Arg6822_5, Arg6822_6, Arg6822_7, Arg6822_8], undefined]]);})}, 9, [Arg6820_1, Arg6820_2, Arg6820_3, Arg6820_4, Arg6820_5, Arg6820_6, Arg6820_7, Arg6820_8, Arg6820_9], undefined]]);})}, 16, [R0, R1, R3, R5, R2, R6, R4, Arg6735_2, Arg6735_3, Arg6735_4, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6735_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, [Shen.type_func, function shen_user_lambda6827(Arg6826) {
  if (Arg6826.length < 18) return [Shen.type_func, shen_user_lambda6827, 18, Arg6826];
  var Arg6826_0 = Arg6826[0], Arg6826_1 = Arg6826[1], Arg6826_2 = Arg6826[2], Arg6826_3 = Arg6826[3], Arg6826_4 = Arg6826[4], Arg6826_5 = Arg6826[5], Arg6826_6 = Arg6826[6], Arg6826_7 = Arg6826[7], Arg6826_8 = Arg6826[8], Arg6826_9 = Arg6826[9], Arg6826_10 = Arg6826[10], Arg6826_11 = Arg6826[11], Arg6826_12 = Arg6826[12], Arg6826_13 = Arg6826[13], Arg6826_14 = Arg6826[14], Arg6826_15 = Arg6826[15], Arg6826_16 = Arg6826[16], Arg6826_17 = Arg6826[17];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6826_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6826_8, [Shen.type_func, function shen_user_lambda6829(Arg6828) {
  if (Arg6828.length < 9) return [Shen.type_func, shen_user_lambda6829, 9, Arg6828];
  var Arg6828_0 = Arg6828[0], Arg6828_1 = Arg6828[1], Arg6828_2 = Arg6828[2], Arg6828_3 = Arg6828[3], Arg6828_4 = Arg6828[4], Arg6828_5 = Arg6828[5], Arg6828_6 = Arg6828[6], Arg6828_7 = Arg6828[7], Arg6828_8 = Arg6828[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6828_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6828_4, Arg6828_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6828_0, Arg6828_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6828_1, Arg6828_7])]), Arg6828_7, [Shen.type_func, function shen_user_lambda6831(Arg6830) {
  if (Arg6830.length < 9) return [Shen.type_func, shen_user_lambda6831, 9, Arg6830];
  var Arg6830_0 = Arg6830[0], Arg6830_1 = Arg6830[1], Arg6830_2 = Arg6830[2], Arg6830_3 = Arg6830[3], Arg6830_4 = Arg6830[4], Arg6830_5 = Arg6830[5], Arg6830_6 = Arg6830[6], Arg6830_7 = Arg6830[7], Arg6830_8 = Arg6830[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6830_2, Arg6830_3, [Shen.type_cons, [Shen.type_cons, Arg6830_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6830_5, []]]], Arg6830_6], Arg6830_7, Arg6830_8]);})}, 9, [Arg6828_0, Arg6828_1, Arg6828_2, Arg6828_3, Arg6828_4, Arg6828_5, Arg6828_6, Arg6828_7, Arg6828_8], undefined]]);})}, 9, [Arg6826_1, Arg6826_2, Arg6826_3, Arg6826_4, Arg6826_5, Arg6826_6, Arg6826_7, Arg6826_8, Arg6826_9], undefined]]);})}, 18, [R0, R1, R3, R6, R2, R7, R4, Arg6735_2, Arg6735_3, Arg6735_4, R5, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R2, []], Arg6735_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, [Shen.type_func, function shen_user_lambda6833(Arg6832) {
  if (Arg6832.length < 18) return [Shen.type_func, shen_user_lambda6833, 18, Arg6832];
  var Arg6832_0 = Arg6832[0], Arg6832_1 = Arg6832[1], Arg6832_2 = Arg6832[2], Arg6832_3 = Arg6832[3], Arg6832_4 = Arg6832[4], Arg6832_5 = Arg6832[5], Arg6832_6 = Arg6832[6], Arg6832_7 = Arg6832[7], Arg6832_8 = Arg6832[8], Arg6832_9 = Arg6832[9], Arg6832_10 = Arg6832[10], Arg6832_11 = Arg6832[11], Arg6832_12 = Arg6832[12], Arg6832_13 = Arg6832[13], Arg6832_14 = Arg6832[14], Arg6832_15 = Arg6832[15], Arg6832_16 = Arg6832[16], Arg6832_17 = Arg6832[17];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6832_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6832_8, [Shen.type_func, function shen_user_lambda6835(Arg6834) {
  if (Arg6834.length < 9) return [Shen.type_func, shen_user_lambda6835, 9, Arg6834];
  var Arg6834_0 = Arg6834[0], Arg6834_1 = Arg6834[1], Arg6834_2 = Arg6834[2], Arg6834_3 = Arg6834[3], Arg6834_4 = Arg6834[4], Arg6834_5 = Arg6834[5], Arg6834_6 = Arg6834[6], Arg6834_7 = Arg6834[7], Arg6834_8 = Arg6834[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6834_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6834_4, Arg6834_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6834_0, Arg6834_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6834_1, Arg6834_7])]), Arg6834_7, [Shen.type_func, function shen_user_lambda6837(Arg6836) {
  if (Arg6836.length < 9) return [Shen.type_func, shen_user_lambda6837, 9, Arg6836];
  var Arg6836_0 = Arg6836[0], Arg6836_1 = Arg6836[1], Arg6836_2 = Arg6836[2], Arg6836_3 = Arg6836[3], Arg6836_4 = Arg6836[4], Arg6836_5 = Arg6836[5], Arg6836_6 = Arg6836[6], Arg6836_7 = Arg6836[7], Arg6836_8 = Arg6836[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6836_2, Arg6836_3, [Shen.type_cons, [Shen.type_cons, Arg6836_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6836_5, []]]], Arg6836_6], Arg6836_7, Arg6836_8]);})}, 9, [Arg6834_0, Arg6834_1, Arg6834_2, Arg6834_3, Arg6834_4, Arg6834_5, Arg6834_6, Arg6834_7, Arg6834_8], undefined]]);})}, 9, [Arg6832_1, Arg6832_2, Arg6832_3, Arg6832_4, Arg6832_5, Arg6832_6, Arg6832_7, Arg6832_8, Arg6832_9], undefined]]);})}, 18, [R0, R1, R3, R6, R2, R7, R4, Arg6735_2, Arg6735_3, Arg6735_4, R5, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "-->"], Arg6735_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R6 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, [Shen.type_func, function shen_user_lambda6839(Arg6838) {
  if (Arg6838.length < 18) return [Shen.type_func, shen_user_lambda6839, 18, Arg6838];
  var Arg6838_0 = Arg6838[0], Arg6838_1 = Arg6838[1], Arg6838_2 = Arg6838[2], Arg6838_3 = Arg6838[3], Arg6838_4 = Arg6838[4], Arg6838_5 = Arg6838[5], Arg6838_6 = Arg6838[6], Arg6838_7 = Arg6838[7], Arg6838_8 = Arg6838[8], Arg6838_9 = Arg6838[9], Arg6838_10 = Arg6838[10], Arg6838_11 = Arg6838[11], Arg6838_12 = Arg6838[12], Arg6838_13 = Arg6838[13], Arg6838_14 = Arg6838[14], Arg6838_15 = Arg6838[15], Arg6838_16 = Arg6838[16], Arg6838_17 = Arg6838[17];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6838_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6838_8, [Shen.type_func, function shen_user_lambda6841(Arg6840) {
  if (Arg6840.length < 9) return [Shen.type_func, shen_user_lambda6841, 9, Arg6840];
  var Arg6840_0 = Arg6840[0], Arg6840_1 = Arg6840[1], Arg6840_2 = Arg6840[2], Arg6840_3 = Arg6840[3], Arg6840_4 = Arg6840[4], Arg6840_5 = Arg6840[5], Arg6840_6 = Arg6840[6], Arg6840_7 = Arg6840[7], Arg6840_8 = Arg6840[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6840_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6840_4, Arg6840_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6840_0, Arg6840_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6840_1, Arg6840_7])]), Arg6840_7, [Shen.type_func, function shen_user_lambda6843(Arg6842) {
  if (Arg6842.length < 9) return [Shen.type_func, shen_user_lambda6843, 9, Arg6842];
  var Arg6842_0 = Arg6842[0], Arg6842_1 = Arg6842[1], Arg6842_2 = Arg6842[2], Arg6842_3 = Arg6842[3], Arg6842_4 = Arg6842[4], Arg6842_5 = Arg6842[5], Arg6842_6 = Arg6842[6], Arg6842_7 = Arg6842[7], Arg6842_8 = Arg6842[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6842_2, Arg6842_3, [Shen.type_cons, [Shen.type_cons, Arg6842_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6842_5, []]]], Arg6842_6], Arg6842_7, Arg6842_8]);})}, 9, [Arg6840_0, Arg6840_1, Arg6840_2, Arg6840_3, Arg6840_4, Arg6840_5, Arg6840_6, Arg6840_7, Arg6840_8], undefined]]);})}, 9, [Arg6838_1, Arg6838_2, Arg6838_3, Arg6838_4, Arg6838_5, Arg6838_6, Arg6838_7, Arg6838_8, Arg6838_9], undefined]]);})}, 18, [R0, R1, R3, R2, R6, R7, R4, Arg6735_2, Arg6735_3, Arg6735_4, R5, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg6735_3]),
  ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, [Shen.type_func, function shen_user_lambda6845(Arg6844) {
  if (Arg6844.length < 20) return [Shen.type_func, shen_user_lambda6845, 20, Arg6844];
  var Arg6844_0 = Arg6844[0], Arg6844_1 = Arg6844[1], Arg6844_2 = Arg6844[2], Arg6844_3 = Arg6844[3], Arg6844_4 = Arg6844[4], Arg6844_5 = Arg6844[5], Arg6844_6 = Arg6844[6], Arg6844_7 = Arg6844[7], Arg6844_8 = Arg6844[8], Arg6844_9 = Arg6844[9], Arg6844_10 = Arg6844[10], Arg6844_11 = Arg6844[11], Arg6844_12 = Arg6844[12], Arg6844_13 = Arg6844[13], Arg6844_14 = Arg6844[14], Arg6844_15 = Arg6844[15], Arg6844_16 = Arg6844[16], Arg6844_17 = Arg6844[17], Arg6844_18 = Arg6844[18], Arg6844_19 = Arg6844[19];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6844_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6844_8, [Shen.type_func, function shen_user_lambda6847(Arg6846) {
  if (Arg6846.length < 9) return [Shen.type_func, shen_user_lambda6847, 9, Arg6846];
  var Arg6846_0 = Arg6846[0], Arg6846_1 = Arg6846[1], Arg6846_2 = Arg6846[2], Arg6846_3 = Arg6846[3], Arg6846_4 = Arg6846[4], Arg6846_5 = Arg6846[5], Arg6846_6 = Arg6846[6], Arg6846_7 = Arg6846[7], Arg6846_8 = Arg6846[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6846_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6846_4, Arg6846_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6846_0, Arg6846_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6846_1, Arg6846_7])]), Arg6846_7, [Shen.type_func, function shen_user_lambda6849(Arg6848) {
  if (Arg6848.length < 9) return [Shen.type_func, shen_user_lambda6849, 9, Arg6848];
  var Arg6848_0 = Arg6848[0], Arg6848_1 = Arg6848[1], Arg6848_2 = Arg6848[2], Arg6848_3 = Arg6848[3], Arg6848_4 = Arg6848[4], Arg6848_5 = Arg6848[5], Arg6848_6 = Arg6848[6], Arg6848_7 = Arg6848[7], Arg6848_8 = Arg6848[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6848_2, Arg6848_3, [Shen.type_cons, [Shen.type_cons, Arg6848_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6848_5, []]]], Arg6848_6], Arg6848_7, Arg6848_8]);})}, 9, [Arg6846_0, Arg6846_1, Arg6846_2, Arg6846_3, Arg6846_4, Arg6846_5, Arg6846_6, Arg6846_7, Arg6846_8], undefined]]);})}, 9, [Arg6844_1, Arg6844_2, Arg6844_3, Arg6844_4, Arg6844_5, Arg6844_6, Arg6844_7, Arg6844_8, Arg6844_9], undefined]]);})}, 20, [R0, R1, R3, R7, R6, R8, R4, Arg6735_2, Arg6735_3, Arg6735_4, R2, Arg6735_3, R5, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R6, []], Arg6735_3]),
  ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R8 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, [Shen.type_func, function shen_user_lambda6851(Arg6850) {
  if (Arg6850.length < 20) return [Shen.type_func, shen_user_lambda6851, 20, Arg6850];
  var Arg6850_0 = Arg6850[0], Arg6850_1 = Arg6850[1], Arg6850_2 = Arg6850[2], Arg6850_3 = Arg6850[3], Arg6850_4 = Arg6850[4], Arg6850_5 = Arg6850[5], Arg6850_6 = Arg6850[6], Arg6850_7 = Arg6850[7], Arg6850_8 = Arg6850[8], Arg6850_9 = Arg6850[9], Arg6850_10 = Arg6850[10], Arg6850_11 = Arg6850[11], Arg6850_12 = Arg6850[12], Arg6850_13 = Arg6850[13], Arg6850_14 = Arg6850[14], Arg6850_15 = Arg6850[15], Arg6850_16 = Arg6850[16], Arg6850_17 = Arg6850[17], Arg6850_18 = Arg6850[18], Arg6850_19 = Arg6850[19];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6850_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6850_8, [Shen.type_func, function shen_user_lambda6853(Arg6852) {
  if (Arg6852.length < 9) return [Shen.type_func, shen_user_lambda6853, 9, Arg6852];
  var Arg6852_0 = Arg6852[0], Arg6852_1 = Arg6852[1], Arg6852_2 = Arg6852[2], Arg6852_3 = Arg6852[3], Arg6852_4 = Arg6852[4], Arg6852_5 = Arg6852[5], Arg6852_6 = Arg6852[6], Arg6852_7 = Arg6852[7], Arg6852_8 = Arg6852[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6852_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6852_4, Arg6852_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6852_0, Arg6852_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6852_1, Arg6852_7])]), Arg6852_7, [Shen.type_func, function shen_user_lambda6855(Arg6854) {
  if (Arg6854.length < 9) return [Shen.type_func, shen_user_lambda6855, 9, Arg6854];
  var Arg6854_0 = Arg6854[0], Arg6854_1 = Arg6854[1], Arg6854_2 = Arg6854[2], Arg6854_3 = Arg6854[3], Arg6854_4 = Arg6854[4], Arg6854_5 = Arg6854[5], Arg6854_6 = Arg6854[6], Arg6854_7 = Arg6854[7], Arg6854_8 = Arg6854[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6854_2, Arg6854_3, [Shen.type_cons, [Shen.type_cons, Arg6854_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6854_5, []]]], Arg6854_6], Arg6854_7, Arg6854_8]);})}, 9, [Arg6852_0, Arg6852_1, Arg6852_2, Arg6852_3, Arg6852_4, Arg6852_5, Arg6852_6, Arg6852_7, Arg6852_8], undefined]]);})}, 9, [Arg6850_1, Arg6850_2, Arg6850_3, Arg6850_4, Arg6850_5, Arg6850_6, Arg6850_7, Arg6850_8, Arg6850_9], undefined]]);})}, 20, [R0, R1, R3, R7, R6, R8, R4, Arg6735_2, Arg6735_3, Arg6735_4, R2, Arg6735_3, R5, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_3]),
  (R1 = R4))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, R5, []]], Arg6735_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, [Shen.type_func, function shen_user_lambda6857(Arg6856) {
  if (Arg6856.length < 18) return [Shen.type_func, shen_user_lambda6857, 18, Arg6856];
  var Arg6856_0 = Arg6856[0], Arg6856_1 = Arg6856[1], Arg6856_2 = Arg6856[2], Arg6856_3 = Arg6856[3], Arg6856_4 = Arg6856[4], Arg6856_5 = Arg6856[5], Arg6856_6 = Arg6856[6], Arg6856_7 = Arg6856[7], Arg6856_8 = Arg6856[8], Arg6856_9 = Arg6856[9], Arg6856_10 = Arg6856[10], Arg6856_11 = Arg6856[11], Arg6856_12 = Arg6856[12], Arg6856_13 = Arg6856[13], Arg6856_14 = Arg6856[14], Arg6856_15 = Arg6856[15], Arg6856_16 = Arg6856[16], Arg6856_17 = Arg6856[17];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6856_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6856_8, [Shen.type_func, function shen_user_lambda6859(Arg6858) {
  if (Arg6858.length < 9) return [Shen.type_func, shen_user_lambda6859, 9, Arg6858];
  var Arg6858_0 = Arg6858[0], Arg6858_1 = Arg6858[1], Arg6858_2 = Arg6858[2], Arg6858_3 = Arg6858[3], Arg6858_4 = Arg6858[4], Arg6858_5 = Arg6858[5], Arg6858_6 = Arg6858[6], Arg6858_7 = Arg6858[7], Arg6858_8 = Arg6858[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6858_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6858_4, Arg6858_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6858_0, Arg6858_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6858_1, Arg6858_7])]), Arg6858_7, [Shen.type_func, function shen_user_lambda6861(Arg6860) {
  if (Arg6860.length < 9) return [Shen.type_func, shen_user_lambda6861, 9, Arg6860];
  var Arg6860_0 = Arg6860[0], Arg6860_1 = Arg6860[1], Arg6860_2 = Arg6860[2], Arg6860_3 = Arg6860[3], Arg6860_4 = Arg6860[4], Arg6860_5 = Arg6860[5], Arg6860_6 = Arg6860[6], Arg6860_7 = Arg6860[7], Arg6860_8 = Arg6860[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6860_2, Arg6860_3, [Shen.type_cons, [Shen.type_cons, Arg6860_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6860_5, []]]], Arg6860_6], Arg6860_7, Arg6860_8]);})}, 9, [Arg6858_0, Arg6858_1, Arg6858_2, Arg6858_3, Arg6858_4, Arg6858_5, Arg6858_6, Arg6858_7, Arg6858_8], undefined]]);})}, 9, [Arg6856_1, Arg6856_2, Arg6856_3, Arg6856_4, Arg6856_5, Arg6856_6, Arg6856_7, Arg6856_8, Arg6856_9], undefined]]);})}, 18, [R0, R1, R3, R6, R5, R7, R4, Arg6735_2, Arg6735_3, Arg6735_4, R2, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R1 = R5))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, "-->"], [Shen.type_cons, R5, []]]], Arg6735_3]),
  ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, [Shen.type_func, function shen_user_lambda6863(Arg6862) {
  if (Arg6862.length < 18) return [Shen.type_func, shen_user_lambda6863, 18, Arg6862];
  var Arg6862_0 = Arg6862[0], Arg6862_1 = Arg6862[1], Arg6862_2 = Arg6862[2], Arg6862_3 = Arg6862[3], Arg6862_4 = Arg6862[4], Arg6862_5 = Arg6862[5], Arg6862_6 = Arg6862[6], Arg6862_7 = Arg6862[7], Arg6862_8 = Arg6862[8], Arg6862_9 = Arg6862[9], Arg6862_10 = Arg6862[10], Arg6862_11 = Arg6862[11], Arg6862_12 = Arg6862[12], Arg6862_13 = Arg6862[13], Arg6862_14 = Arg6862[14], Arg6862_15 = Arg6862[15], Arg6862_16 = Arg6862[16], Arg6862_17 = Arg6862[17];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6862_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6862_8, [Shen.type_func, function shen_user_lambda6865(Arg6864) {
  if (Arg6864.length < 9) return [Shen.type_func, shen_user_lambda6865, 9, Arg6864];
  var Arg6864_0 = Arg6864[0], Arg6864_1 = Arg6864[1], Arg6864_2 = Arg6864[2], Arg6864_3 = Arg6864[3], Arg6864_4 = Arg6864[4], Arg6864_5 = Arg6864[5], Arg6864_6 = Arg6864[6], Arg6864_7 = Arg6864[7], Arg6864_8 = Arg6864[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6864_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6864_4, Arg6864_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6864_0, Arg6864_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6864_1, Arg6864_7])]), Arg6864_7, [Shen.type_func, function shen_user_lambda6867(Arg6866) {
  if (Arg6866.length < 9) return [Shen.type_func, shen_user_lambda6867, 9, Arg6866];
  var Arg6866_0 = Arg6866[0], Arg6866_1 = Arg6866[1], Arg6866_2 = Arg6866[2], Arg6866_3 = Arg6866[3], Arg6866_4 = Arg6866[4], Arg6866_5 = Arg6866[5], Arg6866_6 = Arg6866[6], Arg6866_7 = Arg6866[7], Arg6866_8 = Arg6866[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6866_2, Arg6866_3, [Shen.type_cons, [Shen.type_cons, Arg6866_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6866_5, []]]], Arg6866_6], Arg6866_7, Arg6866_8]);})}, 9, [Arg6864_0, Arg6864_1, Arg6864_2, Arg6864_3, Arg6864_4, Arg6864_5, Arg6864_6, Arg6864_7, Arg6864_8], undefined]]);})}, 9, [Arg6862_1, Arg6862_2, Arg6862_3, Arg6862_4, Arg6862_5, Arg6862_6, Arg6862_7, Arg6862_8, Arg6862_9], undefined]]);})}, 18, [R0, R1, R3, R6, R5, R7, R4, Arg6735_2, Arg6735_3, Arg6735_4, R2, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R1 = R5))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "let"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.th*"], [R3, R6, Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda6869(Arg6868) {
  if (Arg6868.length < 16) return [Shen.type_func, shen_user_lambda6869, 16, Arg6868];
  var Arg6868_0 = Arg6868[0], Arg6868_1 = Arg6868[1], Arg6868_2 = Arg6868[2], Arg6868_3 = Arg6868[3], Arg6868_4 = Arg6868[4], Arg6868_5 = Arg6868[5], Arg6868_6 = Arg6868[6], Arg6868_7 = Arg6868[7], Arg6868_8 = Arg6868[8], Arg6868_9 = Arg6868[9], Arg6868_10 = Arg6868[10], Arg6868_11 = Arg6868[11], Arg6868_12 = Arg6868[12], Arg6868_13 = Arg6868[13], Arg6868_14 = Arg6868[14], Arg6868_15 = Arg6868[15];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6868_5, Shen.call(Shen.fns["shen.placeholder"], []), Arg6868_8, [Shen.type_func, function shen_user_lambda6871(Arg6870) {
  if (Arg6870.length < 9) return [Shen.type_func, shen_user_lambda6871, 9, Arg6870];
  var Arg6870_0 = Arg6870[0], Arg6870_1 = Arg6870[1], Arg6870_2 = Arg6870[2], Arg6870_3 = Arg6870[3], Arg6870_4 = Arg6870[4], Arg6870_5 = Arg6870[5], Arg6870_6 = Arg6870[6], Arg6870_7 = Arg6870[7], Arg6870_8 = Arg6870[8];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6870_2, Shen.call(Shen.fns["shen.ebr"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6870_4, Arg6870_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6870_0, Arg6870_7]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6870_1, Arg6870_7])]), Arg6870_7, [Shen.type_func, function shen_user_lambda6873(Arg6872) {
  if (Arg6872.length < 9) return [Shen.type_func, shen_user_lambda6873, 9, Arg6872];
  var Arg6872_0 = Arg6872[0], Arg6872_1 = Arg6872[1], Arg6872_2 = Arg6872[2], Arg6872_3 = Arg6872[3], Arg6872_4 = Arg6872[4], Arg6872_5 = Arg6872[5], Arg6872_6 = Arg6872[6], Arg6872_7 = Arg6872[7], Arg6872_8 = Arg6872[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6872_2, Arg6872_3, [Shen.type_cons, [Shen.type_cons, Arg6872_4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6872_5, []]]], Arg6872_6], Arg6872_7, Arg6872_8]);})}, 9, [Arg6870_0, Arg6870_1, Arg6870_2, Arg6870_3, Arg6870_4, Arg6870_5, Arg6870_6, Arg6870_7, Arg6870_8], undefined]]);})}, 9, [Arg6868_1, Arg6868_2, Arg6868_3, Arg6868_4, Arg6868_5, Arg6868_6, Arg6868_7, Arg6868_8, Arg6868_9], undefined]]);})}, 16, [R3, R1, R4, R2, Arg6735_1, R5, R6, Arg6735_2, Arg6735_3, Arg6735_4, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "open"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "stream"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6735_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg6735_3, [Shen.type_func, function shen_user_lambda6875(Arg6874) {
  if (Arg6874.length < 9) return [Shen.type_func, shen_user_lambda6875, 9, Arg6874];
  var Arg6874_0 = Arg6874[0], Arg6874_1 = Arg6874[1], Arg6874_2 = Arg6874[2], Arg6874_3 = Arg6874[3], Arg6874_4 = Arg6874[4], Arg6874_5 = Arg6874[5], Arg6874_6 = Arg6874[6], Arg6874_7 = Arg6874[7], Arg6874_8 = Arg6874[8];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6874_3, Arg6874_7, [Shen.type_func, function shen_user_lambda6877(Arg6876) {
  if (Arg6876.length < 5) return [Shen.type_func, shen_user_lambda6877, 5, Arg6876];
  var Arg6876_0 = Arg6876[0], Arg6876_1 = Arg6876[1], Arg6876_2 = Arg6876[2], Arg6876_3 = Arg6876[3], Arg6876_4 = Arg6876[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6876_1, [Shen.type_symbol, "string"], Arg6876_2, Arg6876_3, Arg6876_4]);})}, 5, [Arg6874_3, Arg6874_2, Arg6874_6, Arg6874_7, Arg6874_8], undefined]]);})}, 9, [R2, R3, R1, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg6735_3, [Shen.type_func, function shen_user_lambda6879(Arg6878) {
  if (Arg6878.length < 10) return [Shen.type_func, shen_user_lambda6879, 10, Arg6878];
  var Arg6878_0 = Arg6878[0], Arg6878_1 = Arg6878[1], Arg6878_2 = Arg6878[2], Arg6878_3 = Arg6878[3], Arg6878_4 = Arg6878[4], Arg6878_5 = Arg6878[5], Arg6878_6 = Arg6878[6], Arg6878_7 = Arg6878[7], Arg6878_8 = Arg6878[8], Arg6878_9 = Arg6878[9];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6878_4, Arg6878_8, [Shen.type_func, function shen_user_lambda6881(Arg6880) {
  if (Arg6880.length < 5) return [Shen.type_func, shen_user_lambda6881, 5, Arg6880];
  var Arg6880_0 = Arg6880[0], Arg6880_1 = Arg6880[1], Arg6880_2 = Arg6880[2], Arg6880_3 = Arg6880[3], Arg6880_4 = Arg6880[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6880_1, [Shen.type_symbol, "string"], Arg6880_2, Arg6880_3, Arg6880_4]);})}, 5, [Arg6878_4, Arg6878_2, Arg6878_7, Arg6878_8, Arg6878_9], undefined]]);})}, 10, [R2, R3, R1, R4, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6735_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_cons, R2, []], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R2, R3, Arg6735_3, [Shen.type_func, function shen_user_lambda6883(Arg6882) {
  if (Arg6882.length < 14) return [Shen.type_func, shen_user_lambda6883, 14, Arg6882];
  var Arg6882_0 = Arg6882[0], Arg6882_1 = Arg6882[1], Arg6882_2 = Arg6882[2], Arg6882_3 = Arg6882[3], Arg6882_4 = Arg6882[4], Arg6882_5 = Arg6882[5], Arg6882_6 = Arg6882[6], Arg6882_7 = Arg6882[7], Arg6882_8 = Arg6882[8], Arg6882_9 = Arg6882[9], Arg6882_10 = Arg6882[10], Arg6882_11 = Arg6882[11], Arg6882_12 = Arg6882[12], Arg6882_13 = Arg6882[13];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6882_2, Arg6882_7, [Shen.type_func, function shen_user_lambda6885(Arg6884) {
  if (Arg6884.length < 5) return [Shen.type_func, shen_user_lambda6885, 5, Arg6884];
  var Arg6884_0 = Arg6884[0], Arg6884_1 = Arg6884[1], Arg6884_2 = Arg6884[2], Arg6884_3 = Arg6884[3], Arg6884_4 = Arg6884[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6884_1, [Shen.type_symbol, "string"], Arg6884_2, Arg6884_3, Arg6884_4]);})}, 5, [Arg6882_2, Arg6882_3, Arg6882_4, Arg6882_7, Arg6882_5], undefined]]);})}, 14, [R2, R3, R0, R1, Arg6735_2, Arg6735_4, R4, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6735_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R4]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R4, [Shen.type_symbol, "stream"], Arg6735_3]),
  ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R5 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R3 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg6735_3, [Shen.type_func, function shen_user_lambda6887(Arg6886) {
  if (Arg6886.length < 11) return [Shen.type_func, shen_user_lambda6887, 11, Arg6886];
  var Arg6886_0 = Arg6886[0], Arg6886_1 = Arg6886[1], Arg6886_2 = Arg6886[2], Arg6886_3 = Arg6886[3], Arg6886_4 = Arg6886[4], Arg6886_5 = Arg6886[5], Arg6886_6 = Arg6886[6], Arg6886_7 = Arg6886[7], Arg6886_8 = Arg6886[8], Arg6886_9 = Arg6886[9], Arg6886_10 = Arg6886[10];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6886_5, Arg6886_4, [Shen.type_func, function shen_user_lambda6889(Arg6888) {
  if (Arg6888.length < 5) return [Shen.type_func, shen_user_lambda6889, 5, Arg6888];
  var Arg6888_0 = Arg6888[0], Arg6888_1 = Arg6888[1], Arg6888_2 = Arg6888[2], Arg6888_3 = Arg6888[3], Arg6888_4 = Arg6888[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6888_1, [Shen.type_symbol, "string"], Arg6888_2, Arg6888_3, Arg6888_4]);})}, 5, [Arg6886_5, Arg6886_2, Arg6886_8, Arg6886_4, Arg6886_9], undefined]]);})}, 11, [R5, R3, R1, R4, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R2, [], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg6735_3, [Shen.type_func, function shen_user_lambda6891(Arg6890) {
  if (Arg6890.length < 12) return [Shen.type_func, shen_user_lambda6891, 12, Arg6890];
  var Arg6890_0 = Arg6890[0], Arg6890_1 = Arg6890[1], Arg6890_2 = Arg6890[2], Arg6890_3 = Arg6890[3], Arg6890_4 = Arg6890[4], Arg6890_5 = Arg6890[5], Arg6890_6 = Arg6890[6], Arg6890_7 = Arg6890[7], Arg6890_8 = Arg6890[8], Arg6890_9 = Arg6890[9], Arg6890_10 = Arg6890[10], Arg6890_11 = Arg6890[11];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6890_6, Arg6890_5, [Shen.type_func, function shen_user_lambda6893(Arg6892) {
  if (Arg6892.length < 5) return [Shen.type_func, shen_user_lambda6893, 5, Arg6892];
  var Arg6892_0 = Arg6892[0], Arg6892_1 = Arg6892[1], Arg6892_2 = Arg6892[2], Arg6892_3 = Arg6892[3], Arg6892_4 = Arg6892[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6892_1, [Shen.type_symbol, "string"], Arg6892_2, Arg6892_3, Arg6892_4]);})}, 5, [Arg6890_6, Arg6890_2, Arg6890_9, Arg6890_5, Arg6890_10], undefined]]);})}, 12, [R5, R3, R1, R2, R4, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R3 = R5))
  : (R3 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, R5, []], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R5, R3, Arg6735_3, [Shen.type_func, function shen_user_lambda6895(Arg6894) {
  if (Arg6894.length < 16) return [Shen.type_func, shen_user_lambda6895, 16, Arg6894];
  var Arg6894_0 = Arg6894[0], Arg6894_1 = Arg6894[1], Arg6894_2 = Arg6894[2], Arg6894_3 = Arg6894[3], Arg6894_4 = Arg6894[4], Arg6894_5 = Arg6894[5], Arg6894_6 = Arg6894[6], Arg6894_7 = Arg6894[7], Arg6894_8 = Arg6894[8], Arg6894_9 = Arg6894[9], Arg6894_10 = Arg6894[10], Arg6894_11 = Arg6894[11], Arg6894_12 = Arg6894[12], Arg6894_13 = Arg6894[13], Arg6894_14 = Arg6894[14], Arg6894_15 = Arg6894[15];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6894_2, Arg6894_7, [Shen.type_func, function shen_user_lambda6897(Arg6896) {
  if (Arg6896.length < 5) return [Shen.type_func, shen_user_lambda6897, 5, Arg6896];
  var Arg6896_0 = Arg6896[0], Arg6896_1 = Arg6896[1], Arg6896_2 = Arg6896[2], Arg6896_3 = Arg6896[3], Arg6896_4 = Arg6896[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6896_1, [Shen.type_symbol, "string"], Arg6896_2, Arg6896_3, Arg6896_4]);})}, 5, [Arg6894_2, Arg6894_3, Arg6894_4, Arg6894_7, Arg6894_5], undefined]]);})}, 16, [R5, R3, R0, R1, Arg6735_2, Arg6735_4, R2, Arg6735_3, R4, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R3 = R5))
  : (R3 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R4, Arg6735_3]),
  (R1 = R3))
  : (R1 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, R4, []]], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R3, Arg6735_3, [Shen.type_func, function shen_user_lambda6899(Arg6898) {
  if (Arg6898.length < 14) return [Shen.type_func, shen_user_lambda6899, 14, Arg6898];
  var Arg6898_0 = Arg6898[0], Arg6898_1 = Arg6898[1], Arg6898_2 = Arg6898[2], Arg6898_3 = Arg6898[3], Arg6898_4 = Arg6898[4], Arg6898_5 = Arg6898[5], Arg6898_6 = Arg6898[6], Arg6898_7 = Arg6898[7], Arg6898_8 = Arg6898[8], Arg6898_9 = Arg6898[9], Arg6898_10 = Arg6898[10], Arg6898_11 = Arg6898[11], Arg6898_12 = Arg6898[12], Arg6898_13 = Arg6898[13];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6898_2, Arg6898_7, [Shen.type_func, function shen_user_lambda6901(Arg6900) {
  if (Arg6900.length < 5) return [Shen.type_func, shen_user_lambda6901, 5, Arg6900];
  var Arg6900_0 = Arg6900[0], Arg6900_1 = Arg6900[1], Arg6900_2 = Arg6900[2], Arg6900_3 = Arg6900[3], Arg6900_4 = Arg6900[4];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6900_1, [Shen.type_symbol, "string"], Arg6900_2, Arg6900_3, Arg6900_4]);})}, 5, [Arg6898_2, Arg6898_3, Arg6898_4, Arg6898_7, Arg6898_5], undefined]]);})}, 14, [R4, R3, R0, R1, Arg6735_2, Arg6735_4, R2, Arg6735_3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  (R1 = R4))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "type"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, [Shen.type_func, function shen_user_lambda6903(Arg6902) {
  if (Arg6902.length < 8) return [Shen.type_func, shen_user_lambda6903, 8, Arg6902];
  var Arg6902_0 = Arg6902[0], Arg6902_1 = Arg6902[1], Arg6902_2 = Arg6902[2], Arg6902_3 = Arg6902[3], Arg6902_4 = Arg6902[4], Arg6902_5 = Arg6902[5], Arg6902_6 = Arg6902[6], Arg6902_7 = Arg6902[7];
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg6902_1, Arg6902_4, Arg6902_6, [Shen.type_func, function shen_user_lambda6905(Arg6904) {
  if (Arg6904.length < 6) return [Shen.type_func, shen_user_lambda6905, 6, Arg6904];
  var Arg6904_0 = Arg6904[0], Arg6904_1 = Arg6904[1], Arg6904_2 = Arg6904[2], Arg6904_3 = Arg6904[3], Arg6904_4 = Arg6904[4], Arg6904_5 = Arg6904[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6904_1, Arg6904_2, Arg6904_3, Arg6904_4, Arg6904_5]);})}, 6, [Arg6902_4, Arg6902_0, Arg6902_1, Arg6902_5, Arg6902_6, Arg6902_7], undefined]]);})}, 8, [R1, R3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "input+"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["bind"], [R2, Shen.call(Shen.fns["shen.demodulate"], [Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_3])]), Arg6735_3, [Shen.type_func, function shen_user_lambda6907(Arg6906) {
  if (Arg6906.length < 13) return [Shen.type_func, shen_user_lambda6907, 13, Arg6906];
  var Arg6906_0 = Arg6906[0], Arg6906_1 = Arg6906[1], Arg6906_2 = Arg6906[2], Arg6906_3 = Arg6906[3], Arg6906_4 = Arg6906[4], Arg6906_5 = Arg6906[5], Arg6906_6 = Arg6906[6], Arg6906_7 = Arg6906[7], Arg6906_8 = Arg6906[8], Arg6906_9 = Arg6906[9], Arg6906_10 = Arg6906[10], Arg6906_11 = Arg6906[11], Arg6906_12 = Arg6906[12];
  return (function() {
  return Shen.call_tail(Shen.fns["unify"], [Arg6906_1, Arg6906_2, Arg6906_5, [Shen.type_func, function shen_user_lambda6909(Arg6908) {
  if (Arg6908.length < 6) return [Shen.type_func, shen_user_lambda6909, 6, Arg6908];
  var Arg6908_0 = Arg6908[0], Arg6908_1 = Arg6908[1], Arg6908_2 = Arg6908[2], Arg6908_3 = Arg6908[3], Arg6908_4 = Arg6908[4], Arg6908_5 = Arg6908[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6908_2, [Shen.type_cons, [Shen.type_symbol, "stream"], [Shen.type_cons, [Shen.type_symbol, "in"], []]], Arg6908_3, Arg6908_4, Arg6908_5]);})}, 6, [Arg6906_1, Arg6906_2, Arg6906_3, Arg6906_4, Arg6906_5, Arg6906_6], undefined]]);})}, 13, [R1, Arg6735_1, R2, R3, Arg6735_2, Arg6735_3, Arg6735_4, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "set"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, [Shen.type_func, function shen_user_lambda6911(Arg6910) {
  if (Arg6910.length < 8) return [Shen.type_func, shen_user_lambda6911, 8, Arg6910];
  var Arg6910_0 = Arg6910[0], Arg6910_1 = Arg6910[1], Arg6910_2 = Arg6910[2], Arg6910_3 = Arg6910[3], Arg6910_4 = Arg6910[4], Arg6910_5 = Arg6910[5], Arg6910_6 = Arg6910[6], Arg6910_7 = Arg6910[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6910_0, [Shen.type_symbol, "symbol"], Arg6910_5, Arg6910_6, [Shen.type_func, function shen_user_lambda6913(Arg6912) {
  if (Arg6912.length < 7) return [Shen.type_func, shen_user_lambda6913, 7, Arg6912];
  var Arg6912_0 = Arg6912[0], Arg6912_1 = Arg6912[1], Arg6912_2 = Arg6912[2], Arg6912_3 = Arg6912[3], Arg6912_4 = Arg6912[4], Arg6912_5 = Arg6912[5], Arg6912_6 = Arg6912[6];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6912_0, Arg6912_5, [Shen.type_func, function shen_user_lambda6915(Arg6914) {
  if (Arg6914.length < 7) return [Shen.type_func, shen_user_lambda6915, 7, Arg6914];
  var Arg6914_0 = Arg6914[0], Arg6914_1 = Arg6914[1], Arg6914_2 = Arg6914[2], Arg6914_3 = Arg6914[3], Arg6914_4 = Arg6914[4], Arg6914_5 = Arg6914[5], Arg6914_6 = Arg6914[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [[Shen.type_cons, [Shen.type_symbol, "value"], [Shen.type_cons, Arg6914_1, []]], Arg6914_3, Arg6914_4, Arg6914_5, [Shen.type_func, function shen_user_lambda6917(Arg6916) {
  if (Arg6916.length < 6) return [Shen.type_func, shen_user_lambda6917, 6, Arg6916];
  var Arg6916_0 = Arg6916[0], Arg6916_1 = Arg6916[1], Arg6916_2 = Arg6916[2], Arg6916_3 = Arg6916[3], Arg6916_4 = Arg6916[4], Arg6916_5 = Arg6916[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6916_1, Arg6916_2, Arg6916_3, Arg6916_4, Arg6916_5]);})}, 6, [Arg6914_1, Arg6914_2, Arg6914_3, Arg6914_4, Arg6914_5, Arg6914_6], undefined]]);})}, 7, [Arg6912_0, Arg6912_1, Arg6912_2, Arg6912_3, Arg6912_4, Arg6912_5, Arg6912_6], undefined]]);})}, 7, [Arg6910_2, Arg6910_0, Arg6910_1, Arg6910_4, Arg6910_5, Arg6910_6, Arg6910_7], undefined]]);})}, 8, [R1, R3, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-hyps"], [Arg6735_2, R1, Arg6735_3, [Shen.type_func, function shen_user_lambda6919(Arg6918) {
  if (Arg6918.length < 12) return [Shen.type_func, shen_user_lambda6919, 12, Arg6918];
  var Arg6918_0 = Arg6918[0], Arg6918_1 = Arg6918[1], Arg6918_2 = Arg6918[2], Arg6918_3 = Arg6918[3], Arg6918_4 = Arg6918[4], Arg6918_5 = Arg6918[5], Arg6918_6 = Arg6918[6], Arg6918_7 = Arg6918[7], Arg6918_8 = Arg6918[8], Arg6918_9 = Arg6918[9], Arg6918_10 = Arg6918[10], Arg6918_11 = Arg6918[11];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.th*"], [Arg6918_1, Arg6918_2, Arg6918_3, Arg6918_4, Arg6918_5]);})}, 12, [Arg6735_2, Arg6735_0, Arg6735_1, R1, Arg6735_3, Arg6735_4, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, [Shen.type_func, function shen_user_lambda6921(Arg6920) {
  if (Arg6920.length < 13) return [Shen.type_func, shen_user_lambda6921, 13, Arg6920];
  var Arg6920_0 = Arg6920[0], Arg6920_1 = Arg6920[1], Arg6920_2 = Arg6920[2], Arg6920_3 = Arg6920[3], Arg6920_4 = Arg6920[4], Arg6920_5 = Arg6920[5], Arg6920_6 = Arg6920[6], Arg6920_7 = Arg6920[7], Arg6920_8 = Arg6920[8], Arg6920_9 = Arg6920[9], Arg6920_10 = Arg6920[10], Arg6920_11 = Arg6920[11], Arg6920_12 = Arg6920[12];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-def"], [[Shen.type_cons, [Shen.type_symbol, "define"], [Shen.type_cons, Arg6920_1, Arg6920_2]], Arg6920_3, Arg6920_4, Arg6920_5, Arg6920_6]);})}, 13, [R0, R1, R2, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "defmacro"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "unit"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, Arg6735_4])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "unit"], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, Arg6735_4]))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.process-datatype"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6735_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "symbol"], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6735_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.synonyms-help"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R1)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6735_4))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "symbol"], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6735_4)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_3]),
  (R1 = R0))
  : (R1 = false))))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R1, (Shen.globals["shen.*datatypes*"]), Arg6735_3, [Shen.type_func, function shen_user_lambda6923(Arg6922) {
  if (Arg6922.length < 6) return [Shen.type_func, shen_user_lambda6923, 6, Arg6922];
  var Arg6922_0 = Arg6922[0], Arg6922_1 = Arg6922[1], Arg6922_2 = Arg6922[2], Arg6922_3 = Arg6922[3], Arg6922_4 = Arg6922[4], Arg6922_5 = Arg6922[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.udefs*"], [[Shen.type_cons, Arg6922_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6922_1, []]]], Arg6922_2, Arg6922_3, Arg6922_4, Arg6922_5]);})}, 6, [Arg6735_0, Arg6735_1, Arg6735_2, R1, Arg6735_3, Arg6735_4], undefined]]))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))
  : R1))]);}))}, 5, [], "shen.th*"];

Shen.fns["shen.t*-hyps"] = [Shen.type_func, function shen_user_lambda6924(Arg6735) {
  if (Arg6735.length < 4) return [Shen.type_func, shen_user_lambda6924, 4, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6735_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "cons"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6735_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R1 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6735_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6735_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R1, []], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "list"], Arg6735_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R6, []], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R5, []]], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_2]),
  (R0 = R5))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6735_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@p"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6735_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "*"], R6)))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.is_type(R6, Shen.type_cons))
  ? ((R1 = R6[1]),
  (R6 = Shen.call(Shen.fns["shen.lazyderef"], [R6[2], Arg6735_2])),
  ((Shen.empty$question$(R6))
  ? ((R6 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R6))
  ? ((R6 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg6735_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6735_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6735_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_cons, R1, []], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6735_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R6]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R6, [Shen.type_symbol, "*"], Arg6735_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R7 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R7 = R7))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_2]),
  (R5 = R7))
  : (R5 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R7 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R7, []], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R7 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R7, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R7 = R7))
  : (R7 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_2]),
  (R5 = R7))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R6, Arg6735_2]),
  (R0 = R5))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R6, []]], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_2]),
  (R0 = R6))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  (R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R5, [Shen.type_cons, [Shen.type_symbol, "*"], [Shen.type_cons, R6, []]]], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_2]),
  (R0 = R6))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6735_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@v"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6735_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "vector"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? ((R1 = R5[1]),
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6735_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6735_2]),
  ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R1, []], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, "vector"], Arg6735_2]),
  ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R6 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.empty$question$(R1))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_2]),
  (R4 = R6))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R6, []], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R6, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R6 = R6))
  : (R6 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_2]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, R5, []]], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "vector"], [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R5, Arg6735_2]), []]], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R5 = R5))
  : (R5 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_2]),
  (R0 = R5))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6735_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_2])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "@s"], R3)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R2 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R1)))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R1 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R0 = R4))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "string"], Arg6735_2]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_2])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R3, Arg6735_2])]], Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_2]),
  ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], [Shen.type_cons, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R4, Arg6735_2]), [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "string"], []]]], Shen.call(Shen.fns["shen.lazyderef"], [R0, Arg6735_2])]], Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_2]),
  (R4 = R4))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_2]),
  (R0 = R4))
  : (R0 = false))))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6735_1, [Shen.type_cons, Shen.call(Shen.fns["shen.lazyderef"], [R1, Arg6735_2]), Shen.call(Shen.fns["shen.lazyderef"], [R2, Arg6735_2])], Arg6735_2, [Shen.type_func, function shen_user_lambda6926(Arg6925) {
  if (Arg6925.length < 6) return [Shen.type_func, shen_user_lambda6926, 6, Arg6925];
  var Arg6925_0 = Arg6925[0], Arg6925_1 = Arg6925[1], Arg6925_2 = Arg6925[2], Arg6925_3 = Arg6925[3], Arg6925_4 = Arg6925[4], Arg6925_5 = Arg6925[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-hyps"], [Arg6925_2, Arg6925_3, Arg6925_4, Arg6925_5]);})}, 6, [Arg6735_1, R1, R0, R2, Arg6735_2, Arg6735_3], undefined]]);}))
  : false))
  : R0))
  : R0))
  : R0))
  : R0))}, 4, [], "shen.t*-hyps"];

Shen.fns["shen.show"] = [Shen.type_func, function shen_user_lambda6927(Arg6735) {
  if (Arg6735.length < 4) return [Shen.type_func, shen_user_lambda6927, 4, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (((Shen.globals["shen.*spy*"]))
  ? (Shen.call(Shen.fns["shen.line"], []),
  Shen.call(Shen.fns["shen.show-p"], [Shen.call(Shen.fns["shen.deref"], [Arg6735_0, Arg6735_2])]),
  Shen.call(Shen.fns["nl"], [1]),
  Shen.call(Shen.fns["nl"], [1]),
  Shen.call(Shen.fns["shen.show-assumptions"], [Shen.call(Shen.fns["shen.deref"], [Arg6735_1, Arg6735_2]), 1]),
  Shen.call(Shen.fns["shen.prhush"], ["\x0a> ", Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.pause-for-user"], []),
  Shen.thaw(Arg6735_3))
  : Shen.thaw(Arg6735_3))}, 4, [], "shen.show"];

Shen.fns["shen.line"] = [Shen.type_func, function shen_user_lambda6928(Arg6735) {
  if (Arg6735.length < 0) return [Shen.type_func, shen_user_lambda6928, 0, Arg6735];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["inferences"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [("____________________________________________________________ " + Shen.call(Shen.fns["shen.app"], [R0, (" inference" + Shen.call(Shen.fns["shen.app"], [((Shen.unwind_tail(Shen.$eq$(1, R0)))
  ? ""
  : "s"), " \x0a?- ", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]])), Shen.call(Shen.fns["stoutput"], [])]);}))}, 0, [], "shen.line"];

Shen.fns["shen.show-p"] = [Shen.type_func, function shen_user_lambda6929(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6929, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (((Shen.is_type(Arg6735_0, Shen.type_cons) && (Shen.is_type(Arg6735_0[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], Arg6735_0[2][1])) && (Shen.is_type(Arg6735_0[2][2], Shen.type_cons) && Shen.empty$question$(Arg6735_0[2][2][2]))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg6735_0[1], (" : " + Shen.call(Shen.fns["shen.app"], [Arg6735_0[2][2][1], "", [Shen.type_symbol, "shen.r"]])), [Shen.type_symbol, "shen.r"]]), Shen.call(Shen.fns["stoutput"], [])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg6735_0, "", [Shen.type_symbol, "shen.r"]]), Shen.call(Shen.fns["stoutput"], [])]);}))}, 1, [], "shen.show-p"];

Shen.fns["shen.show-assumptions"] = [Shen.type_func, function shen_user_lambda6930(Arg6735) {
  if (Arg6735.length < 2) return [Shen.type_func, shen_user_lambda6930, 2, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((Shen.empty$question$(Arg6735_0))
  ? [Shen.type_symbol, "shen.skip"]
  : ((Shen.is_type(Arg6735_0, Shen.type_cons))
  ? (Shen.call(Shen.fns["shen.prhush"], [Shen.call(Shen.fns["shen.app"], [Arg6735_1, ". ", [Shen.type_symbol, "shen.a"]]), Shen.call(Shen.fns["stoutput"], [])]),
  Shen.call(Shen.fns["shen.show-p"], [Arg6735_0[1]]),
  Shen.call(Shen.fns["nl"], [1]),
  (function() {
  return Shen.call_tail(Shen.fns["shen.show-assumptions"], [Arg6735_0[2], (Arg6735_1 + 1)]);}))
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.show-assumptions"]]);})))}, 2, [], "shen.show-assumptions"];

Shen.fns["shen.pause-for-user"] = [Shen.type_func, function shen_user_lambda6931(Arg6735) {
  if (Arg6735.length < 0) return [Shen.type_func, shen_user_lambda6931, 0, Arg6735];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.read_byte(Shen.call(Shen.fns["stinput"], []))),
  ((Shen.unwind_tail(Shen.$eq$(R0, 94)))
  ? (function() {
  return Shen.simple_error("input aborted\x0a");})
  : (function() {
  return Shen.call_tail(Shen.fns["nl"], [1]);})))}, 0, [], "shen.pause-for-user"];

Shen.fns["shen.typedf?"] = [Shen.type_func, function shen_user_lambda6932(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6932, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return Shen.is_type(Shen.call(Shen.fns["assoc"], [Arg6735_0, (Shen.globals["shen.*signedfuncs*"])]), Shen.type_cons)}, 1, [], "shen.typedf?"];

Shen.fns["shen.sigf"] = [Shen.type_func, function shen_user_lambda6933(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6933, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "shen.type-signature-of-"], Arg6735_0]);})}, 1, [], "shen.sigf"];

Shen.fns["shen.placeholder"] = [Shen.type_func, function shen_user_lambda6934(Arg6735) {
  if (Arg6735.length < 0) return [Shen.type_func, shen_user_lambda6934, 0, Arg6735];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (function() {
  return Shen.call_tail(Shen.fns["gensym"], [[Shen.type_symbol, "&&"]]);})}, 0, [], "shen.placeholder"];

Shen.fns["shen.base"] = [Shen.type_func, function shen_user_lambda6935(Arg6735) {
  if (Arg6735.length < 4) return [Shen.type_func, shen_user_lambda6935, 4, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "number"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2])) == 'number'), Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "number"], Arg6735_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2])) == 'number'), Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6735_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "boolean"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.boolean$question$(Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2])), Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "boolean"], Arg6735_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.boolean$question$(Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2])), Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6735_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "string"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2])) == 'string'), Arg6735_2, Arg6735_3])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "string"], Arg6735_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [(typeof(Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2])) == 'string'), Arg6735_2, Arg6735_3]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6735_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "symbol"], R0)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["fwhen"], [Shen.is_type(Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2]), Shen.type_symbol), Arg6735_2, [Shen.type_func, function shen_user_lambda6937(Arg6936) {
  if (Arg6936.length < 4) return [Shen.type_func, shen_user_lambda6937, 4, Arg6936];
  var Arg6936_0 = Arg6936[0], Arg6936_1 = Arg6936[1], Arg6936_2 = Arg6936[2], Arg6936_3 = Arg6936[3];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [(!Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6936_0, Arg6936_3])])), Arg6936_3, Arg6936_2]);})}, 4, [Arg6735_0, Arg6735_1, Arg6735_3, Arg6735_2], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_symbol, "symbol"], Arg6735_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["fwhen"], [Shen.is_type(Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2]), Shen.type_symbol), Arg6735_2, [Shen.type_func, function shen_user_lambda6939(Arg6938) {
  if (Arg6938.length < 5) return [Shen.type_func, shen_user_lambda6939, 5, Arg6938];
  var Arg6938_0 = Arg6938[0], Arg6938_1 = Arg6938[1], Arg6938_2 = Arg6938[2], Arg6938_3 = Arg6938[3], Arg6938_4 = Arg6938[4];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [(!Shen.call(Shen.fns["shen.ue?"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6938_1, Arg6938_4])])), Arg6938_4, Arg6938_3]);})}, 5, [R0, Arg6735_0, Arg6735_1, Arg6735_3, Arg6735_2], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6735_2]),
  (R0 = R1))
  : (R0 = false)))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_2])),
  ((Shen.empty$question$(R0))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6735_2])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "list"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg6735_2])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? (R1[1],
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_2])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.thaw(Arg6735_3))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [], Arg6735_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6735_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_cons, R0, []], Arg6735_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6735_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R1]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R1, [Shen.type_symbol, "list"], Arg6735_2]),
  ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg6735_2])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? (R0[1],
  (R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg6735_2])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6735_3))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R0, [], Arg6735_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.unwind_tail(Shen.thaw(Arg6735_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6735_2]),
  (R0 = R2))
  : (R0 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? ((R2 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_cons, R2, []], Arg6735_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R2 = Shen.unwind_tail(Shen.thaw(Arg6735_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6735_2]),
  (R0 = R2))
  : (R0 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R1, Arg6735_2]),
  R0)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R0]))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.bindv"], [R0, [Shen.type_cons, [Shen.type_symbol, "list"], [Shen.type_cons, R1, []]], Arg6735_2]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6735_3)))),
  Shen.call(Shen.fns["shen.unbindv"], [R0, Arg6735_2]),
  R1)
  : false)))
  : false))
  : R0))
  : R0))
  : R0))
  : R0))}, 4, [], "shen.base"];

Shen.fns["shen.by_hypothesis"] = [Shen.type_func, function shen_user_lambda6940(Arg6735) {
  if (Arg6735.length < 5) return [Shen.type_func, shen_user_lambda6940, 5, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3], Arg6735_4 = Arg6735[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_2, Arg6735_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6735_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg6735_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R0 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["identical"], [Arg6735_0, R1, Arg6735_3, [Shen.type_func, function shen_user_lambda6942(Arg6941) {
  if (Arg6941.length < 7) return [Shen.type_func, shen_user_lambda6942, 7, Arg6941];
  var Arg6941_0 = Arg6941[0], Arg6941_1 = Arg6941[1], Arg6941_2 = Arg6941[2], Arg6941_3 = Arg6941[3], Arg6941_4 = Arg6941[4], Arg6941_5 = Arg6941[5], Arg6941_6 = Arg6941[6];
  return (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6941_4, Arg6941_1, Arg6941_5, Arg6941_6]);})}, 7, [R1, R0, Arg6735_2, Arg6735_0, Arg6735_1, Arg6735_3, Arg6735_4], undefined]])))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false)))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_2, Arg6735_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.by_hypothesis"], [Arg6735_0, Arg6735_1, R0, Arg6735_3, Arg6735_4]);}))
  : false))
  : R0))}, 5, [], "shen.by_hypothesis"];

Shen.fns["shen.t*-def"] = [Shen.type_func, function shen_user_lambda6943(Arg6735) {
  if (Arg6735.length < 5) return [Shen.type_func, shen_user_lambda6943, 5, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3], Arg6735_4 = Arg6735[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "define"], R1)))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R0[2], Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R0 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.newpv"], [Arg6735_3]),
  Shen.call(Shen.fns["shen.newpv"], [Arg6735_3]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defh"], [Shen.call(Shen.fns["compile"], [[Shen.type_func, function shen_user_lambda6945(Arg6944) {
  if (Arg6944.length < 1) return [Shen.type_func, shen_user_lambda6945, 1, Arg6944];
  var Arg6944_0 = Arg6944[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.<sig+rules>"], [Arg6944_0]);})}, 1, [], undefined], R1, [Shen.type_func, function shen_user_lambda6947(Arg6946) {
  if (Arg6946.length < 1) return [Shen.type_func, shen_user_lambda6947, 1, Arg6946];
  var Arg6946_0 = Arg6946[0];
  return ((Shen.is_type(Arg6946_0, Shen.type_cons))
  ? (function() {
  return Shen.simple_error(("parse error here: " + Shen.call(Shen.fns["shen.app"], [Arg6946_0, "\x0a", [Shen.type_symbol, "shen.s"]])));})
  : (function() {
  return Shen.simple_error("parse error\x0a");}))}, 1, [], undefined]]), R0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4]);}))
  : false))
  : false))
  : false))}, 5, [], "shen.t*-def"];

Shen.fns["shen.t*-defh"] = [Shen.type_func, function shen_user_lambda6948(Arg6735) {
  if (Arg6735.length < 6) return [Shen.type_func, shen_user_lambda6948, 6, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3], Arg6735_4 = Arg6735[4], Arg6735_5 = Arg6735[5];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_4])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-defhh"], [R1, Shen.call(Shen.fns["shen.ue-sig"], [R1]), Arg6735_1, Arg6735_2, Arg6735_3, R0, Arg6735_4, Arg6735_5]);}))
  : false))}, 6, [], "shen.t*-defh"];

Shen.fns["shen.t*-defhh"] = [Shen.type_func, function shen_user_lambda6949(Arg6735) {
  if (Arg6735.length < 8) return [Shen.type_func, shen_user_lambda6949, 8, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3], Arg6735_4 = Arg6735[4], Arg6735_5 = Arg6735[5], Arg6735_6 = Arg6735[6], Arg6735_7 = Arg6735[7];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg6735_5, Arg6735_1, 1, Arg6735_2, [Shen.type_cons, [Shen.type_cons, Arg6735_2, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6735_1, []]]], Arg6735_4], Arg6735_6, [Shen.type_func, function shen_user_lambda6951(Arg6950) {
  if (Arg6950.length < 8) return [Shen.type_func, shen_user_lambda6951, 8, Arg6950];
  var Arg6950_0 = Arg6950[0], Arg6950_1 = Arg6950[1], Arg6950_2 = Arg6950[2], Arg6950_3 = Arg6950[3], Arg6950_4 = Arg6950[4], Arg6950_5 = Arg6950[5], Arg6950_6 = Arg6950[6], Arg6950_7 = Arg6950[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.memo"], [Arg6950_3, Arg6950_4, Arg6950_5, Arg6950_6, Arg6950_7]);})}, 8, [Arg6735_5, Arg6735_1, Arg6735_4, Arg6735_2, Arg6735_0, Arg6735_3, Arg6735_6, Arg6735_7], undefined]]);}))}, 8, [], "shen.t*-defhh"];

Shen.fns["shen.memo"] = [Shen.type_func, function shen_user_lambda6952(Arg6735) {
  if (Arg6735.length < 5) return [Shen.type_func, shen_user_lambda6952, 5, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3], Arg6735_4 = Arg6735[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["unify!"], [Arg6735_2, Arg6735_1, Arg6735_3, [Shen.type_func, function shen_user_lambda6954(Arg6953) {
  if (Arg6953.length < 6) return [Shen.type_func, shen_user_lambda6954, 6, Arg6953];
  var Arg6953_0 = Arg6953[0], Arg6953_1 = Arg6953[1], Arg6953_2 = Arg6953[2], Arg6953_3 = Arg6953[3], Arg6953_4 = Arg6953[4], Arg6953_5 = Arg6953[5];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6953_1, Shen.call(Shen.fns["declare"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6953_2, Arg6953_4]), Shen.call(Shen.fns["shen.lazyderef"], [Arg6953_3, Arg6953_4])]), Arg6953_4, Arg6953_5]);})}, 6, [Arg6735_1, R0, Arg6735_0, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]);}))}, 5, [], "shen.memo"];

Shen.fns["shen.<sig+rules>"] = [Shen.type_func, function shen_user_lambda6955(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6955, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.<signature>"], [Arg6735_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<non-ll-rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]);})
  : Shen.fail_obj))
  : Shen.fail_obj))}, 1, [], "shen.<sig+rules>"];

Shen.fns["shen.<non-ll-rules>"] = [Shen.type_func, function shen_user_lambda6956(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6956, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (((R0 = Shen.call(Shen.fns["shen.<rule>"], [Arg6735_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? ((R1 = Shen.call(Shen.fns["shen.<non-ll-rules>"], [R0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R1))))
  ? (R0 = Shen.call(Shen.fns["shen.pair"], [R1[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), Shen.call(Shen.fns["shen.hdtl"], [R1])]]))
  : (R0 = Shen.fail_obj)))
  : (R0 = Shen.fail_obj))),
  ((Shen.unwind_tail(Shen.$eq$(R0, Shen.fail_obj)))
  ? ((R0 = Shen.call(Shen.fns["shen.<rule>"], [Arg6735_0])),
  (((!Shen.unwind_tail(Shen.$eq$(Shen.fail_obj, R0))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.pair"], [R0[1], [Shen.type_cons, Shen.call(Shen.fns["shen.hdtl"], [R0]), []]]);})
  : Shen.fail_obj))
  : R0))}, 1, [], "shen.<non-ll-rules>"];

Shen.fns["shen.ue"] = [Shen.type_func, function shen_user_lambda6957(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6957, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (((Shen.is_type(Arg6735_0, Shen.type_cons) && (Shen.is_type(Arg6735_0[2], Shen.type_cons) && (Shen.empty$question$(Arg6735_0[2][2]) && Shen.unwind_tail(Shen.$eq$(Arg6735_0[1], [Shen.type_symbol, "protect"]))))))
  ? Arg6735_0
  : ((Shen.is_type(Arg6735_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6959(Arg6958) {
  if (Arg6958.length < 1) return [Shen.type_func, shen_user_lambda6959, 1, Arg6958];
  var Arg6958_0 = Arg6958[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.ue"], [Arg6958_0]);})}, 1, [], undefined], Arg6735_0]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg6735_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "&&"], Arg6735_0]);})
  : Arg6735_0)))}, 1, [], "shen.ue"];

Shen.fns["shen.ue-sig"] = [Shen.type_func, function shen_user_lambda6960(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6960, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((Shen.is_type(Arg6735_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["map"], [[Shen.type_func, function shen_user_lambda6962(Arg6961) {
  if (Arg6961.length < 1) return [Shen.type_func, shen_user_lambda6962, 1, Arg6961];
  var Arg6961_0 = Arg6961[0];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.ue-sig"], [Arg6961_0]);})}, 1, [], undefined], Arg6735_0]);})
  : ((Shen.call(Shen.fns["variable?"], [Arg6735_0]))
  ? (function() {
  return Shen.call_tail(Shen.fns["concat"], [[Shen.type_symbol, "&&&"], Arg6735_0]);})
  : Arg6735_0))}, 1, [], "shen.ue-sig"];

Shen.fns["shen.ues"] = [Shen.type_func, function shen_user_lambda6963(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6963, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((Shen.call(Shen.fns["shen.ue?"], [Arg6735_0]))
  ? [Shen.type_cons, Arg6735_0, []]
  : ((Shen.is_type(Arg6735_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.ues"], [Arg6735_0[1]]), Shen.call(Shen.fns["shen.ues"], [Arg6735_0[2]])]);})
  : []))}, 1, [], "shen.ues"];

Shen.fns["shen.ue?"] = [Shen.type_func, function shen_user_lambda6964(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6964, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (Shen.is_type(Arg6735_0, Shen.type_symbol) && Shen.call(Shen.fns["shen.ue-h?"], [Shen.str(Arg6735_0)]))}, 1, [], "shen.ue?"];

Shen.fns["shen.ue-h?"] = [Shen.type_func, function shen_user_lambda6965(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6965, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (((Shen.call(Shen.fns["shen.+string?"], [Arg6735_0]) && (Shen.unwind_tail(Shen.$eq$("&", Arg6735_0[0])) && (Shen.call(Shen.fns["shen.+string?"], [Shen.tlstr(Arg6735_0)]) && Shen.unwind_tail(Shen.$eq$("&", Shen.tlstr(Arg6735_0)[0]))))))
  ? true
  : false)}, 1, [], "shen.ue-h?"];

Shen.fns["shen.t*-rules"] = [Shen.type_func, function shen_user_lambda6966(Arg6735) {
  if (Arg6735.length < 7) return [Shen.type_func, shen_user_lambda6966, 7, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3], Arg6735_4 = Arg6735[4], Arg6735_5 = Arg6735[5], Arg6735_6 = Arg6735[6];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_5])),
  ((Shen.empty$question$(R1))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.unwind_tail(Shen.thaw(Arg6735_6))))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_5])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = R1[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["shen.t*-rule"], [Shen.call(Shen.fns["shen.ue"], [R2]), Arg6735_1, Arg6735_4, Arg6735_5, [Shen.type_func, function shen_user_lambda6968(Arg6967) {
  if (Arg6967.length < 13) return [Shen.type_func, shen_user_lambda6968, 13, Arg6967];
  var Arg6967_0 = Arg6967[0], Arg6967_1 = Arg6967[1], Arg6967_2 = Arg6967[2], Arg6967_3 = Arg6967[3], Arg6967_4 = Arg6967[4], Arg6967_5 = Arg6967[5], Arg6967_6 = Arg6967[6], Arg6967_7 = Arg6967[7], Arg6967_8 = Arg6967[8], Arg6967_9 = Arg6967[9], Arg6967_10 = Arg6967[10], Arg6967_11 = Arg6967[11], Arg6967_12 = Arg6967[12];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6967_1, Arg6967_7, [Shen.type_func, function shen_user_lambda6970(Arg6969) {
  if (Arg6969.length < 8) return [Shen.type_func, shen_user_lambda6970, 8, Arg6969];
  var Arg6969_0 = Arg6969[0], Arg6969_1 = Arg6969[1], Arg6969_2 = Arg6969[2], Arg6969_3 = Arg6969[3], Arg6969_4 = Arg6969[4], Arg6969_5 = Arg6969[5], Arg6969_6 = Arg6969[6], Arg6969_7 = Arg6969[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-rules"], [Arg6969_1, Arg6969_2, (Arg6969_3 + 1), Arg6969_4, Arg6969_5, Arg6969_6, Arg6969_7]);})}, 8, [Arg6967_1, Arg6967_2, Arg6967_3, Arg6967_4, Arg6967_5, Arg6967_6, Arg6967_7, Arg6967_8], undefined]]);})}, 13, [R2, R0, R1, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4, Arg6735_5, Arg6735_6, Arg6735_2, Arg6735_3, Arg6735_5, Arg6735_6], undefined]])))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_5])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["bind"], [R1, Shen.simple_error(("type error in rule " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_2, Arg6735_5]), (" of " + Shen.call(Shen.fns["shen.app"], [Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_3, Arg6735_5]), "", [Shen.type_symbol, "shen.a"]])), [Shen.type_symbol, "shen.a"]]))), Arg6735_5, Arg6735_6]))
  : R1))
  : R1))]);}))}, 7, [], "shen.t*-rules"];

Shen.fns["shen.t*-rule"] = [Shen.type_func, function shen_user_lambda6971(Arg6735) {
  if (Arg6735.length < 5) return [Shen.type_func, shen_user_lambda6971, 5, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3], Arg6735_4 = Arg6735[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = R1[1]),
  (R1 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.empty$question$(R1))
  ? ((R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.newhyps"], [Shen.call(Shen.fns["shen.placeholders"], [R2]), Arg6735_2, R1, Arg6735_3, [Shen.type_func, function shen_user_lambda6973(Arg6972) {
  if (Arg6972.length < 8) return [Shen.type_func, shen_user_lambda6973, 8, Arg6972];
  var Arg6972_0 = Arg6972[0], Arg6972_1 = Arg6972[1], Arg6972_2 = Arg6972[2], Arg6972_3 = Arg6972[3], Arg6972_4 = Arg6972[4], Arg6972_5 = Arg6972[5], Arg6972_6 = Arg6972[6], Arg6972_7 = Arg6972[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-patterns"], [Arg6972_3, Arg6972_4, Arg6972_0, Arg6972_6, [Shen.type_func, function shen_user_lambda6975(Arg6974) {
  if (Arg6974.length < 8) return [Shen.type_func, shen_user_lambda6975, 8, Arg6974];
  var Arg6974_0 = Arg6974[0], Arg6974_1 = Arg6974[1], Arg6974_2 = Arg6974[2], Arg6974_3 = Arg6974[3], Arg6974_4 = Arg6974[4], Arg6974_5 = Arg6974[5], Arg6974_6 = Arg6974[6], Arg6974_7 = Arg6974[7];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg6974_1, Arg6974_6, [Shen.type_func, function shen_user_lambda6977(Arg6976) {
  if (Arg6976.length < 7) return [Shen.type_func, shen_user_lambda6977, 7, Arg6976];
  var Arg6976_0 = Arg6976[0], Arg6976_1 = Arg6976[1], Arg6976_2 = Arg6976[2], Arg6976_3 = Arg6976[3], Arg6976_4 = Arg6976[4], Arg6976_5 = Arg6976[5], Arg6976_6 = Arg6976[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [Shen.call(Shen.fns["shen.curry"], [Shen.call(Shen.fns["shen.ue"], [Arg6976_1])]), Shen.call(Shen.fns["shen.result-type"], [Arg6976_2, Arg6976_3]), Shen.call(Shen.fns["shen.patthyps"], [Arg6976_2, Arg6976_3, Arg6976_4]), Arg6976_5, Arg6976_6]);})}, 7, [Arg6974_1, Arg6974_2, Arg6974_3, Arg6974_4, Arg6974_5, Arg6974_6, Arg6974_7], undefined]]);})}, 8, [Arg6972_0, Arg6972_1, Arg6972_2, Arg6972_3, Arg6972_4, Arg6972_5, Arg6972_6, Arg6972_7], undefined]]);})}, 8, [R1, R0, R3, R2, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]))
  : false))
  : false))
  : false))]);}))}, 5, [], "shen.t*-rule"];

Shen.fns["shen.placeholders"] = [Shen.type_func, function shen_user_lambda6978(Arg6735) {
  if (Arg6735.length < 1) return [Shen.type_func, shen_user_lambda6978, 1, Arg6735];
  var Arg6735_0 = Arg6735[0];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((Shen.call(Shen.fns["shen.ue?"], [Arg6735_0]))
  ? [Shen.type_cons, Arg6735_0, []]
  : ((Shen.is_type(Arg6735_0, Shen.type_cons))
  ? (function() {
  return Shen.call_tail(Shen.fns["union"], [Shen.call(Shen.fns["shen.placeholders"], [Arg6735_0[1]]), Shen.call(Shen.fns["shen.placeholders"], [Arg6735_0[2]])]);})
  : []))}, 1, [], "shen.placeholders"];

Shen.fns["shen.newhyps"] = [Shen.type_func, function shen_user_lambda6979(Arg6735) {
  if (Arg6735.length < 5) return [Shen.type_func, shen_user_lambda6979, 5, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3], Arg6735_4 = Arg6735[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["unify!"], [Arg6735_2, Arg6735_1, Arg6735_3, Arg6735_4])))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_2, Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6735_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = R3[1]),
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, ":"], R5)))
  ? ((R5 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_3])),
  ((Shen.is_type(R5, Shen.type_cons))
  ? (R5[1],
  (R5 = Shen.call(Shen.fns["shen.lazyderef"], [R5[2], Arg6735_3])),
  ((Shen.empty$question$(R5))
  ? ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["unify!"], [R4, R1, Arg6735_3, [Shen.type_func, function shen_user_lambda6981(Arg6980) {
  if (Arg6980.length < 7) return [Shen.type_func, shen_user_lambda6981, 7, Arg6980];
  var Arg6980_0 = Arg6980[0], Arg6980_1 = Arg6980[1], Arg6980_2 = Arg6980[2], Arg6980_3 = Arg6980[3], Arg6980_4 = Arg6980[4], Arg6980_5 = Arg6980[5], Arg6980_6 = Arg6980[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.newhyps"], [Arg6980_2, Arg6980_3, Arg6980_4, Arg6980_5, Arg6980_6]);})}, 7, [R4, R1, R0, Arg6735_1, R5, Arg6735_3, Arg6735_4], undefined]]);}))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [], Arg6735_3]),
  ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6735_3, [Shen.type_func, function shen_user_lambda6983(Arg6982) {
  if (Arg6982.length < 9) return [Shen.type_func, shen_user_lambda6983, 9, Arg6982];
  var Arg6982_0 = Arg6982[0], Arg6982_1 = Arg6982[1], Arg6982_2 = Arg6982[2], Arg6982_3 = Arg6982[3], Arg6982_4 = Arg6982[4], Arg6982_5 = Arg6982[5], Arg6982_6 = Arg6982[6], Arg6982_7 = Arg6982[7], Arg6982_8 = Arg6982[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.newhyps"], [Arg6982_2, Arg6982_3, Arg6982_4, Arg6982_5, Arg6982_6]);})}, 9, [R4, R1, R0, Arg6735_1, R3, Arg6735_3, Arg6735_4, R5, Arg6735_3], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_3]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_cons, R3, []], Arg6735_3]),
  ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6735_3, [Shen.type_func, function shen_user_lambda6985(Arg6984) {
  if (Arg6984.length < 9) return [Shen.type_func, shen_user_lambda6985, 9, Arg6984];
  var Arg6984_0 = Arg6984[0], Arg6984_1 = Arg6984[1], Arg6984_2 = Arg6984[2], Arg6984_3 = Arg6984[3], Arg6984_4 = Arg6984[4], Arg6984_5 = Arg6984[5], Arg6984_6 = Arg6984[6], Arg6984_7 = Arg6984[7], Arg6984_8 = Arg6984[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.newhyps"], [Arg6984_2, Arg6984_3, Arg6984_4, Arg6984_5, Arg6984_6]);})}, 9, [R4, R1, R0, Arg6735_1, R3, Arg6735_3, Arg6735_4, R5, Arg6735_3], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_3]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R5]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R5, [Shen.type_symbol, ":"], Arg6735_3]),
  ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? (R3[1],
  (R3 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_3])),
  ((Shen.empty$question$(R3))
  ? ((R3 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6735_3, [Shen.type_func, function shen_user_lambda6987(Arg6986) {
  if (Arg6986.length < 9) return [Shen.type_func, shen_user_lambda6987, 9, Arg6986];
  var Arg6986_0 = Arg6986[0], Arg6986_1 = Arg6986[1], Arg6986_2 = Arg6986[2], Arg6986_3 = Arg6986[3], Arg6986_4 = Arg6986[4], Arg6986_5 = Arg6986[5], Arg6986_6 = Arg6986[6], Arg6986_7 = Arg6986[7], Arg6986_8 = Arg6986[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.newhyps"], [Arg6986_2, Arg6986_3, Arg6986_4, Arg6986_5, Arg6986_6]);})}, 9, [R4, R1, R0, Arg6735_1, R3, Arg6735_3, Arg6735_4, R5, Arg6735_3], undefined]])))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? (Shen.call(Shen.fns["shen.bindv"], [R3, [], Arg6735_3]),
  ((R2 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R4 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6735_3, [Shen.type_func, function shen_user_lambda6989(Arg6988) {
  if (Arg6988.length < 11) return [Shen.type_func, shen_user_lambda6989, 11, Arg6988];
  var Arg6988_0 = Arg6988[0], Arg6988_1 = Arg6988[1], Arg6988_2 = Arg6988[2], Arg6988_3 = Arg6988[3], Arg6988_4 = Arg6988[4], Arg6988_5 = Arg6988[5], Arg6988_6 = Arg6988[6], Arg6988_7 = Arg6988[7], Arg6988_8 = Arg6988[8], Arg6988_9 = Arg6988[9], Arg6988_10 = Arg6988[10];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.newhyps"], [Arg6988_2, Arg6988_3, Arg6988_4, Arg6988_5, Arg6988_6]);})}, 11, [R4, R1, R0, Arg6735_1, R2, Arg6735_3, Arg6735_4, R3, Arg6735_3, R5, Arg6735_3], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_3]),
  (R4 = R4))
  : (R4 = false))))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R6 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, R6, []], Arg6735_3]),
  ((R6 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R6 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6735_3, [Shen.type_func, function shen_user_lambda6991(Arg6990) {
  if (Arg6990.length < 11) return [Shen.type_func, shen_user_lambda6991, 11, Arg6990];
  var Arg6990_0 = Arg6990[0], Arg6990_1 = Arg6990[1], Arg6990_2 = Arg6990[2], Arg6990_3 = Arg6990[3], Arg6990_4 = Arg6990[4], Arg6990_5 = Arg6990[5], Arg6990_6 = Arg6990[6], Arg6990_7 = Arg6990[7], Arg6990_8 = Arg6990[8], Arg6990_9 = Arg6990[9], Arg6990_10 = Arg6990[10];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.newhyps"], [Arg6990_2, Arg6990_3, Arg6990_4, Arg6990_5, Arg6990_6]);})}, 11, [R4, R1, R0, Arg6735_1, R6, Arg6735_3, Arg6735_4, R3, Arg6735_3, R5, Arg6735_3], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_3]),
  (R4 = R6))
  : (R4 = false)))),
  Shen.call(Shen.fns["shen.unbindv"], [R5, Arg6735_3]),
  R4)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]], Arg6735_3]),
  ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6735_3, [Shen.type_func, function shen_user_lambda6993(Arg6992) {
  if (Arg6992.length < 9) return [Shen.type_func, shen_user_lambda6993, 9, Arg6992];
  var Arg6992_0 = Arg6992[0], Arg6992_1 = Arg6992[1], Arg6992_2 = Arg6992[2], Arg6992_3 = Arg6992[3], Arg6992_4 = Arg6992[4], Arg6992_5 = Arg6992[5], Arg6992_6 = Arg6992[6], Arg6992_7 = Arg6992[7], Arg6992_8 = Arg6992[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.newhyps"], [Arg6992_2, Arg6992_3, Arg6992_4, Arg6992_5, Arg6992_6]);})}, 9, [R4, R1, R0, Arg6735_1, R5, Arg6735_3, Arg6735_4, R3, Arg6735_3], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_3]),
  R5)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R3]))
  ? ((R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R3, [Shen.type_cons, R4, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R5, []]]], Arg6735_3]),
  ((R5 = R2[2]),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R4, R1, Arg6735_3, [Shen.type_func, function shen_user_lambda6995(Arg6994) {
  if (Arg6994.length < 9) return [Shen.type_func, shen_user_lambda6995, 9, Arg6994];
  var Arg6994_0 = Arg6994[0], Arg6994_1 = Arg6994[1], Arg6994_2 = Arg6994[2], Arg6994_3 = Arg6994[3], Arg6994_4 = Arg6994[4], Arg6994_5 = Arg6994[5], Arg6994_6 = Arg6994[6], Arg6994_7 = Arg6994[7], Arg6994_8 = Arg6994[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.newhyps"], [Arg6994_2, Arg6994_3, Arg6994_4, Arg6994_5, Arg6994_6]);})}, 9, [R4, R1, R0, Arg6735_1, R5, Arg6735_3, Arg6735_4, R3, Arg6735_3], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R3, Arg6735_3]),
  R5)
  : false)))
  : ((Shen.call(Shen.fns["shen.pvar?"], [R2]))
  ? ((R3 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R4 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R5 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.bindv"], [R2, [Shen.type_cons, [Shen.type_cons, R3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R4, []]]], R5], Arg6735_3]),
  (Shen.call(Shen.fns["shen.incinfs"], []),
  (R5 = Shen.call(Shen.fns["unify!"], [R3, R1, Arg6735_3, [Shen.type_func, function shen_user_lambda6997(Arg6996) {
  if (Arg6996.length < 9) return [Shen.type_func, shen_user_lambda6997, 9, Arg6996];
  var Arg6996_0 = Arg6996[0], Arg6996_1 = Arg6996[1], Arg6996_2 = Arg6996[2], Arg6996_3 = Arg6996[3], Arg6996_4 = Arg6996[4], Arg6996_5 = Arg6996[5], Arg6996_6 = Arg6996[6], Arg6996_7 = Arg6996[7], Arg6996_8 = Arg6996[8];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.newhyps"], [Arg6996_3, Arg6996_4, Arg6996_5, Arg6996_8, Arg6996_6]);})}, 9, [R4, R3, R1, R0, Arg6735_1, R5, Arg6735_4, R2, Arg6735_3], undefined]]))),
  Shen.call(Shen.fns["shen.unbindv"], [R2, Arg6735_3]),
  R5)
  : false)))
  : false))
  : R0))}, 5, [], "shen.newhyps"];

Shen.fns["shen.patthyps"] = [Shen.type_func, function shen_user_lambda6998(Arg6735) {
  if (Arg6735.length < 3) return [Shen.type_func, shen_user_lambda6998, 3, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((Shen.empty$question$(Arg6735_0))
  ? Arg6735_2
  : (((Shen.is_type(Arg6735_0, Shen.type_cons) && (Shen.is_type(Arg6735_1, Shen.type_cons) && (Shen.is_type(Arg6735_1[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6735_1[2][1])) && (Shen.is_type(Arg6735_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg6735_1[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["adjoin"], [[Shen.type_cons, Arg6735_0[1], [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6735_1[1], []]]], Shen.call(Shen.fns["shen.patthyps"], [Arg6735_0[2], Arg6735_1[2][2][1], Arg6735_2])]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.patthyps"]]);})))}, 3, [], "shen.patthyps"];

Shen.fns["shen.result-type"] = [Shen.type_func, function shen_user_lambda6999(Arg6735) {
  if (Arg6735.length < 2) return [Shen.type_func, shen_user_lambda6999, 2, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (((Shen.empty$question$(Arg6735_0) && (Shen.is_type(Arg6735_1, Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6735_1[1])) && (Shen.is_type(Arg6735_1[2], Shen.type_cons) && Shen.empty$question$(Arg6735_1[2][2]))))))
  ? Arg6735_1[2][1]
  : ((Shen.empty$question$(Arg6735_0))
  ? Arg6735_1
  : (((Shen.is_type(Arg6735_0, Shen.type_cons) && (Shen.is_type(Arg6735_1, Shen.type_cons) && (Shen.is_type(Arg6735_1[2], Shen.type_cons) && (Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], Arg6735_1[2][1])) && (Shen.is_type(Arg6735_1[2][2], Shen.type_cons) && Shen.empty$question$(Arg6735_1[2][2][2])))))))
  ? (function() {
  return Shen.call_tail(Shen.fns["shen.result-type"], [Arg6735_0[2], Arg6735_1[2][2][1]]);})
  : (function() {
  return Shen.call_tail(Shen.fns["shen.f_error"], [[Shen.type_symbol, "shen.result-type"]]);}))))}, 2, [], "shen.result-type"];

Shen.fns["shen.t*-patterns"] = [Shen.type_func, function shen_user_lambda7000(Arg6735) {
  if (Arg6735.length < 5) return [Shen.type_func, shen_user_lambda7000, 5, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3], Arg6735_4 = Arg6735[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return (((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.empty$question$(R0))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.unwind_tail(Shen.thaw(Arg6735_4))))
  : (R0 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? ((R0 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R0, Shen.type_cons))
  ? ((R1 = R0[1]),
  (R0 = R0[2]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_1, Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "-->"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R2 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6735_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, R1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, R3, []]]], Arg6735_2, Arg6735_3, [Shen.type_func, function shen_user_lambda7002(Arg7001) {
  if (Arg7001.length < 7) return [Shen.type_func, shen_user_lambda7002, 7, Arg7001];
  var Arg7001_0 = Arg7001[0], Arg7001_1 = Arg7001[1], Arg7001_2 = Arg7001[2], Arg7001_3 = Arg7001[3], Arg7001_4 = Arg7001[4], Arg7001_5 = Arg7001[5], Arg7001_6 = Arg7001[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-patterns"], [Arg7001_2, Arg7001_3, Arg7001_4, Arg7001_5, Arg7001_6]);})}, 7, [R1, R3, R0, R2, Arg6735_2, Arg6735_3, Arg6735_4], undefined]]);}))
  : false))
  : false))
  : false))
  : false))
  : false))
  : false))
  : R0))}, 5, [], "shen.t*-patterns"];

Shen.fns["shen.t*-action"] = [Shen.type_func, function shen_user_lambda7003(Arg6735) {
  if (Arg6735.length < 5) return [Shen.type_func, shen_user_lambda7003, 5, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3], Arg6735_4 = Arg6735[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.catchpoint"], [])),
  (function() {
  return Shen.call_tail(Shen.fns["shen.cutpoint"], [R0, (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "where"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R3 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, [Shen.type_func, function shen_user_lambda7005(Arg7004) {
  if (Arg7004.length < 8) return [Shen.type_func, shen_user_lambda7005, 8, Arg7004];
  var Arg7004_0 = Arg7004[0], Arg7004_1 = Arg7004[1], Arg7004_2 = Arg7004[2], Arg7004_3 = Arg7004[3], Arg7004_4 = Arg7004[4], Arg7004_5 = Arg7004[5], Arg7004_6 = Arg7004[6], Arg7004_7 = Arg7004[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*"], [[Shen.type_cons, Arg7004_1, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "boolean"], []]]], Arg7004_5, Arg7004_6, [Shen.type_func, function shen_user_lambda7007(Arg7006) {
  if (Arg7006.length < 7) return [Shen.type_func, shen_user_lambda7007, 7, Arg7006];
  var Arg7006_0 = Arg7006[0], Arg7006_1 = Arg7006[1], Arg7006_2 = Arg7006[2], Arg7006_3 = Arg7006[3], Arg7006_4 = Arg7006[4], Arg7006_5 = Arg7006[5], Arg7006_6 = Arg7006[6];
  return (function() {
  return Shen.call_tail(Shen.fns["cut"], [Arg7006_0, Arg7006_5, [Shen.type_func, function shen_user_lambda7009(Arg7008) {
  if (Arg7008.length < 7) return [Shen.type_func, shen_user_lambda7009, 7, Arg7008];
  var Arg7008_0 = Arg7008[0], Arg7008_1 = Arg7008[1], Arg7008_2 = Arg7008[2], Arg7008_3 = Arg7008[3], Arg7008_4 = Arg7008[4], Arg7008_5 = Arg7008[5], Arg7008_6 = Arg7008[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [Arg7008_1, Arg7008_2, [Shen.type_cons, [Shen.type_cons, Arg7008_3, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, [Shen.type_symbol, "verified"], []]]], Arg7008_4], Arg7008_5, Arg7008_6]);})}, 7, [Arg7006_0, Arg7006_1, Arg7006_2, Arg7006_3, Arg7006_4, Arg7006_5, Arg7006_6], undefined]]);})}, 7, [Arg7004_2, Arg7004_0, Arg7004_4, Arg7004_1, Arg7004_5, Arg7004_6, Arg7004_7], undefined]]);})}, 8, [R3, R1, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = Shen.call(Shen.fns["shen.lazyderef"], [R2[1], Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R3 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.is_type(R3, Shen.type_cons))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "fail-if"], R4)))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R3[2], Arg6735_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R3 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6735_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R4, Shen.type_cons))
  ? ((R1 = R4[1]),
  (R4 = Shen.call(Shen.fns["shen.lazyderef"], [R4[2], Arg6735_3])),
  ((Shen.empty$question$(R4))
  ? ((R4 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R4))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, [Shen.type_func, function shen_user_lambda7011(Arg7010) {
  if (Arg7010.length < 8) return [Shen.type_func, shen_user_lambda7011, 8, Arg7010];
  var Arg7010_0 = Arg7010[0], Arg7010_1 = Arg7010[1], Arg7010_2 = Arg7010[2], Arg7010_3 = Arg7010[3], Arg7010_4 = Arg7010[4], Arg7010_5 = Arg7010[5], Arg7010_6 = Arg7010[6], Arg7010_7 = Arg7010[7];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [[Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, Arg7010_0, [Shen.type_cons, Arg7010_1, []]], []]], [Shen.type_cons, Arg7010_1, []]]], Arg7010_4, Arg7010_5, Arg7010_6, Arg7010_7]);})}, 8, [R3, R1, R0, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (((R1 = Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_0, Arg6735_3])),
  ((Shen.is_type(R1, Shen.type_cons))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[1], Arg6735_3])),
  ((Shen.unwind_tail(Shen.$eq$([Shen.type_symbol, "shen.choicepoint!"], R2)))
  ? ((R2 = Shen.call(Shen.fns["shen.lazyderef"], [R1[2], Arg6735_3])),
  ((Shen.is_type(R2, Shen.type_cons))
  ? ((R1 = R2[1]),
  (R2 = Shen.call(Shen.fns["shen.lazyderef"], [R2[2], Arg6735_3])),
  ((Shen.empty$question$(R2))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (R1 = Shen.call(Shen.fns["cut"], [R0, Arg6735_3, [Shen.type_func, function shen_user_lambda7013(Arg7012) {
  if (Arg7012.length < 7) return [Shen.type_func, shen_user_lambda7013, 7, Arg7012];
  var Arg7012_0 = Arg7012[0], Arg7012_1 = Arg7012[1], Arg7012_2 = Arg7012[2], Arg7012_3 = Arg7012[3], Arg7012_4 = Arg7012[4], Arg7012_5 = Arg7012[5], Arg7012_6 = Arg7012[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.t*-action"], [[Shen.type_cons, [Shen.type_symbol, "where"], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "not"], [Shen.type_cons, [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "="], [Shen.type_cons, Arg7012_1, []]], [Shen.type_cons, [Shen.type_cons, [Shen.type_symbol, "fail"], []], []]], []]], [Shen.type_cons, Arg7012_1, []]]], Arg7012_3, Arg7012_4, Arg7012_5, Arg7012_6]);})}, 7, [R0, R1, Arg6735_0, Arg6735_1, Arg6735_2, Arg6735_3, Arg6735_4], undefined]])))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false)))
  : (R1 = false))),
  ((Shen.unwind_tail(Shen.$eq$(R1, false)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  Shen.call(Shen.fns["shen.t*"], [[Shen.type_cons, Arg6735_0, [Shen.type_cons, [Shen.type_symbol, ":"], [Shen.type_cons, Arg6735_1, []]]], Arg6735_2, Arg6735_3, Arg6735_4]))
  : R1))
  : R1))
  : R1))]);}))}, 5, [], "shen.t*-action"];

Shen.fns["findall"] = [Shen.type_func, function shen_user_lambda7014(Arg6735) {
  if (Arg6735.length < 5) return [Shen.type_func, shen_user_lambda7014, 5, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3], Arg6735_4 = Arg6735[4];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  (R1 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_3])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R1, Shen.call(Shen.fns["gensym"], [[Shen.type_symbol, "shen.a"]]), Arg6735_3, [Shen.type_func, function shen_user_lambda7016(Arg7015) {
  if (Arg7015.length < 7) return [Shen.type_func, shen_user_lambda7016, 7, Arg7015];
  var Arg7015_0 = Arg7015[0], Arg7015_1 = Arg7015[1], Arg7015_2 = Arg7015[2], Arg7015_3 = Arg7015[3], Arg7015_4 = Arg7015[4], Arg7015_5 = Arg7015[5], Arg7015_6 = Arg7015[6];
  return (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg7015_0, (Shen.globals[Shen.call(Shen.fns["shen.lazyderef"], [Arg7015_4, Arg7015_5])[1]] = []), Arg7015_5, [Shen.type_func, function shen_user_lambda7018(Arg7017) {
  if (Arg7017.length < 7) return [Shen.type_func, shen_user_lambda7018, 7, Arg7017];
  var Arg7017_0 = Arg7017[0], Arg7017_1 = Arg7017[1], Arg7017_2 = Arg7017[2], Arg7017_3 = Arg7017[3], Arg7017_4 = Arg7017[4], Arg7017_5 = Arg7017[5], Arg7017_6 = Arg7017[6];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.findallhelp"], [Arg7017_1, Arg7017_2, Arg7017_3, Arg7017_4, Arg7017_5, Arg7017_6]);})}, 7, [Arg7015_0, Arg7015_1, Arg7015_2, Arg7015_3, Arg7015_4, Arg7015_5, Arg7015_6], undefined]]);})}, 7, [R0, Arg6735_0, Arg6735_1, Arg6735_2, R1, Arg6735_3, Arg6735_4], undefined]]);}))}, 5, [], "findall"];

Shen.fns["shen.findallhelp"] = [Shen.type_func, function shen_user_lambda7019(Arg6735) {
  if (Arg6735.length < 6) return [Shen.type_func, shen_user_lambda7019, 6, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3], Arg6735_4 = Arg6735[4], Arg6735_5 = Arg6735[5];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((Shen.call(Shen.fns["shen.incinfs"], []),
  (R0 = Shen.call(Shen.fns["call"], [Arg6735_1, Arg6735_4, [Shen.type_func, function shen_user_lambda7021(Arg7020) {
  if (Arg7020.length < 6) return [Shen.type_func, shen_user_lambda7021, 6, Arg7020];
  var Arg7020_0 = Arg7020[0], Arg7020_1 = Arg7020[1], Arg7020_2 = Arg7020[2], Arg7020_3 = Arg7020[3], Arg7020_4 = Arg7020[4], Arg7020_5 = Arg7020[5];
  return (function() {
  return Shen.call_tail(Shen.fns["shen.remember"], [Arg7020_3, Arg7020_1, Arg7020_4, [Shen.type_func, function shen_user_lambda7023(Arg7022) {
  if (Arg7022.length < 4) return [Shen.type_func, shen_user_lambda7023, 4, Arg7022];
  var Arg7022_0 = Arg7022[0], Arg7022_1 = Arg7022[1], Arg7022_2 = Arg7022[2], Arg7022_3 = Arg7022[3];
  return (function() {
  return Shen.call_tail(Shen.fns["fwhen"], [false, Arg7022_2, Arg7022_3]);})}, 4, [Arg7020_3, Arg7020_1, Arg7020_4, Arg7020_5], undefined]]);})}, 6, [Arg6735_1, Arg6735_0, Arg6735_2, Arg6735_3, Arg6735_4, Arg6735_5], undefined]]))),
  ((Shen.unwind_tail(Shen.$eq$(R0, false)))
  ? (Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [Arg6735_2, (Shen.globals[Shen.call(Shen.fns["shen.lazyderef"], [Arg6735_3, Arg6735_4])[1]]), Arg6735_4, Arg6735_5]);}))
  : R0))}, 6, [], "shen.findallhelp"];

Shen.fns["shen.remember"] = [Shen.type_func, function shen_user_lambda7024(Arg6735) {
  if (Arg6735.length < 4) return [Shen.type_func, shen_user_lambda7024, 4, Arg6735];
  var Arg6735_0 = Arg6735[0], Arg6735_1 = Arg6735[1], Arg6735_2 = Arg6735[2], Arg6735_3 = Arg6735[3];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return ((R0 = Shen.call(Shen.fns["shen.newpv"], [Arg6735_2])),
  Shen.call(Shen.fns["shen.incinfs"], []),
  (function() {
  return Shen.call_tail(Shen.fns["bind"], [R0, (Shen.globals[Shen.call(Shen.fns["shen.deref"], [Arg6735_0, Arg6735_2])[1]] = [Shen.type_cons, Shen.call(Shen.fns["shen.deref"], [Arg6735_1, Arg6735_2]), (Shen.globals[Shen.call(Shen.fns["shen.deref"], [Arg6735_0, Arg6735_2])[1]])]), Arg6735_2, Arg6735_3]);}))}, 4, [], "shen.remember"];

Shen.call_toplevel(function js$dot$shen_js_toplevel7025(Arg6735) {
  if (Arg6735.length < 0) return [Shen.type_func, js$dot$shen_js_toplevel7025, 0, Arg6735];
  var R0, R1, R2, R3, R4, R5, R6, R7, R8;
  return []});



